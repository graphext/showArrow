{"version":3,"sources":["node_modules/flatbuffers/js/flatbuffers.mjs","node_modules/text-encoding-utf-8/lib/encoding.lib.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/buffer/index.js","util/utf8.ts","io/interfaces.ts","util/compat.ts","util/buffer.ts","io/adapters.ts","vector.ts","fb/Schema.ts","fb/Message.ts","enum.ts","util/bit.ts","visitor.ts","visitor/typecomparator.ts","type.ts","data.ts","util/pretty.ts","builder/valid.ts","builder/buffer.ts","builder.ts","builder/bool.ts","builder/null.ts","builder/date.ts","builder/decimal.ts","builder/dictionary.ts","builder/fixedsizebinary.ts","util/math.ts","builder/float.ts","util/bn.ts","builder/int.ts","builder/time.ts","builder/timestamp.ts","builder/interval.ts","builder/binary.ts","builder/utf8.ts","builder/run.ts","vector/row.ts","util/vector.ts","vector/chunked.ts","column.ts","util/args.ts","schema.ts","builder/list.ts","builder/fixedsizelist.ts","builder/map.ts","builder/struct.ts","builder/union.ts","visitor/set.ts","visitor/builderctor.ts","builder/index.ts","fb/File.ts","ipc/metadata/file.ts","io/stream.ts","io/file.ts","util/int.ts","visitor/vectorloader.ts","visitor/typeassembler.ts","ipc/metadata/json.ts","ipc/metadata/message.ts","ipc/message.ts","visitor/vectorassembler.ts","visitor/jsontypeassembler.ts","visitor/jsonvectorassembler.ts","ipc/writer.ts","util/recordbatch.ts","vector/base.ts","vector/binary.ts","vector/bool.ts","vector/date.ts","vector/decimal.ts","vector/dictionary.ts","vector/fixedsizebinary.ts","vector/fixedsizelist.ts","vector/float.ts","vector/interval.ts","vector/int.ts","vector/list.ts","vector/map.ts","vector/null.ts","vector/struct.ts","vector/timestamp.ts","vector/time.ts","vector/union.ts","vector/utf8.ts","util/fn.ts","visitor/get.ts","visitor/indexof.ts","visitor/iterator.ts","visitor/toarray.ts","visitor/bytewidth.ts","visitor/vectorctor.ts","vector/index.ts","table.ts","recordbatch.ts","ipc/reader.ts","io/whatwg/iterable.ts","io/whatwg/builder.ts","io/whatwg/reader.ts","io/whatwg/writer.ts","compute/predicate.ts","compute/dataframe.ts","Arrow.ts","Arrow.dom.ts","dist/index.js"],"names":["flatbuffers","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","create","ZERO","prototype","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","i","writeInt8","value","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","Error","notNested","new_buf_size","nbb","setPosition","set","startObject","numfields","endObject","vtableloc","trimmed_size","standard_fields","len","existing_vtable","vt1","outer_loop","length","vt2","readInt16","j","push","finish","root_table","opt_file_identifier","file_identifier","charCodeAt","requiredField","table","field","table_start","vtable_start","readInt32","ok","startVector","elem_size","num_elems","alignment","endVector","createString","s","utf8","codePoint","a","b","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","String","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","c","d","__indirect","__vector","__vector_len","__has_identifier","ident","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","renderHeader","ds","thead","columns","tr","document","createElement","appendChild","th","_i","columns_1","col","th_1","innerText","renderBody","tbody","td","toString","row","get","renderCell","getValue","data","JSON","stringify","renderTable","querySelector","innerHTML","columnNames","schema","fields","map","name","renderControls","stringifyMetadata","Array","from","metadata","entries","_a","k","parse","join","metadataDiv","checkbox","messageBox","downloadLink","href","style","display","onchange","checked","cleanTable","console","log","showArrow","url","fetch","window","main","_this","button","input","params","URLSearchParams","location","search","has","downloadAndShow","error_1","alert","message","onclick","onkeydown","ev","key"],"mappings":"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","file":"dist.de44d8ea.js","sourceRoot":"..","sourcesContent":["/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from './buffer';\nimport {\n    TextDecoder as TextDecoderPolyfill,\n    TextEncoder as TextEncoderPolyfill,\n} from 'text-encoding-utf-8';\n\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n\n/** @ignore */\nexport const decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer?: ArrayBuffer | ArrayBufferView) => decoder.decode(buffer);\n    }\n    return (input: ArrayBufferLike | ArrayBufferView) => {\n        const { buffer, byteOffset, length } = toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : TextDecoderPolyfill);\n\n/** @ignore */\nexport const encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value?: string) => encoder.encode(value);\n    }\n    return (input = '') => toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : TextEncoderPolyfill);\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\n\n/** @ignore */\nexport const ITERATOR_DONE: any = Object.freeze({ done: true, value: void (0) });\n\n/** @ignore */\nexport type FileHandle = import('fs').promises.FileHandle;\n/** @ignore */\nexport type ArrowJSONLike = { schema: any; batches?: any[]; dictionaries?: any[]; };\n/** @ignore */\nexport type ReadableDOMStreamOptions = { type: 'bytes' | undefined, autoAllocateChunkSize?: number, highWaterMark?: number };\n\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(private _json: ArrowJSONLike) {}\n    public get schema(): any { return this._json['schema']; }\n    public get batches(): any[] { return (this._json['batches'] || []) as any[]; }\n    public get dictionaries(): any[] { return (this._json['dictionaries'] || []) as any[]; }\n}\n\n/** @ignore */\nexport interface Readable<T> {\n\n    readonly closed: Promise<void>;\n    cancel(reason?: any): Promise<void>;\n\n    read(size?: number | null): Promise<T | null>;\n    peek(size?: number | null): Promise<T | null>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(size?: number | null): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nexport interface Writable<T> {\n    readonly closed: Promise<void>;\n    close(): void;\n    write(chunk: T): void;\n    abort(reason?: any): void;\n}\n\n/** @ignore */\nexport interface ReadableWritable<TReadable, TWritable> extends Readable<TReadable>, Writable<TWritable> {\n    [Symbol.asyncIterator](): AsyncIterableIterator<TReadable>;\n    toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<TReadable>;\n    toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n}\n\n/** @ignore */\nexport abstract class ReadableInterop<T> {\n\n    public abstract toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<T>;\n    public abstract toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n\n    public tee(): [ReadableStream<T>, ReadableStream<T>] {\n        return this._getDOMStream().tee();\n    }\n    public pipe<R extends NodeJS.WritableStream>(writable: R, options?: { end?: boolean; }) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    public pipeTo(writable: WritableStream<T>, options?: PipeOptions) { return this._getDOMStream().pipeTo(writable, options); }\n    public pipeThrough<R extends ReadableStream<any>>(duplex: { writable: WritableStream<T>, readable: R }, options?: PipeOptions) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n\n    protected _DOMStream?: ReadableStream<T>;\n    private _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n\n    protected _nodeStream?: import('stream').Readable;\n    private _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n\n/** @ignore */\ntype Resolution<T> = { resolve: (value?: T | PromiseLike<T>) => void; reject: (reason?: any) => void; };\n\n/** @ignore */\nexport class AsyncQueue<TReadable = Uint8Array, TWritable = TReadable> extends ReadableInterop<TReadable>\n    implements AsyncIterableIterator<TReadable>, ReadableWritable<TReadable, TWritable> {\n\n    protected _values: TWritable[] = [];\n    protected _error?: { error: any; };\n    protected _closedPromise: Promise<void>;\n    protected _closedPromiseResolve?: (value?: any) => void;\n    protected resolvers: Resolution<IteratorResult<TReadable>>[] = [];\n\n    constructor() {\n        super();\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public write(value: TWritable) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift()!.resolve({ done: false, value } as any));\n        }\n    }\n    public abort(value?: any) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift()!.reject({ done: true, value }));\n        }\n    }\n    public close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift()!.resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n\n    public [Symbol.asyncIterator]() { return this; }\n    public toDOMStream(options?: ReadableDOMStreamOptions) {\n        return streamAdapters.toDOMStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public toNodeStream(options?: import('stream').ReadableOptions) {\n        return streamAdapters.toNodeStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public async throw(_?: any) { await this.abort(_); return ITERATOR_DONE; }\n    public async return(_?: any) { await this.close(); return ITERATOR_DONE; }\n\n    public async read(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'peek')).value; }\n    public next(..._args: any[]): Promise<IteratorResult<TReadable>> {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift()! } as any);\n        } else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        } else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        } else {\n            return new Promise<IteratorResult<TReadable>>((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n\n    protected _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ReadableInterop, ArrowJSONLike } from '../io/interfaces';\n\n/** @ignore */\ntype FSReadStream = import('fs').ReadStream;\n/** @ignore */\ntype FileHandle = import('fs').promises.FileHandle;\n\n/** @ignore */\nexport interface Subscription {\n    unsubscribe: () => void;\n}\n\n/** @ignore */\nexport interface Observer<T> {\n    closed?: boolean;\n    next: (value: T) => void;\n    error: (err: any) => void;\n    complete: () => void;\n}\n\n/** @ignore */\nexport interface Observable<T> {\n    subscribe: (observer: Observer<T>) => Subscription;\n}\n\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [<any> BigIntUnavailable, false];\n})() as [BigIntConstructor, boolean];\n\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [<any> BigInt64ArrayUnavailable, false];\n})() as [BigInt64ArrayConstructor, boolean];\n\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [<any> BigUint64ArrayUnavailable, false];\n})() as [BigUint64ArrayConstructor, boolean];\n\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n\n/** @ignore */ const isNumber = (x: any) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x: any) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x: any) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x: any): x is Object => x != null && Object(x) === x;\n\n/** @ignore */\nexport const isPromise = <T = any>(x: any): x is PromiseLike<T> => {\n    return isObject(x) && isFunction(x.then);\n};\n\n/** @ignore */\nexport const isObservable = <T = any>(x: any): x is Observable<T> => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n\n/** @ignore */\nexport const isIterable = <T = any>(x: any): x is Iterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n\n/** @ignore */\nexport const isAsyncIterable = <T = any>(x: any): x is AsyncIterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n\n/** @ignore */\nexport const isArrowJSON = (x: any): x is ArrowJSONLike  => {\n    return isObject(x) && isObject(x['schema']);\n};\n\n/** @ignore */\nexport const isArrayLike = <T = any>(x: any): x is ArrayLike<T> => {\n    return isObject(x) && isNumber(x['length']);\n};\n\n/** @ignore */\nexport const isIteratorResult = <T = any>(x: any): x is IteratorResult<T> => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n\n/** @ignore */\nexport const isUnderlyingSink = <T = any>(x: any): x is UnderlyingSink<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n\n/** @ignore */\nexport const isFileHandle = (x: any): x is FileHandle => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n\n/** @ignore */\nexport const isFSReadStream = (x: any): x is FSReadStream => {\n    return isReadableNodeStream(x) && isNumber((<any> x)['bytesRead']);\n};\n\n/** @ignore */\nexport const isFetchResponse = (x: any): x is Response => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n\n/** @ignore */\nexport const isWritableDOMStream = <T = any>(x: any): x is WritableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableDOMStream = <T = any>(x: any): x is ReadableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isWritableNodeStream = (x: any): x is NodeJS.WritableStream => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableNodeStream = (x: any): x is NodeJS.ReadableStream => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport { encodeUtf8 } from '../util/utf8';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks: Uint8Array[]) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset: number, yOffset: number, xLen: number, yLen: number;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n\n/** @ignore */\nexport function memcpy<TTarget extends ArrayBufferView, TSource extends ArrayBufferView>(target: TTarget, source: TSource, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n\n/** @ignore */\nexport function joinUint8Arrays(chunks: Uint8Array[], size?: number | null): [Uint8Array, Uint8Array[], number] {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source: Uint8Array, sliced: Uint8Array, buffer: Uint8Array | void;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            } else if (sliced.length === source.length) { index++; }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\n\n/** @ignore */\nexport type ArrayBufferViewInput = ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined  |\n                    IteratorResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> |\n          ReadableStreamReadResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> ;\n\n/** @ignore */\nexport function toArrayBufferView<T extends TypedArray>(ArrayBufferViewCtor: TypedArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView<T extends BigIntArray>(ArrayBufferViewCtor: BigIntArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView(ArrayBufferViewCtor: any, input: ArrayBufferViewInput) {\n\n    let value: any = isIteratorResult(input) ? input.value : input;\n\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) { return new ArrayBufferViewCtor(0); }\n    if (typeof value === 'string') { value = encodeUtf8(value); }\n    if (value instanceof ArrayBuffer) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof SharedArrayBuf) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof ByteBuffer) { return toArrayBufferView(ArrayBufferViewCtor, value.bytes()); }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n\n/** @ignore */ export const toInt8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewIteratorInput = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nexport function* toArrayBufferViewIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewIteratorInput) {\n\n    const wrap = function*<T>(x: T) { yield x; };\n    const buffers: Iterable<ArrayBufferViewInput> =\n                   (typeof source === 'string') ? wrap(source)\n                 : (ArrayBuffer.isView(source)) ? wrap(source)\n              : (source instanceof ArrayBuffer) ? wrap(source)\n           : (source instanceof SharedArrayBuf) ? wrap(source)\n    : !isIterable<ArrayBufferViewInput>(source) ? wrap(source) : source;\n\n    yield* pump((function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewAsyncIteratorInput = AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput> | PromiseLike<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewAsyncIteratorInput): AsyncIterableIterator<T> {\n\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise<ArrayBufferViewInput>(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n\n    const wrap = async function*<T>(x: T) { yield await x; };\n    const emit = async function* <T extends Iterable<any>>(source: T) {\n        yield* pump((function*(it: Iterator<any>) {\n            let r: IteratorResult<any> = <any> null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n\n    const buffers: AsyncIterable<ArrayBufferViewInput> =\n                        (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n                      : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n                   : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n          : isIterable<ArrayBufferViewInput>(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n    : !isAsyncIterable<ArrayBufferViewInput>(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                                                     : source; // otherwise if AsyncIterable, use it\n\n    yield* pump((async function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n\n/** @ignore */\nexport function rebaseValueOffsets(offset: number, length: number, valueOffsets: Int32Array) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n\n/** @ignore */\nexport function compareArrayLike<T extends ArrayLike<any>>(a: T, b: T) {\n    let i = 0, n = a.length;\n    if (n !== b.length) { return false; }\n    if (n > 0) {\n        do { if (a[i] !== b[i]) { return false; } } while (++i < n);\n    }\n    return true;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport {\n    toUint8Array,\n    joinUint8Arrays,\n    ArrayBufferViewInput,\n    toUint8ArrayIterator,\n    toUint8ArrayAsyncIterator\n} from '../util/buffer';\n\nimport { ReadableDOMStreamOptions } from './interfaces';\n\n/** @ignore */\nexport default {\n    fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n        return pump(fromIterable<T>(source));\n    },\n    fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromAsyncIterable<T>(source));\n    },\n    fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromDOMStream<T>(source));\n    },\n    fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: import('stream').ReadableOptions): import('stream').Readable {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nfunction* fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n\n/** @ignore */\nasync function* fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done = false, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    } finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n\n/** @ignore */\nclass AdaptiveByteReader<T extends ArrayBufferViewInput> {\n\n    private supportsBYOB: boolean;\n    private byobReader: ReadableStreamBYOBReader | null = null;\n    private defaultReader: ReadableStreamDefaultReader<T> | null = null;\n    private reader: ReadableStreamBYOBReader | ReadableStreamDefaultReader<T> | null;\n\n    constructor(private source: ReadableStream<T>) {\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        } catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n\n    get closed(): Promise<void> {\n        return this.reader ? this.reader['closed'].catch(() => {}) : Promise.resolve();\n    }\n\n    releaseLock(): void {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n\n    async cancel(reason?: any): Promise<void> {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => {}));\n        source && (source['locked'] && this.releaseLock());\n    }\n\n    async read(size?: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = toUint8Array(result as ReadableStreamReadResult<Uint8Array>));\n        return result as ReadableStreamReadResult<Uint8Array>;\n    }\n\n    private getDefaultReader() {\n        if (this.byobReader) { this.releaseLock(); }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.defaultReader);\n    }\n\n    private getBYOBReader() {\n        if (this.defaultReader) { this.releaseLock(); }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.byobReader);\n    }\n\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    private async readFromBYOBReader(size: number) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n\n/** @ignore */\nasync function readInto(reader: ReadableStreamBYOBReader, buffer: ArrayBufferLike, offset: number, size: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n\n/** @ignore */\ntype EventName = 'end' | 'error' | 'readable';\n/** @ignore */\ntype Event = [EventName, (_: any) => void, Promise<[EventName, Error | null]>];\n/** @ignore */\nconst onEvent = <T extends string>(stream: NodeJS.ReadableStream, event: T) => {\n    let handler = (_: any) => resolve([event, _]);\n    let resolve: (value?: [T, any] | PromiseLike<[T, any]>) => void;\n    return [event, handler, new Promise<[T, any]>(\n        (r) => (resolve = r) && stream['once'](event, handler)\n    )] as Event;\n};\n\n/** @ignore */\nasync function* fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n\n    let events: Event[] = [];\n    let event: EventName = 'error';\n    let done = false, err: Error | null = null;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array | Buffer | string;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield <any> null);\n\n    // ignore stdin if it's a TTY\n    if ((stream as any)['isTTY']) { return yield new Uint8Array(0); }\n\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n\n        do {\n            events[2] = onEvent(stream, 'readable');\n\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') { break; }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read'](undefined));\n                } else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n\n    function cleanup<T extends Error | null | void>(events: Event[], err?: T) {\n        buffer = buffers = <any> null;\n        return new Promise<T>(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = (stream as any)['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            } catch (e) { err = e || err; } finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { DataType } from './type';\nimport { Chunked } from './vector/chunked';\n\n/** @ignore */\nexport interface Clonable<R extends AbstractVector> {\n    clone(...args: any[]): R;\n}\n\n/** @ignore */\nexport interface Sliceable<R extends AbstractVector> {\n    slice(begin?: number, end?: number): R;\n}\n\n/** @ignore */\nexport interface Applicative<T extends DataType, R extends Chunked> {\n    concat(...others: Vector<T>[]): R;\n    readonly [Symbol.isConcatSpreadable]: boolean;\n}\n\nexport interface AbstractVector<T extends DataType = any>\n    extends Clonable<Vector<T>>,\n            Sliceable<Vector<T>>,\n            Applicative<T, Chunked<T>> {\n\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\nexport abstract class AbstractVector<T extends DataType = any> implements Iterable<T['TValue'] | null> {\n\n    public abstract readonly data: Data<T>;\n    public abstract readonly type: T;\n    public abstract readonly typeId: T['TType'];\n    public abstract readonly length: number;\n    public abstract readonly stride: number;\n    public abstract readonly nullCount: number;\n    public abstract readonly byteLength: number;\n    public abstract readonly numChildren: number;\n\n    public abstract readonly ArrayType: T['ArrayType'];\n\n    public abstract isValid(index: number): boolean;\n    public abstract get(index: number): T['TValue'] | null;\n    public abstract set(index: number, value: T['TValue'] | null): void;\n    public abstract indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n    public abstract [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n\n    public abstract toArray(): T['TArray'];\n    public abstract getChildAt<R extends DataType = any>(index: number): Vector<R> | null;\n}\n\nexport { AbstractVector as Vector };\n","/* tslint:disable:class-name */\n\n// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MetadataVersion {\n        /**\n         * 0.1.0\n         */\n        V1 = 0,\n\n        /**\n         * 0.2.0\n         */\n        V2 = 1,\n\n        /**\n         * 0.3.0 -> 0.7.1\n         */\n        V3 = 2,\n\n        /**\n         * >= 0.8.0\n         */\n        V4 = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum UnionMode {\n        Sparse = 0,\n        Dense = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Precision {\n        HALF = 0,\n        SINGLE = 1,\n        DOUBLE = 2\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum DateUnit {\n        DAY = 0,\n        MILLISECOND = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum TimeUnit {\n        SECOND = 0,\n        MILLISECOND = 1,\n        MICROSECOND = 2,\n        NANOSECOND = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum IntervalUnit {\n        YEAR_MONTH = 0,\n        DAY_TIME = 1\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Type {\n        NONE = 0,\n        Null = 1,\n        Int = 2,\n        FloatingPoint = 3,\n        Binary = 4,\n        Utf8 = 5,\n        Bool = 6,\n        Decimal = 7,\n        Date = 8,\n        Time = 9,\n        Timestamp = 10,\n        Interval = 11,\n        List = 12,\n        Struct_ = 13,\n        Union = 14,\n        FixedSizeBinary = 15,\n        FixedSizeList = 16,\n        Map = 17,\n        Duration = 18,\n        LargeBinary = 19,\n        LargeUtf8 = 20,\n        LargeList = 21\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Endianness {\n        Little = 0,\n        Big = 1\n    }\n}\n\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Null {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Null\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Null {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Null= obj\n         * @returns Null\n         */\n        static getRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n            return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startNull(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Null.startNull(builder);\n            return Null.endNull(builder);\n        }\n    }\n}\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Struct_ {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Struct_\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Struct_ {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Struct_= obj\n         * @returns Struct_\n         */\n        static getRootAsStruct_(bb: flatbuffers.ByteBuffer, obj?: Struct_): Struct_ {\n            return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startStruct_(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Struct_.startStruct_(builder);\n            return Struct_.endStruct_(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class List {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns List\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): List {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param List= obj\n         * @returns List\n         */\n        static getRootAsList(bb: flatbuffers.ByteBuffer, obj?: List): List {\n            return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            List.startList(builder);\n            return List.endList(builder);\n        }\n    }\n}\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeList= obj\n         * @returns LargeList\n         */\n        static getRootAsLargeList(bb: flatbuffers.ByteBuffer, obj?: LargeList): LargeList {\n            return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeList.startLargeList(builder);\n            return LargeList.endLargeList(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeList= obj\n         * @returns FixedSizeList\n         */\n        static getRootAsFixedSizeList(bb: flatbuffers.ByteBuffer, obj?: FixedSizeList): FixedSizeList {\n            return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of list items per value\n         *\n         * @returns number\n         */\n        listSize(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeList(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number listSize\n         */\n        static addListSize(builder: flatbuffers.Builder, listSize: number) {\n            builder.addFieldInt32(0, listSize, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeList(builder: flatbuffers.Builder, listSize: number): flatbuffers.Offset {\n            FixedSizeList.startFixedSizeList(builder);\n            FixedSizeList.addListSize(builder, listSize);\n            return FixedSizeList.endFixedSizeList(builder);\n        }\n    }\n}\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Map {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Map\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Map {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Map= obj\n         * @returns Map\n         */\n        static getRootAsMap(bb: flatbuffers.ByteBuffer, obj?: Map): Map {\n            return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Set to true if the keys within each value are sorted\n         *\n         * @returns boolean\n         */\n        keysSorted(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMap(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean keysSorted\n         */\n        static addKeysSorted(builder: flatbuffers.Builder, keysSorted: boolean) {\n            builder.addFieldInt8(0, +keysSorted, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMap(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createMap(builder: flatbuffers.Builder, keysSorted: boolean): flatbuffers.Offset {\n            Map.startMap(builder);\n            Map.addKeysSorted(builder, keysSorted);\n            return Map.endMap(builder);\n        }\n    }\n}\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Union {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Union\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Union {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Union= obj\n         * @returns Union\n         */\n        static getRootAsUnion(bb: flatbuffers.ByteBuffer, obj?: Union): Union {\n            return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.UnionMode\n         */\n        mode(): org.apache.arrow.flatbuf.UnionMode {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n        }\n\n        /**\n         * @param number index\n         * @returns number\n         */\n        typeIds(index: number): number | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n        }\n\n        /**\n         * @returns number\n         */\n        typeIdsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns Int32Array\n         */\n        typeIdsArray(): Int32Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUnion(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.UnionMode mode\n         */\n        static addMode(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode) {\n            builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeIdsOffset\n         */\n        static addTypeIds(builder: flatbuffers.Builder, typeIdsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, typeIdsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createTypeIdsVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addInt32(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startTypeIdsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUnion(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUnion(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode, typeIdsOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Union.startUnion(builder);\n            Union.addMode(builder, mode);\n            Union.addTypeIds(builder, typeIdsOffset);\n            return Union.endUnion(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Int {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Int\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Int {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Int= obj\n         * @returns Int\n         */\n        static getRootAsInt(bb: flatbuffers.ByteBuffer, obj?: Int): Int {\n            return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns boolean\n         */\n        isSigned(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInt(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(0, bitWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isSigned\n         */\n        static addIsSigned(builder: flatbuffers.Builder, isSigned: boolean) {\n            builder.addFieldInt8(1, +isSigned, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInt(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInt(builder: flatbuffers.Builder, bitWidth: number, isSigned: boolean): flatbuffers.Offset {\n            Int.startInt(builder);\n            Int.addBitWidth(builder, bitWidth);\n            Int.addIsSigned(builder, isSigned);\n            return Int.endInt(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FloatingPoint {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FloatingPoint\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FloatingPoint {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FloatingPoint= obj\n         * @returns FloatingPoint\n         */\n        static getRootAsFloatingPoint(bb: flatbuffers.ByteBuffer, obj?: FloatingPoint): FloatingPoint {\n            return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Precision\n         */\n        precision(): org.apache.arrow.flatbuf.Precision {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFloatingPoint(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Precision precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision) {\n            builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFloatingPoint(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFloatingPoint(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision): flatbuffers.Offset {\n            FloatingPoint.startFloatingPoint(builder);\n            FloatingPoint.addPrecision(builder, precision);\n            return FloatingPoint.endFloatingPoint(builder);\n        }\n    }\n}\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Utf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Utf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Utf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Utf8= obj\n         * @returns Utf8\n         */\n        static getRootAsUtf8(bb: flatbuffers.ByteBuffer, obj?: Utf8): Utf8 {\n            return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Utf8.startUtf8(builder);\n            return Utf8.endUtf8(builder);\n        }\n    }\n}\n/**\n * Opaque binary data\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Binary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Binary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Binary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Binary= obj\n         * @returns Binary\n         */\n        static getRootAsBinary(bb: flatbuffers.ByteBuffer, obj?: Binary): Binary {\n            return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Binary.startBinary(builder);\n            return Binary.endBinary(builder);\n        }\n    }\n}\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeUtf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeUtf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeUtf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeUtf8= obj\n         * @returns LargeUtf8\n         */\n        static getRootAsLargeUtf8(bb: flatbuffers.ByteBuffer, obj?: LargeUtf8): LargeUtf8 {\n            return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeUtf8.startLargeUtf8(builder);\n            return LargeUtf8.endLargeUtf8(builder);\n        }\n    }\n}\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeBinary= obj\n         * @returns LargeBinary\n         */\n        static getRootAsLargeBinary(bb: flatbuffers.ByteBuffer, obj?: LargeBinary): LargeBinary {\n            return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeBinary.startLargeBinary(builder);\n            return LargeBinary.endLargeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeBinary= obj\n         * @returns FixedSizeBinary\n         */\n        static getRootAsFixedSizeBinary(bb: flatbuffers.ByteBuffer, obj?: FixedSizeBinary): FixedSizeBinary {\n            return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of bytes per value\n         *\n         * @returns number\n         */\n        byteWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number byteWidth\n         */\n        static addByteWidth(builder: flatbuffers.Builder, byteWidth: number) {\n            builder.addFieldInt32(0, byteWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeBinary(builder: flatbuffers.Builder, byteWidth: number): flatbuffers.Offset {\n            FixedSizeBinary.startFixedSizeBinary(builder);\n            FixedSizeBinary.addByteWidth(builder, byteWidth);\n            return FixedSizeBinary.endFixedSizeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Bool {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Bool\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Bool {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Bool= obj\n         * @returns Bool\n         */\n        static getRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {\n            return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBool(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Bool.startBool(builder);\n            return Bool.endBool(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Decimal {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Decimal\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Decimal {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Decimal= obj\n         * @returns Decimal\n         */\n        static getRootAsDecimal(bb: flatbuffers.ByteBuffer, obj?: Decimal): Decimal {\n            return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Total number of decimal digits\n         *\n         * @returns number\n         */\n        precision(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Number of digits after the decimal point \".\"\n         *\n         * @returns number\n         */\n        scale(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDecimal(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: number) {\n            builder.addFieldInt32(0, precision, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number scale\n         */\n        static addScale(builder: flatbuffers.Builder, scale: number) {\n            builder.addFieldInt32(1, scale, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDecimal(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDecimal(builder: flatbuffers.Builder, precision: number, scale: number): flatbuffers.Offset {\n            Decimal.startDecimal(builder);\n            Decimal.addPrecision(builder, precision);\n            Decimal.addScale(builder, scale);\n            return Decimal.endDecimal(builder);\n        }\n    }\n}\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Date {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Date\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Date {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Date= obj\n         * @returns Date\n         */\n        static getRootAsDate(bb: flatbuffers.ByteBuffer, obj?: Date): Date {\n            return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.DateUnit\n         */\n        unit(): org.apache.arrow.flatbuf.DateUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDate(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.DateUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDate(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDate(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit): flatbuffers.Offset {\n            Date.startDate(builder);\n            Date.addUnit(builder, unit);\n            return Date.endDate(builder);\n        }\n    }\n}\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Time {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Time\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Time {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Time= obj\n         * @returns Time\n         */\n        static getRootAsTime(bb: flatbuffers.ByteBuffer, obj?: Time): Time {\n            return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 32;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTime(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(1, bitWidth, 32);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTime(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTime(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, bitWidth: number): flatbuffers.Offset {\n            Time.startTime(builder);\n            Time.addUnit(builder, unit);\n            Time.addBitWidth(builder, bitWidth);\n            return Time.endTime(builder);\n        }\n    }\n}\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Timestamp {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Timestamp\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Timestamp {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Timestamp= obj\n         * @returns Timestamp\n         */\n        static getRootAsTimestamp(bb: flatbuffers.ByteBuffer, obj?: Timestamp): Timestamp {\n            return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n        }\n\n        /**\n         * The time zone is a string indicating the name of a time zone, one of:\n         *\n         * * As used in the Olson time zone database (the \"tz database\" or\n         *   \"tzdata\"), such as \"America/New_York\"\n         * * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n         *\n         * Whether a timezone string is present indicates different semantics about\n         * the data:\n         *\n         * * If the time zone is null or equal to an empty string, the data is \"time\n         *   zone naive\" and shall be displayed *as is* to the user, not localized\n         *   to the locale of the user. This data can be though of as UTC but\n         *   without having \"UTC\" as the time zone, it is not considered to be\n         *   localized to any time zone\n         *\n         * * If the time zone is set to a valid value, values can be displayed as\n         *   \"localized\" to that time zone, even though the underlying 64-bit\n         *   integers are identical to the same data stored in UTC. Converting\n         *   between time zones is a metadata-only operation and does not change the\n         *   underlying values\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        timezone(): string | null;\n        timezone(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        timezone(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTimestamp(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset timezoneOffset\n         */\n        static addTimezone(builder: flatbuffers.Builder, timezoneOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, timezoneOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTimestamp(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTimestamp(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, timezoneOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Timestamp.startTimestamp(builder);\n            Timestamp.addUnit(builder, unit);\n            Timestamp.addTimezone(builder, timezoneOffset);\n            return Timestamp.endTimestamp(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Interval {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Interval\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Interval {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Interval= obj\n         * @returns Interval\n         */\n        static getRootAsInterval(bb: flatbuffers.ByteBuffer, obj?: Interval): Interval {\n            return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.IntervalUnit\n         */\n        unit(): org.apache.arrow.flatbuf.IntervalUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInterval(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.IntervalUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInterval(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInterval(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit): flatbuffers.Offset {\n            Interval.startInterval(builder);\n            Interval.addUnit(builder, unit);\n            return Interval.endInterval(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Duration {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Duration\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Duration {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Duration= obj\n         * @returns Duration\n         */\n        static getRootAsDuration(bb: flatbuffers.ByteBuffer, obj?: Duration): Duration {\n            return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDuration(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDuration(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDuration(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit): flatbuffers.Offset {\n            Duration.startDuration(builder);\n            Duration.addUnit(builder, unit);\n            return Duration.endDuration(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class KeyValue {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns KeyValue\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): KeyValue {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param KeyValue= obj\n         * @returns KeyValue\n         */\n        static getRootAsKeyValue(bb: flatbuffers.ByteBuffer, obj?: KeyValue): KeyValue {\n            return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        key(): string | null;\n        key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        key(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        value(): string | null;\n        value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        value(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startKeyValue(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset keyOffset\n         */\n        static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, keyOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset valueOffset\n         */\n        static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, valueOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endKeyValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createKeyValue(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n            KeyValue.startKeyValue(builder);\n            KeyValue.addKey(builder, keyOffset);\n            KeyValue.addValue(builder, valueOffset);\n            return KeyValue.endKeyValue(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryEncoding {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryEncoding\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryEncoding {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryEncoding= obj\n         * @returns DictionaryEncoding\n         */\n        static getRootAsDictionaryEncoding(bb: flatbuffers.ByteBuffer, obj?: DictionaryEncoding): DictionaryEncoding {\n            return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * The known dictionary id in the application where this data is used. In\n         * the file or streaming formats, the dictionary ids are found in the\n         * DictionaryBatch messages\n         *\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * The dictionary indices are constrained to be positive integers. If this\n         * field is null, the indices must be signed int32\n         *\n         * @param org.apache.arrow.flatbuf.Int= obj\n         * @returns org.apache.arrow.flatbuf.Int|null\n         */\n        indexType(obj?: org.apache.arrow.flatbuf.Int): org.apache.arrow.flatbuf.Int | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * By default, dictionaries are not ordered, or the order does not have\n         * semantic meaning. In some statistical, applications, dictionary-encoding\n         * is used to represent ordered categorical data, and we provide a way to\n         * preserve that metadata here\n         *\n         * @returns boolean\n         */\n        isOrdered(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryEncoding(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset indexTypeOffset\n         */\n        static addIndexType(builder: flatbuffers.Builder, indexTypeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, indexTypeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isOrdered\n         */\n        static addIsOrdered(builder: flatbuffers.Builder, isOrdered: boolean) {\n            builder.addFieldInt8(2, +isOrdered, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryEncoding(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryEncoding(builder: flatbuffers.Builder, id: flatbuffers.Long, indexTypeOffset: flatbuffers.Offset, isOrdered: boolean): flatbuffers.Offset {\n            DictionaryEncoding.startDictionaryEncoding(builder);\n            DictionaryEncoding.addId(builder, id);\n            DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n            DictionaryEncoding.addIsOrdered(builder, isOrdered);\n            return DictionaryEncoding.endDictionaryEncoding(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Field {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Field\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Field {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Field= obj\n         * @returns Field\n         */\n        static getRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n            return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Name is not required, in i.e. a List\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        name(): string | null;\n        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        name(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * Whether or not this field can contain nulls. Should be true in general.\n         *\n         * @returns boolean\n         */\n        nullable(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Type\n         */\n        typeType(): org.apache.arrow.flatbuf.Type {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n        }\n\n        /**\n         * This is the type of the decoded value if the field is dictionary encoded.\n         *\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        type<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * Present only if the field is dictionary encoded.\n         *\n         * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n         * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n         */\n        dictionary(obj?: org.apache.arrow.flatbuf.DictionaryEncoding): org.apache.arrow.flatbuf.DictionaryEncoding | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * children apply only to nested data types like Struct, List and Union. For\n         * primitive types children will have length 0.\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        children(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        childrenLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * User-defined metadata\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startField(builder: flatbuffers.Builder) {\n            builder.startObject(7);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nameOffset\n         */\n        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, nameOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean nullable\n         */\n        static addNullable(builder: flatbuffers.Builder, nullable: boolean) {\n            builder.addFieldInt8(1, +nullable, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Type typeType\n         */\n        static addTypeType(builder: flatbuffers.Builder, typeType: org.apache.arrow.flatbuf.Type) {\n            builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeOffset\n         */\n        static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, typeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionaryOffset\n         */\n        static addDictionary(builder: flatbuffers.Builder, dictionaryOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, dictionaryOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset childrenOffset\n         */\n        static addChildren(builder: flatbuffers.Builder, childrenOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(5, childrenOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createChildrenVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startChildrenVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(6, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endField(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createField(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, nullable: boolean, typeType: org.apache.arrow.flatbuf.Type, typeOffset: flatbuffers.Offset, dictionaryOffset: flatbuffers.Offset, childrenOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Field.startField(builder);\n            Field.addName(builder, nameOffset);\n            Field.addNullable(builder, nullable);\n            Field.addTypeType(builder, typeType);\n            Field.addType(builder, typeOffset);\n            Field.addDictionary(builder, dictionaryOffset);\n            Field.addChildren(builder, childrenOffset);\n            Field.addCustomMetadata(builder, customMetadataOffset);\n            return Field.endField(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Buffer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Buffer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Buffer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The relative offset into the shared memory page where the bytes for this\n         * buffer starts\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The absolute length (in bytes) of the memory buffer. The memory is found\n         * from offset (inclusive) to offset + length (non-inclusive).\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param flatbuffers.Long length\n         * @returns flatbuffers.Offset\n         */\n        static createBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(length);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Schema {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Schema\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Schema {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Schema= obj\n         * @returns Schema\n         */\n        static getRootAsSchema(bb: flatbuffers.ByteBuffer, obj?: Schema): Schema {\n            return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * endianness of the buffer\n         * it is Little Endian by default\n         * if endianness doesn't match the underlying system then the vectors need to be converted\n         *\n         * @returns org.apache.arrow.flatbuf.Endianness\n         */\n        endianness(): org.apache.arrow.flatbuf.Endianness {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        fields(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        fieldsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startSchema(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Endianness endianness\n         */\n        static addEndianness(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness) {\n            builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset fieldsOffset\n         */\n        static addFields(builder: flatbuffers.Builder, fieldsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, fieldsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createFieldsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endSchema(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishSchemaBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createSchema(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness, fieldsOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Schema.startSchema(builder);\n            Schema.addEndianness(builder, endianness);\n            Schema.addFields(builder, fieldsOffset);\n            Schema.addCustomMetadata(builder, customMetadataOffset);\n            return Schema.endSchema(builder);\n        }\n    }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\nexport namespace org.apache.arrow.flatbuf {\n    export import Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n}\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MessageHeader {\n        NONE = 0,\n        Schema = 1,\n        DictionaryBatch = 2,\n        RecordBatch = 3,\n        Tensor = 4,\n        SparseTensor = 5\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FieldNode {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FieldNode\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FieldNode {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The number of value slots in the Arrow array at this level of a nested\n         * tree\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The number of observed nulls. Fields with null_count == 0 may choose not\n         * to write their physical validity bitmap out as a materialized buffer,\n         * instead setting the length of the bitmap buffer to 0.\n         *\n         * @returns flatbuffers.Long\n         */\n        nullCount(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         * @param flatbuffers.Long null_count\n         * @returns flatbuffers.Offset\n         */\n        static createFieldNode(builder: flatbuffers.Builder, length: flatbuffers.Long, null_count: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(null_count);\n            builder.writeInt64(length);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class RecordBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns RecordBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): RecordBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param RecordBatch= obj\n         * @returns RecordBatch\n         */\n        static getRootAsRecordBatch(bb: flatbuffers.ByteBuffer, obj?: RecordBatch): RecordBatch {\n            return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * number of records / rows. The arrays in the batch should all have this\n         * length\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * Nodes correspond to the pre-ordered flattened logical schema\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.FieldNode= obj\n         * @returns org.apache.arrow.flatbuf.FieldNode\n         */\n        nodes(index: number, obj?: org.apache.arrow.flatbuf.FieldNode): org.apache.arrow.flatbuf.FieldNode | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        nodesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Buffers correspond to the pre-ordered flattened buffer tree\n         *\n         * The number of buffers appended to this list depends on the schema. For\n         * example, most primitive arrays will have 2 buffers, 1 for the validity\n         * bitmap and 1 for the values. For struct arrays, there will only be a\n         * single buffer for the validity (nulls) bitmap\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Buffer= obj\n         * @returns org.apache.arrow.flatbuf.Buffer\n         */\n        buffers(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Buffer): NS7624605610262437867.org.apache.arrow.flatbuf.Buffer | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        buffersLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startRecordBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         */\n        static addLength(builder: flatbuffers.Builder, length: flatbuffers.Long) {\n            builder.addFieldInt64(0, length, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nodesOffset\n         */\n        static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, nodesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset buffersOffset\n         */\n        static addBuffers(builder: flatbuffers.Builder, buffersOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, buffersOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startBuffersVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endRecordBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createRecordBatch(builder: flatbuffers.Builder, length: flatbuffers.Long, nodesOffset: flatbuffers.Offset, buffersOffset: flatbuffers.Offset): flatbuffers.Offset {\n            RecordBatch.startRecordBatch(builder);\n            RecordBatch.addLength(builder, length);\n            RecordBatch.addNodes(builder, nodesOffset);\n            RecordBatch.addBuffers(builder, buffersOffset);\n            return RecordBatch.endRecordBatch(builder);\n        }\n    }\n}\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryBatch= obj\n         * @returns DictionaryBatch\n         */\n        static getRootAsDictionaryBatch(bb: flatbuffers.ByteBuffer, obj?: DictionaryBatch): DictionaryBatch {\n            return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.RecordBatch= obj\n         * @returns org.apache.arrow.flatbuf.RecordBatch|null\n         */\n        data(obj?: org.apache.arrow.flatbuf.RecordBatch): org.apache.arrow.flatbuf.RecordBatch | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * If isDelta is true the values in the dictionary are to be appended to a\n         * dictionary with the indicated id\n         *\n         * @returns boolean\n         */\n        isDelta(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dataOffset\n         */\n        static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, dataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isDelta\n         */\n        static addIsDelta(builder: flatbuffers.Builder, isDelta: boolean) {\n            builder.addFieldInt8(2, +isDelta, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryBatch(builder: flatbuffers.Builder, id: flatbuffers.Long, dataOffset: flatbuffers.Offset, isDelta: boolean): flatbuffers.Offset {\n            DictionaryBatch.startDictionaryBatch(builder);\n            DictionaryBatch.addId(builder, id);\n            DictionaryBatch.addData(builder, dataOffset);\n            DictionaryBatch.addIsDelta(builder, isDelta);\n            return DictionaryBatch.endDictionaryBatch(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Message {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Message\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Message {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Message= obj\n         * @returns Message\n         */\n        static getRootAsMessage(bb: flatbuffers.ByteBuffer, obj?: Message): Message {\n            return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MessageHeader\n         */\n        headerType(): org.apache.arrow.flatbuf.MessageHeader {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n        }\n\n        /**\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        header<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue): NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMessage(builder: flatbuffers.Builder) {\n            builder.startObject(5);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MessageHeader headerType\n         */\n        static addHeaderType(builder: flatbuffers.Builder, headerType: org.apache.arrow.flatbuf.MessageHeader) {\n            builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset headerOffset\n         */\n        static addHeader(builder: flatbuffers.Builder, headerOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, headerOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long bodyLength\n         */\n        static addBodyLength(builder: flatbuffers.Builder, bodyLength: flatbuffers.Long) {\n            builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMessage(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishMessageBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createMessage(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, headerType: org.apache.arrow.flatbuf.MessageHeader, headerOffset: flatbuffers.Offset, bodyLength: flatbuffers.Long, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Message.startMessage(builder);\n            Message.addVersion(builder, version);\n            Message.addHeaderType(builder, headerType);\n            Message.addHeader(builder, headerOffset);\n            Message.addBodyLength(builder, bodyLength);\n            Message.addCustomMetadata(builder, customMetadataOffset);\n            return Message.endMessage(builder);\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as Schema_ from './fb/Schema';\nimport * as Message_ from './fb/Message';\n\nexport import ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexport import DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexport import TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexport import Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexport import UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexport import IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexport import MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport import MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n    /** The default placeholder type */\n    NONE            =  0,\n    /** A NULL type having no physical storage */\n    Null            =  1,\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Int             =  2,\n    /** 2, 4, or 8-byte floating point value */\n    Float           =  3,\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Binary          =  4,\n    /** UTF8 variable-length string as List<Char> */\n    Utf8            =  5,\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Bool            =  6,\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Decimal         =  7,\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Date            =  8,\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Time            =  9,\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Timestamp       = 10,\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Interval        = 11,\n    /** A list of some logical data type */\n    List            = 12,\n    /** Struct of logical types */\n    Struct          = 13,\n    /** Union of logical types */\n    Union           = 14,\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    FixedSizeBinary = 15,\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    FixedSizeList   = 16,\n    /** Map of named logical types */\n    Map             = 17,\n\n    /** Dictionary aka Category type */\n    Dictionary            = -1,\n    Int8                  = -2,\n    Int16                 = -3,\n    Int32                 = -4,\n    Int64                 = -5,\n    Uint8                 = -6,\n    Uint16                = -7,\n    Uint32                = -8,\n    Uint64                = -9,\n    Float16               = -10,\n    Float32               = -11,\n    Float64               = -12,\n    DateDay               = -13,\n    DateMillisecond       = -14,\n    TimestampSecond       = -15,\n    TimestampMillisecond  = -16,\n    TimestampMicrosecond  = -17,\n    TimestampNanosecond   = -18,\n    TimeSecond            = -19,\n    TimeMillisecond       = -20,\n    TimeMicrosecond       = -21,\n    TimeNanosecond        = -22,\n    DenseUnion            = -23,\n    SparseUnion           = -24,\n    IntervalDayTime       = -25,\n    IntervalYearMonth     = -26,\n}\n\nexport enum BufferType {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    OFFSET = 0,\n\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    DATA = 1,\n\n    /**\n     * Bit vector indicating if each value is null\n     */\n    VALIDITY = 2,\n\n    /**\n     * Type vector used in Union type\n     */\n    TYPE = 3\n  }\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function getBool(_data: any, _index: number, byte: number, bit: number) {\n    return (byte & 1 << bit) !== 0;\n}\n\n/** @ignore */\nexport function getBit(_data: any, _index: number, byte: number, bit: number): 0 | 1 {\n    return (byte & 1 << bit) >> bit as (0 | 1);\n}\n\n/** @ignore */\nexport function setBool(bytes: Uint8Array, index: number, value: any) {\n    return value ?\n        !!(bytes[index >> 3] |=  (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false ;\n}\n\n/** @ignore */\nexport function truncateBitmap(offset: number, length: number, bitmap: Uint8Array) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n\n/** @ignore */\nexport function packBools(values: Iterable<any>) {\n    let xs: number[] = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) { xs[i++] = byte; }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n\n/** @ignore */\nexport function* iterateBits<T>(bytes: Uint8Array, begin: number, length: number, context: any,\n                                get: (context: any, index: number, byte: number, bit: number) => T) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\n\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data: Uint8Array, lhs: number, rhs: number): number {\n    if (rhs - lhs <= 0) { return 0; }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n        // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n        popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3)\n    );\n}\n\n/** @ignore */\nexport function popcnt_array(arr: ArrayBufferView, byteOffset?: number, byteLength?: number) {\n    let cnt = 0, pos = byteOffset! | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len =  byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n\n/** @ignore */\nexport function popcnt_uint32(uint32: number): number {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum';\nimport { DataType, Float, Int, Date_, Interval, Time, Timestamp, Union, } from './type';\n\nexport abstract class Visitor {\n    public visitMany(nodes: any[], ...args: any[][]) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    public visit(...args: any[]) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    public getVisitFn(node: any, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    public visitNull            (_node: any, ..._args: any[]): any { return null; }\n    public visitBool            (_node: any, ..._args: any[]): any { return null; }\n    public visitInt             (_node: any, ..._args: any[]): any { return null; }\n    public visitFloat           (_node: any, ..._args: any[]): any { return null; }\n    public visitUtf8            (_node: any, ..._args: any[]): any { return null; }\n    public visitBinary          (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeBinary (_node: any, ..._args: any[]): any { return null; }\n    public visitDate            (_node: any, ..._args: any[]): any { return null; }\n    public visitTimestamp       (_node: any, ..._args: any[]): any { return null; }\n    public visitTime            (_node: any, ..._args: any[]): any { return null; }\n    public visitDecimal         (_node: any, ..._args: any[]): any { return null; }\n    public visitList            (_node: any, ..._args: any[]): any { return null; }\n    public visitStruct          (_node: any, ..._args: any[]): any { return null; }\n    public visitUnion           (_node: any, ..._args: any[]): any { return null; }\n    public visitDictionary      (_node: any, ..._args: any[]): any { return null; }\n    public visitInterval        (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeList   (_node: any, ..._args: any[]): any { return null; }\n    public visitMap             (_node: any, ..._args: any[]): any { return null; }\n}\n\n/** @ignore */\nfunction getVisitFn<T extends DataType>(visitor: Visitor, node: any, throwIfNotFound = true) {\n    let fn: any = null;\n    let dtype: T['TType'] = Type.NONE;\n    // tslint:disable\n    if      (node instanceof Data    ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof Vector  ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof DataType) { dtype = inferDType(node      as T); }\n    else if (typeof (dtype = node) !== 'number') { dtype = Type[node] as any as T['TType']; }\n\n    switch (dtype) {\n        case Type.Null:                 fn = visitor.visitNull; break;\n        case Type.Bool:                 fn = visitor.visitBool; break;\n        case Type.Int:                  fn = visitor.visitInt; break;\n        case Type.Int8:                 fn = visitor.visitInt8 || visitor.visitInt; break;\n        case Type.Int16:                fn = visitor.visitInt16 || visitor.visitInt; break;\n        case Type.Int32:                fn = visitor.visitInt32 || visitor.visitInt; break;\n        case Type.Int64:                fn = visitor.visitInt64 || visitor.visitInt; break;\n        case Type.Uint8:                fn = visitor.visitUint8 || visitor.visitInt; break;\n        case Type.Uint16:               fn = visitor.visitUint16 || visitor.visitInt; break;\n        case Type.Uint32:               fn = visitor.visitUint32 || visitor.visitInt; break;\n        case Type.Uint64:               fn = visitor.visitUint64 || visitor.visitInt; break;\n        case Type.Float:                fn = visitor.visitFloat; break;\n        case Type.Float16:              fn = visitor.visitFloat16 || visitor.visitFloat; break;\n        case Type.Float32:              fn = visitor.visitFloat32 || visitor.visitFloat; break;\n        case Type.Float64:              fn = visitor.visitFloat64 || visitor.visitFloat; break;\n        case Type.Utf8:                 fn = visitor.visitUtf8; break;\n        case Type.Binary:               fn = visitor.visitBinary; break;\n        case Type.FixedSizeBinary:      fn = visitor.visitFixedSizeBinary; break;\n        case Type.Date:                 fn = visitor.visitDate; break;\n        case Type.DateDay:              fn = visitor.visitDateDay || visitor.visitDate; break;\n        case Type.DateMillisecond:      fn = visitor.visitDateMillisecond || visitor.visitDate; break;\n        case Type.Timestamp:            fn = visitor.visitTimestamp; break;\n        case Type.TimestampSecond:      fn = visitor.visitTimestampSecond || visitor.visitTimestamp; break;\n        case Type.TimestampMillisecond: fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp; break;\n        case Type.TimestampMicrosecond: fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp; break;\n        case Type.TimestampNanosecond:  fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp; break;\n        case Type.Time:                 fn = visitor.visitTime; break;\n        case Type.TimeSecond:           fn = visitor.visitTimeSecond || visitor.visitTime; break;\n        case Type.TimeMillisecond:      fn = visitor.visitTimeMillisecond || visitor.visitTime; break;\n        case Type.TimeMicrosecond:      fn = visitor.visitTimeMicrosecond || visitor.visitTime; break;\n        case Type.TimeNanosecond:       fn = visitor.visitTimeNanosecond || visitor.visitTime; break;\n        case Type.Decimal:              fn = visitor.visitDecimal; break;\n        case Type.List:                 fn = visitor.visitList; break;\n        case Type.Struct:               fn = visitor.visitStruct; break;\n        case Type.Union:                fn = visitor.visitUnion; break;\n        case Type.DenseUnion:           fn = visitor.visitDenseUnion || visitor.visitUnion; break;\n        case Type.SparseUnion:          fn = visitor.visitSparseUnion || visitor.visitUnion; break;\n        case Type.Dictionary:           fn = visitor.visitDictionary; break;\n        case Type.Interval:             fn = visitor.visitInterval; break;\n        case Type.IntervalDayTime:      fn = visitor.visitIntervalDayTime || visitor.visitInterval; break;\n        case Type.IntervalYearMonth:    fn = visitor.visitIntervalYearMonth || visitor.visitInterval; break;\n        case Type.FixedSizeList:        fn = visitor.visitFixedSizeList; break;\n        case Type.Map:                  fn = visitor.visitMap; break;\n    }\n    if (typeof fn === 'function') return fn;\n    if (!throwIfNotFound) return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n\n/** @ignore */\nfunction inferDType<T extends DataType>(type: T): Type {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int:\n            const { bitWidth, isSigned } = (type as any as Int);\n            switch (bitWidth) {\n                case  8: return isSigned ? Type.Int8  : Type.Uint8 ;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            return Type.Int;\n        case Type.Float:\n            switch((type as any as Float).precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch ((type as any as Time).unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            return Type.Time;\n        case Type.Timestamp:\n            switch ((type as any as Timestamp).unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            return Type.Timestamp;\n        case Type.Date:\n            switch ((type as any as Date_).unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            return Type.Date;\n        case Type.Interval:\n            switch ((type as any as Interval).unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch ((type as any as Union).mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n\nexport interface Visitor {\n    visitNull                  (node: any, ...args: any[]): any;\n    visitBool                  (node: any, ...args: any[]): any;\n    visitInt                   (node: any, ...args: any[]): any;\n    visitInt8?                 (node: any, ...args: any[]): any;\n    visitInt16?                (node: any, ...args: any[]): any;\n    visitInt32?                (node: any, ...args: any[]): any;\n    visitInt64?                (node: any, ...args: any[]): any;\n    visitUint8?                (node: any, ...args: any[]): any;\n    visitUint16?               (node: any, ...args: any[]): any;\n    visitUint32?               (node: any, ...args: any[]): any;\n    visitUint64?               (node: any, ...args: any[]): any;\n    visitFloat                 (node: any, ...args: any[]): any;\n    visitFloat16?              (node: any, ...args: any[]): any;\n    visitFloat32?              (node: any, ...args: any[]): any;\n    visitFloat64?              (node: any, ...args: any[]): any;\n    visitUtf8                  (node: any, ...args: any[]): any;\n    visitBinary                (node: any, ...args: any[]): any;\n    visitFixedSizeBinary       (node: any, ...args: any[]): any;\n    visitDate                  (node: any, ...args: any[]): any;\n    visitDateDay?              (node: any, ...args: any[]): any;\n    visitDateMillisecond?      (node: any, ...args: any[]): any;\n    visitTimestamp             (node: any, ...args: any[]): any;\n    visitTimestampSecond?      (node: any, ...args: any[]): any;\n    visitTimestampMillisecond? (node: any, ...args: any[]): any;\n    visitTimestampMicrosecond? (node: any, ...args: any[]): any;\n    visitTimestampNanosecond?  (node: any, ...args: any[]): any;\n    visitTime                  (node: any, ...args: any[]): any;\n    visitTimeSecond?           (node: any, ...args: any[]): any;\n    visitTimeMillisecond?      (node: any, ...args: any[]): any;\n    visitTimeMicrosecond?      (node: any, ...args: any[]): any;\n    visitTimeNanosecond?       (node: any, ...args: any[]): any;\n    visitDecimal               (node: any, ...args: any[]): any;\n    visitList                  (node: any, ...args: any[]): any;\n    visitStruct                (node: any, ...args: any[]): any;\n    visitUnion                 (node: any, ...args: any[]): any;\n    visitDenseUnion?           (node: any, ...args: any[]): any;\n    visitSparseUnion?          (node: any, ...args: any[]): any;\n    visitDictionary            (node: any, ...args: any[]): any;\n    visitInterval              (node: any, ...args: any[]): any;\n    visitIntervalDayTime?      (node: any, ...args: any[]): any;\n    visitIntervalYearMonth?    (node: any, ...args: any[]): any;\n    visitFixedSizeList         (node: any, ...args: any[]): any;\n    visitMap                   (node: any, ...args: any[]): any;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Visitor.prototype as any).visitInt8 = null;\n(Visitor.prototype as any).visitInt16 = null;\n(Visitor.prototype as any).visitInt32 = null;\n(Visitor.prototype as any).visitInt64 = null;\n(Visitor.prototype as any).visitUint8 = null;\n(Visitor.prototype as any).visitUint16 = null;\n(Visitor.prototype as any).visitUint32 = null;\n(Visitor.prototype as any).visitUint64 = null;\n(Visitor.prototype as any).visitFloat16 = null;\n(Visitor.prototype as any).visitFloat32 = null;\n(Visitor.prototype as any).visitFloat64 = null;\n(Visitor.prototype as any).visitDateDay = null;\n(Visitor.prototype as any).visitDateMillisecond = null;\n(Visitor.prototype as any).visitTimestampSecond = null;\n(Visitor.prototype as any).visitTimestampMillisecond = null;\n(Visitor.prototype as any).visitTimestampMicrosecond = null;\n(Visitor.prototype as any).visitTimestampNanosecond = null;\n(Visitor.prototype as any).visitTimeSecond = null;\n(Visitor.prototype as any).visitTimeMillisecond = null;\n(Visitor.prototype as any).visitTimeMicrosecond = null;\n(Visitor.prototype as any).visitTimeNanosecond = null;\n(Visitor.prototype as any).visitDenseUnion = null;\n(Visitor.prototype as any).visitSparseUnion = null;\n(Visitor.prototype as any).visitIntervalDayTime = null;\n(Visitor.prototype as any).visitIntervalYearMonth = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface TypeComparator extends Visitor {\n    visit<T extends DataType>(type: T, other?: DataType | null): other is T;\n    visitMany<T extends DataType>(nodes: T[], others?: DataType[] | null): boolean[];\n    getVisitFn<T extends DataType>(node: VectorType<T> |  Data<T> | T): (other?: DataType | null) => other is T;\n    visitNull                 <T extends Null>                 (type: T, other?: DataType | null): other is T;\n    visitBool                 <T extends Bool>                 (type: T, other?: DataType | null): other is T;\n    visitInt                  <T extends Int>                  (type: T, other?: DataType | null): other is T;\n    visitInt8                 <T extends Int8>                 (type: T, other?: DataType | null): other is T;\n    visitInt16                <T extends Int16>                (type: T, other?: DataType | null): other is T;\n    visitInt32                <T extends Int32>                (type: T, other?: DataType | null): other is T;\n    visitInt64                <T extends Int64>                (type: T, other?: DataType | null): other is T;\n    visitUint8                <T extends Uint8>                (type: T, other?: DataType | null): other is T;\n    visitUint16               <T extends Uint16>               (type: T, other?: DataType | null): other is T;\n    visitUint32               <T extends Uint32>               (type: T, other?: DataType | null): other is T;\n    visitUint64               <T extends Uint64>               (type: T, other?: DataType | null): other is T;\n    visitFloat                <T extends Float>                (type: T, other?: DataType | null): other is T;\n    visitFloat16              <T extends Float16>              (type: T, other?: DataType | null): other is T;\n    visitFloat32              <T extends Float32>              (type: T, other?: DataType | null): other is T;\n    visitFloat64              <T extends Float64>              (type: T, other?: DataType | null): other is T;\n    visitUtf8                 <T extends Utf8>                 (type: T, other?: DataType | null): other is T;\n    visitBinary               <T extends Binary>               (type: T, other?: DataType | null): other is T;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (type: T, other?: DataType | null): other is T;\n    visitDate                 <T extends Date_>                (type: T, other?: DataType | null): other is T;\n    visitDateDay              <T extends DateDay>              (type: T, other?: DataType | null): other is T;\n    visitDateMillisecond      <T extends DateMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestamp            <T extends Timestamp>            (type: T, other?: DataType | null): other is T;\n    visitTimestampSecond      <T extends TimestampSecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (type: T, other?: DataType | null): other is T;\n    visitTime                 <T extends Time>                 (type: T, other?: DataType | null): other is T;\n    visitTimeSecond           <T extends TimeSecond>           (type: T, other?: DataType | null): other is T;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (type: T, other?: DataType | null): other is T;\n    visitDecimal              <T extends Decimal>              (type: T, other?: DataType | null): other is T;\n    visitList                 <T extends List>                 (type: T, other?: DataType | null): other is T;\n    visitStruct               <T extends Struct>               (type: T, other?: DataType | null): other is T;\n    visitUnion                <T extends Union>                (type: T, other?: DataType | null): other is T;\n    visitDenseUnion           <T extends DenseUnion>           (type: T, other?: DataType | null): other is T;\n    visitSparseUnion          <T extends SparseUnion>          (type: T, other?: DataType | null): other is T;\n    visitDictionary           <T extends Dictionary>           (type: T, other?: DataType | null): other is T;\n    visitInterval             <T extends Interval>             (type: T, other?: DataType | null): other is T;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (type: T, other?: DataType | null): other is T;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (type: T, other?: DataType | null): other is T;\n    visitFixedSizeList        <T extends FixedSizeList>        (type: T, other?: DataType | null): other is T;\n    visitMap                  <T extends Map_>                 (type: T, other?: DataType | null): other is T;\n}\n\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas<T extends { [key: string]: DataType }>(schema: Schema<T>, other?: Schema | null): other is Schema<T> {\n        return (schema === other) || (\n            other instanceof schema.constructor &&\n            instance.compareFields(schema.fields, other.fields)\n        );\n    }\n    compareFields<T extends { [key: string]: DataType }>(fields: Field<T[keyof T]>[], others?: Field[] | null): others is Field<T[keyof T]>[] {\n        return (fields === others) || (\n            Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => instance.compareField(f, others[i]))\n        );\n    }\n    compareField<T extends DataType = any>(field: Field<T>, other?: Field | null): other is Field<T> {\n        return (field === other) || (\n            other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            instance.visit(field.type, other.type)\n        );\n    }\n}\n\nfunction compareConstructor<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return other instanceof type.constructor;\n}\n\nfunction compareAny<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return (type === other) || compareConstructor(type, other);\n}\n\nfunction compareInt<T extends Int>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned\n    );\n}\n\nfunction compareFloat<T extends Float>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.precision === other.precision\n    );\n}\n\nfunction compareFixedSizeBinary<T extends FixedSizeBinary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth\n    );\n}\n\nfunction compareDate<T extends Date_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareTimestamp<T extends Timestamp>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone\n    );\n}\n\nfunction compareTime<T extends Time>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth\n    );\n}\n\nfunction compareList<T extends List>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareStruct<T extends Struct>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareUnion<T extends Union>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareDictionary<T extends Dictionary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(<any> type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary)\n    );\n}\n\nfunction compareInterval<T extends Interval>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareFixedSizeList<T extends FixedSizeList>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareMap<T extends Map_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nTypeComparator.prototype.visitNull                 =             compareAny;\nTypeComparator.prototype.visitBool                 =             compareAny;\nTypeComparator.prototype.visitInt                  =             compareInt;\nTypeComparator.prototype.visitInt8                 =             compareInt;\nTypeComparator.prototype.visitInt16                =             compareInt;\nTypeComparator.prototype.visitInt32                =             compareInt;\nTypeComparator.prototype.visitInt64                =             compareInt;\nTypeComparator.prototype.visitUint8                =             compareInt;\nTypeComparator.prototype.visitUint16               =             compareInt;\nTypeComparator.prototype.visitUint32               =             compareInt;\nTypeComparator.prototype.visitUint64               =             compareInt;\nTypeComparator.prototype.visitFloat                =           compareFloat;\nTypeComparator.prototype.visitFloat16              =           compareFloat;\nTypeComparator.prototype.visitFloat32              =           compareFloat;\nTypeComparator.prototype.visitFloat64              =           compareFloat;\nTypeComparator.prototype.visitUtf8                 =             compareAny;\nTypeComparator.prototype.visitBinary               =             compareAny;\nTypeComparator.prototype.visitFixedSizeBinary      = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate                 =            compareDate;\nTypeComparator.prototype.visitDateDay              =            compareDate;\nTypeComparator.prototype.visitDateMillisecond      =            compareDate;\nTypeComparator.prototype.visitTimestamp            =       compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond      =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond  =       compareTimestamp;\nTypeComparator.prototype.visitTime                 =            compareTime;\nTypeComparator.prototype.visitTimeSecond           =            compareTime;\nTypeComparator.prototype.visitTimeMillisecond      =            compareTime;\nTypeComparator.prototype.visitTimeMicrosecond      =            compareTime;\nTypeComparator.prototype.visitTimeNanosecond       =            compareTime;\nTypeComparator.prototype.visitDecimal              =             compareAny;\nTypeComparator.prototype.visitList                 =            compareList;\nTypeComparator.prototype.visitStruct               =          compareStruct;\nTypeComparator.prototype.visitUnion                =           compareUnion;\nTypeComparator.prototype.visitDenseUnion           =           compareUnion;\nTypeComparator.prototype.visitSparseUnion          =           compareUnion;\nTypeComparator.prototype.visitDictionary           =      compareDictionary;\nTypeComparator.prototype.visitInterval             =        compareInterval;\nTypeComparator.prototype.visitIntervalDayTime      =        compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth    =        compareInterval;\nTypeComparator.prototype.visitFixedSizeList        =   compareFixedSizeList;\nTypeComparator.prototype.visitMap                  =             compareMap;\n\n/** @ignore */\nexport const instance = new TypeComparator();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport { Field } from './schema';\nimport { flatbuffers } from 'flatbuffers';\nimport { TypedArrayConstructor } from './interfaces';\nimport { VectorType as V, TypeToDataType } from './interfaces';\nimport { instance as comparer } from './visitor/typecomparator';\n\nimport Long = flatbuffers.Long;\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n/** @ignore */\nexport type RowLike<T extends { [key: string]: DataType }> =\n      ( Iterable<[string, T[keyof T]['TValue'] | null]> )\n    & { [P in keyof T]: T[P]['TValue'] | null }\n    & { get<K extends keyof T>(key: K): T[K]['TValue'] | null; }\n    & { set<K extends keyof T>(key: K, val: T[K]['TValue'] | null): void; }\n    ;\n\n/** @ignore */\nexport type MapLike<K extends DataType = any, V extends DataType = any> =\n      { [P in K['TValue']]: V['TValue'] | null }\n    & ( Map<K['TValue'], V['TValue'] | null> )\n    ;\n\nexport interface DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n\n    // @ts-ignore\n    public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static            isNull (x: any): x is Null            { return x && x.typeId === Type.Null;            }\n    /** @nocollapse */ static             isInt (x: any): x is Int_            { return x && x.typeId === Type.Int;             }\n    /** @nocollapse */ static           isFloat (x: any): x is Float           { return x && x.typeId === Type.Float;           }\n    /** @nocollapse */ static          isBinary (x: any): x is Binary          { return x && x.typeId === Type.Binary;          }\n    /** @nocollapse */ static            isUtf8 (x: any): x is Utf8            { return x && x.typeId === Type.Utf8;            }\n    /** @nocollapse */ static            isBool (x: any): x is Bool            { return x && x.typeId === Type.Bool;            }\n    /** @nocollapse */ static         isDecimal (x: any): x is Decimal         { return x && x.typeId === Type.Decimal;         }\n    /** @nocollapse */ static            isDate (x: any): x is Date_           { return x && x.typeId === Type.Date;            }\n    /** @nocollapse */ static            isTime (x: any): x is Time_           { return x && x.typeId === Type.Time;            }\n    /** @nocollapse */ static       isTimestamp (x: any): x is Timestamp_      { return x && x.typeId === Type.Timestamp;       }\n    /** @nocollapse */ static        isInterval (x: any): x is Interval_       { return x && x.typeId === Type.Interval;        }\n    /** @nocollapse */ static            isList (x: any): x is List            { return x && x.typeId === Type.List;            }\n    /** @nocollapse */ static          isStruct (x: any): x is Struct          { return x && x.typeId === Type.Struct;          }\n    /** @nocollapse */ static           isUnion (x: any): x is Union_          { return x && x.typeId === Type.Union;           }\n    /** @nocollapse */ static isFixedSizeBinary (x: any): x is FixedSizeBinary { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static   isFixedSizeList (x: any): x is FixedSizeList   { return x && x.typeId === Type.FixedSizeList;   }\n    /** @nocollapse */ static             isMap (x: any): x is Map_            { return x && x.typeId === Type.Map;             }\n    /** @nocollapse */ static      isDictionary (x: any): x is Dictionary      { return x && x.typeId === Type.Dictionary;      }\n\n    public get typeId(): TType { return <any> Type.NONE; }\n    public compareTo(other: DataType): other is TypeToDataType<TType> {\n        return comparer.visit(this, other);\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any> proto).children = null;\n        (<any> proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null; }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => {\n        return proto[Symbol.toStringTag] = 'Null';\n    })(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int   ]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray;    TValue: number | bigint | Int32Array | Uint32Array; };\n    [Type.Int8  ]: { bitWidth:           8; isSigned: true;         TArray: Int8Array;   TValue: number; };\n    [Type.Int16 ]: { bitWidth:          16; isSigned: true;         TArray: Int16Array;  TValue: number; };\n    [Type.Int32 ]: { bitWidth:          32; isSigned: true;         TArray: Int32Array;  TValue: number; };\n    [Type.Int64 ]: { bitWidth:          64; isSigned: true;         TArray: Int32Array;  TValue: bigint | Int32Array | Uint32Array; };\n    [Type.Uint8 ]: { bitWidth:           8; isSigned: false;        TArray: Uint8Array;  TValue: number; };\n    [Type.Uint16]: { bitWidth:          16; isSigned: false;        TArray: Uint16Array; TValue: number; };\n    [Type.Uint32]: { bitWidth:          32; isSigned: false;        TArray: Uint32Array; TValue: number; };\n    [Type.Uint64]: { bitWidth:          64; isSigned: false;        TArray: Uint32Array; TValue: bigint | Int32Array | Uint32Array; };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue']; }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n                public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType(): TypedArrayConstructor<IType[T]['TArray']> {\n        switch (this.bitWidth) {\n            case  8: return this.isSigned ?  Int8Array :  Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any> proto).isSigned = null;\n        (<any> proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> { constructor() { super(true, 8); } }\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> { constructor() { super(true, 16); } }\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> { constructor() { super(true, 32); } }\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> { constructor() { super(true, 64); } }\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> { constructor() { super(false, 8); } }\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> { constructor() { super(false, 16); } }\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> { constructor() { super(false, 32); } }\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> { constructor() { super(false, 64); } }\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float  ]: { precision: Precision;        TArray: FloatArray;    TValue: number; };\n    [Type.Float16]: { precision: Precision.HALF;   TArray: Uint16Array;   TValue: number; };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array;  TValue: number; };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array;  TValue: number; };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number; }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any> proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array>; }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n                public readonly precision: number) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any> proto).scale = null;\n        (<any> proto).precision = null;\n        (<any> proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time           ]: { unit: TimeUnit;             TValue: number | Int32Array };\n    [Type.TimeSecond     ]: { unit: TimeUnit.SECOND;      TValue: number;             };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number;             };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: Int32Array;         };\n    [Type.TimeNanosecond ]: { unit: TimeUnit.NANOSECOND;  TValue: Int32Array;         };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> { TArray: Int32Array; TValue: TimesType[T]['TValue']; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n                public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any> proto).unit = null;\n        (<any> proto).bitWidth = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> { TArray: Int32Array; TValue: number; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n                public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any> proto).unit = null;\n        (<any> proto).timezone = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> { TArray: Int32Array; TValue: Int32Array; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }>  { TArray: IterableArrayLike<T>; TValue: V<T>; }\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct> { TArray: IterableArrayLike<RowLike<T>>; TValue: RowLike<T>; dataTypes: T; }\n/** @ignore */\nexport class Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct, T> {\n    public readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array>; }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public readonly mode: UnionMode;\n    public readonly typeIds: Int32Array;\n    public readonly children: Field<any>[];\n    public readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n                typeIds: number[] | Int32Array,\n                children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() { return `${this[Symbol.toStringTag]}<${\n        this.children.map((x) => `${x.type}`).join(` | `)\n    }>`; }\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any> proto).mode = null;\n        (<any> proto).typeIds = null;\n        (<any> proto).children = null;\n        (<any> proto).typeIdToChildIndex = null;\n        (<any> proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any> proto).byteWidth = null;\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList> { TArray: IterableArrayLike<T['TArray']>; TValue: V<T>; }\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any> proto).children = null;\n        (<any> proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    TArray: IterableArrayLike<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey, value: TValue }>;\n    TValue: MapLike<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    constructor(child: Field<Struct<{ key: TKey, value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public readonly keysSorted: boolean;\n    public readonly children: Field<Struct<{ key: TKey, value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any> proto).children = null;\n        (<any> proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> { TArray: TKey['TArray']; TValue: T['TValue']; }\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public readonly id: number;\n    public readonly indices: TKey;\n    public readonly dictionary: T;\n    public readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any> proto).id = null;\n        (<any> proto).indices = null;\n        (<any> proto).isOrdered = null;\n        (<any> proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport interface IterableArrayLike<T = any> extends ArrayLike<T>, Iterable<T> {}\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    let t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { truncateBitmap } from './util/bit';\nimport { popcnt_bit_range } from './util/bit';\nimport { BufferType, UnionMode, Type } from './enum';\nimport { DataType, SparseUnion, DenseUnion, strideForType } from './type';\nimport { toArrayBufferView, toUint8Array, toInt32Array } from './util/buffer';\nimport {\n    Dictionary,\n    Null, Int, Float,\n    Binary, Bool, Utf8, Decimal,\n    Date_, Time, Timestamp, Interval,\n    List, Struct, Union, FixedSizeBinary, FixedSizeList, Map_,\n} from './type';\n\n// When slicing, we do not know the null count of the sliced range without\n// doing some computation. To avoid doing this eagerly, we set the null count\n// to -1 (any negative number will do). When Vector.nullCount is called the\n// first time, the null count will be computed. See ARROW-33\n/** @ignore */ export type kUnknownNullCount = -1;\n/** @ignore */ export const kUnknownNullCount = -1;\n\n/** @ignore */ export type NullBuffer = Uint8Array | null | undefined;\n/** @ignore */ export type TypeIdsBuffer = Int8Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type ValueOffsetsBuffer = Int32Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type DataBuffer<T extends DataType> = T['TArray'] | ArrayLike<number> | Iterable<number> | undefined;\n\n/** @ignore */\nexport interface Buffers<T extends DataType> {\n      [BufferType.OFFSET]: Int32Array;\n        [BufferType.DATA]: T['TArray'];\n    [BufferType.VALIDITY]: Uint8Array;\n        [BufferType.TYPE]: T['TArray'];\n}\n\n/** @ignore */\nexport interface Data<T extends DataType = DataType> {\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\n/** @ignore */\nexport class Data<T extends DataType = DataType> {\n\n    public readonly type: T;\n    public readonly length: number;\n    public readonly offset: number;\n    public readonly stride: number;\n    public readonly childData: Data[];\n\n    /**\n     * The dictionary for this Vector, if any. Only used for Dictionary type.\n     */\n    public dictionary?: Vector;\n\n    public readonly values: Buffers<T>[BufferType.DATA];\n    // @ts-ignore\n    public readonly typeIds: Buffers<T>[BufferType.TYPE];\n    // @ts-ignore\n    public readonly nullBitmap: Buffers<T>[BufferType.VALIDITY];\n    // @ts-ignore\n    public readonly valueOffsets: Buffers<T>[BufferType.OFFSET];\n\n    public get typeId(): T['TType'] { return this.type.typeId; }\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n    public get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds] as Buffers<T>;\n    }\n    public get byteLength(): number {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values       && (byteLength += values.byteLength);\n        nullBitmap   && (byteLength += nullBitmap.byteLength);\n        typeIds      && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n\n    protected _nullCount: number | kUnknownNullCount;\n\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap: Uint8Array | undefined;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n\n    constructor(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data) as Data[];\n        let buffer: Buffers<T>[keyof Buffers<T>];\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        } else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = (buffers as Buffers<T>)[0]) && (this.valueOffsets = buffer);\n                (buffer = (buffers as Buffers<T>)[1]) && (this.values = buffer);\n                (buffer = (buffers as Buffers<T>)[2]) && (this.nullBitmap = buffer);\n                (buffer = (buffers as Buffers<T>)[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n\n    public clone<R extends DataType>(type: R, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers: Buffers<R> = <any> this, childData: (Data | Vector)[] = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n\n    public slice(offset: number, length: number): Data<T> {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone<T>(this.type, this.offset + offset, length, nullCount, buffers,\n            // Don't slice children if we have value offsets (the variable-width types)\n            (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n\n    public _changeLengthAndBackfillNullBitmap(newLength: number): Data<T> {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n\n    protected _sliceBuffers(offset: number, length: number, stride: number, typeId: T['TType']): Buffers<T> {\n        let arr: any, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n        // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n        (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n\n    protected _sliceChildren(childData: Data[], offset: number, length: number): Data[] {\n        return childData.map((child) => child.slice(offset, length));\n    }\n\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    public static new<T extends DataType>(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector): Data<T> {\n        if (buffers instanceof Data) { buffers = buffers.buffers; } else if (!buffers) { buffers = [] as Partial<Buffers<T>>; }\n        switch (type.typeId) {\n            case Type.Null:            return <unknown> Data.Null(            <unknown> type as Null,            offset, length) as Data<T>;\n            case Type.Int:             return <unknown> Data.Int(             <unknown> type as Int,             offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Dictionary:      return <unknown> Data.Dictionary(      <unknown> type as Dictionary,      offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary!) as Data<T>;\n            case Type.Float:           return <unknown> Data.Float(           <unknown> type as Float,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Bool:            return <unknown> Data.Bool(            <unknown> type as Bool,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Decimal:         return <unknown> Data.Decimal(         <unknown> type as Decimal,         offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Date:            return <unknown> Data.Date(            <unknown> type as Date_,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Time:            return <unknown> Data.Time(            <unknown> type as Time,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Timestamp:       return <unknown> Data.Timestamp(       <unknown> type as Timestamp,       offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Interval:        return <unknown> Data.Interval(        <unknown> type as Interval,        offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.FixedSizeBinary: return <unknown> Data.FixedSizeBinary( <unknown> type as FixedSizeBinary, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Binary:          return <unknown> Data.Binary(          <unknown> type as Binary,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Utf8:            return <unknown> Data.Utf8(            <unknown> type as Utf8,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.List:            return <unknown> Data.List(            <unknown> type as List,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.FixedSizeList:   return <unknown> Data.FixedSizeList(   <unknown> type as FixedSizeList,   offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]) as Data<T>;\n            case Type.Struct:          return <unknown> Data.Struct(          <unknown> type as Struct,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []) as Data<T>;\n            case Type.Map:             return <unknown> Data.Map(             <unknown> type as Map_,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.Union:           return <unknown> Data.Union(           <unknown> type as Union,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData) as Data<T>;\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n\n    /** @nocollapse */\n    public static Null<T extends Null>(type: T, offset: number, length: number) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    public static Int<T extends Int>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Dictionary<T extends Dictionary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>, dictionary: Vector<T['dictionary']>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView<T['TArray']>(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    public static Float<T extends Float>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Bool<T extends Bool>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Decimal<T extends Decimal>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Date<T extends Date_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Time<T extends Time>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Timestamp<T extends Timestamp>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Interval<T extends Interval>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static FixedSizeBinary<T extends FixedSizeBinary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Binary<T extends Binary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Utf8<T extends Utf8>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static List<T extends List>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static FixedSizeList<T extends FixedSizeList>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static Struct<T extends Struct>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, children: (Data | Vector)[]) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    public static Map<T extends Map_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: (Data | Vector)) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    public static Union<T extends SparseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, children: (Data | Vector)[], _?: any): Data<T>;\n    public static Union<T extends DenseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsets: ValueOffsetsBuffer, children: (Data | Vector)[]): Data<T>;\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]): Data<T>;\n    /** @nocollapse */\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]) {\n        const buffers = <unknown> [\n            undefined, undefined,\n            toUint8Array(nullBitmap),\n            toArrayBufferView(type.ArrayType, typeIds)\n        ] as Partial<Buffers<T>>;\n        if (type.mode === UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren as (Data | Vector)[]);\n        }\n        buffers[BufferType.OFFSET] = toInt32Array(<ValueOffsetsBuffer> valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\n\n(Data.prototype as any).childData = Object.freeze([]);\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */ const undf = void (0);\n\n/** @ignore */\nexport function valueToString(x: any) {\n    if (x === null) { return 'null'; }\n    if (x === undf) { return 'undefined'; }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../type';\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction<T extends DataType = any, TNull = any>(nullValues?: ReadonlyArray<TNull>) {\n\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value: any) { return true; };\n    }\n\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n\n    return new Function(`x`, `${fnBody}\\nreturn true;`) as (value: T['TValue'] | TNull) => boolean;\n}\n\n/** @ignore */\nfunction valueToCase(x: any) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    } else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { memcpy } from '../util/buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from '../util/compat';\nimport {\n    TypedArray, TypedArrayConstructor,\n    BigIntArray, BigIntArrayConstructor\n} from '../interfaces';\n\n/** @ignore */ type DataValue<T> = T extends TypedArray ? number : T extends BigIntArray ? WideValue<T> : T;\n/** @ignore */ type WideValue<T extends BigIntArray> = T extends BigIntArray ? bigint | Int32Array | Uint32Array : never;\n/** @ignore */ type ArrayCtor<T extends TypedArray | BigIntArray> =\n    T extends TypedArray  ? TypedArrayConstructor<T>  :\n    T extends BigIntArray ? BigIntArrayConstructor<T> :\n    any;\n\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len: number, BPE: number) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = <T extends TypedArray | BigIntArray>(arr: T, len = 0) => (\n    arr.length >= len ? arr.subarray(0, len) : memcpy(new (arr.constructor as any)(len), arr, 0)\n) as T;\n\n/** @ignore */\nexport interface BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n    readonly offset: number;\n}\n\n/** @ignore */\nexport class BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n\n    constructor(buffer: T, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor as ArrayCtor<T>;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n\n    public buffer: T;\n    public length: number;\n    public readonly stride: number;\n    public readonly ArrayType: ArrayCtor<T>;\n    public readonly BYTES_PER_ELEMENT: number;\n\n    public get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    public get reservedLength() { return this.buffer.length / this.stride; }\n    public get reservedByteLength() { return this.buffer.byteLength; }\n\n    // @ts-ignore\n    public set(index: number, value: TValue) { return this; }\n    public append(value: TValue) { return this.set(this.length, value); }\n    public reserve(extra: number) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT)\n                );\n            }\n        }\n        return this;\n    }\n    public flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray<T>(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    public clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    protected _resize(newLength: number) {\n        return this.buffer = <T> memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\n\n(BufferBuilder.prototype as any).offset = 0;\n\n/** @ignore */\nexport class DataBufferBuilder<T extends TypedArray> extends BufferBuilder<T, number> {\n    public last() { return this.get(this.length - 1); }\n    public get(index: number) { return this.buffer[index]; }\n    public set(index: number, value: number) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\n\n/** @ignore */\nexport class BitmapBufferBuilder extends DataBufferBuilder<Uint8Array> {\n\n    constructor(data = new Uint8Array(0)) { super(data, 1 / 8); }\n\n    public numValid = 0;\n    public get numInvalid() { return this.length - this.numValid; }\n    public get(idx: number) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    public set(idx: number, val: number) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |=  (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    public clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\n\n/** @ignore */\nexport class OffsetsBufferBuilder extends DataBufferBuilder<Int32Array> {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    public append(value: number) {\n        return this.set(this.length - 1, value);\n    }\n    public set(index: number, value: number) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    public flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\n\n/** @ignore */\nexport class WideBufferBuilder<T extends TypedArray, R extends BigIntArray> extends BufferBuilder<T, DataValue<T>> {\n    // @ts-ignore\n    public buffer64: R;\n    // @ts-ignore\n    protected _ArrayType64: BigIntArrayConstructor<R>;\n    public get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = <BigIntArrayConstructor<R>> (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n    }\n    public set(index: number, value: DataValue<T>) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint': this.buffer64[index] = value; break;\n            case 'number': this.buffer[index * this.stride] = value; break;\n            default: this.buffer.set(value as TypedArray, index * this.stride);\n        }\n        return this;\n    }\n    protected _resize(newLength: number) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data, Buffers } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BuilderType as B, VectorType as V} from './interfaces';\nimport { BufferBuilder, BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport {\n    DataType, strideForType,\n    Float, Int, Decimal, FixedSizeBinary,\n    Date_, Time, Timestamp, Interval,\n    Utf8, Binary, List, Map_\n} from './type';\n\n/**\n * A set of options required to create a `Builder` instance for a given `DataType`.\n * @see {@link Builder}\n */\nexport interface BuilderOptions<T extends DataType = any, TNull = any> {\n    type: T;\n    nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n    children?: { [key: string]: BuilderOptions; } | BuilderOptions[];\n}\n\n/**\n * A set of options to create an Iterable or AsyncIterable `Builder` transform function.\n * @see {@link Builder.throughIterable}\n * @see {@link Builder.throughAsyncIterable}\n */\n\nexport interface IterableBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    highWaterMark?: number;\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport abstract class Builder<T extends DataType = any, TNull = any> {\n\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    public static new<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {}\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode<T extends DataType = any, TNull = any>(options: import('./io/node/builder').BuilderDuplexOptions<T, TNull>): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughDOM<T extends DataType = any, TNull = any>(options: import('./io/whatwg/builder').BuilderTransformOptions<T, TNull>): import('./io/whatwg/builder').BuilderTransform<T, TNull> {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    public static throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughIterable(options);\n    }\n\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    public static throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughAsyncIterable(options);\n    }\n\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }: BuilderOptions<T, TNull>) {\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n\n    /**\n     * The Builder's `DataType` instance.\n     * @readonly\n     */\n    public type: T;\n    /**\n     * The number of values written to the `Builder` that haven't been flushed yet.\n     * @readonly\n     */\n    public length = 0;\n    /**\n     * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n     * @readonly\n     */\n    public finished = false;\n    /**\n     * The number of elements in the underlying values TypedArray that\n     * represent a single logical element, determined by this Builder's\n     * `DataType`. This is 1 for most types, but is larger when the `DataType`\n     * is `Int64`, `Uint64`, `Decimal`, `DateMillisecond`, certain variants of\n     * `Interval`, `Time`, or `Timestamp`, `FixedSizeBinary`, and `FixedSizeList`.\n     * @readonly\n     */\n    public readonly stride: number;\n    public readonly children: Builder[];\n    /**\n     * The list of null-value sentinels for this `Builder`. When one of these values\n     * is written to the `Builder` (either via `Builder.prototype.set()` or `Builder.prototype.append()`),\n     * a 1-bit is written to this Builder's underlying null BitmapBufferBuilder.\n     * @readonly\n     */\n    public readonly nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    public toVector() { return Vector.new(this.flush()); }\n\n    public get ArrayType() { return this.type.ArrayType; }\n    public get nullCount() { return this._nulls.numInvalid; }\n    public get numChildren() { return this.children.length; }\n\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    public get byteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    public get reservedLength(): number {\n        return this._nulls.reservedLength;\n    }\n\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    public get reservedByteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n\n    // @ts-ignore\n    protected _offsets: DataBufferBuilder<Int32Array>;\n    public get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n\n    // @ts-ignore\n    protected _values: BufferBuilder<T['TArray'], any>;\n    public get values() { return this._values ? this._values.buffer : null; }\n\n    protected _nulls: BitmapBufferBuilder;\n    public get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n\n    // @ts-ignore\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n    public get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n\n    // @ts-ignore\n    protected _isValid: (value: T['TValue'] | TNull) => boolean;\n    // @ts-ignore\n    protected _setValue: (inst: Builder<T>, index: number, value: T['TValue']) => void;\n\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    public append(value: T['TValue'] | TNull) { return this.set(this.length, value); }\n\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    public isValid(value: T['TValue'] | TNull): boolean { return this._isValid(value); }\n\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    public set(index: number, value: T['TValue'] | TNull) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue']) { this._setValue(this, index, value); }\n    public setValid(index: number, valid: boolean) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    public getChildAt<R extends DataType = any>(index: number): Builder<R> | null {\n        return this.children[index] || null;\n    }\n\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    public flush() {\n\n        const buffers: any = [];\n        const values =  this._values;\n        const offsets =  this._offsets;\n        const typeIds =  this._typeIds;\n        const { length, nullCount } = this;\n\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        } else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        } else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n\n        const data = Data.new<T>(\n            this.type, 0, length, nullCount, buffers as Buffers<T>,\n            this.children.map((child) => child.flush())) as Data<T>;\n\n        this.clear();\n\n        return data;\n    }\n\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    public finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    public clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\n\n(Builder.prototype as any).length = 1;\n(Builder.prototype as any).stride = 1;\n(Builder.prototype as any).children = null;\n(Builder.prototype as any).finished = false;\n(Builder.prototype as any).nullValues = null;\n(Builder.prototype as any)._isValid = () => true;\n\n/** @ignore */\nexport abstract class FixedWidthBuilder<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval = any, TNull = any> extends Builder<T, TNull> {\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n\n/** @ignore */\nexport abstract class VariableWidthBuilder<T extends Binary | Utf8 | List | Map_, TNull = any> extends Builder<T, TNull> {\n    protected _pendingLength: number = 0;\n    protected _offsets: OffsetsBufferBuilder;\n    protected _pending: Map<number, any> | undefined;\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    public setValid(index: number, isValid: boolean) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    public clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    public flush() {\n        this._flush();\n        return super.flush();\n    }\n    public finish() {\n        this._flush();\n        return super.finish();\n    }\n    protected _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n    protected abstract _flushPending(pending: Map<number, any>, pendingLength: number): void;\n}\n\n/** @ignore */\ntype ThroughIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull>) => IterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function*(source: Iterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n/** @ignore */\ntype ThroughAsyncIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) => AsyncIterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughAsyncIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BoolBuilder<TNull = any> extends Builder<Bool, TNull> {\n    constructor(options: BuilderOptions<Bool, TNull>) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    public setValue(index: number, value: boolean) {\n        this._values.set(index, +value);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { Builder } from '../builder';\n\n/** @ignore */\nexport class NullBuilder<TNull = any> extends Builder<Null, TNull> {\n    // @ts-ignore\n    public setValue(index: number, value: null) {}\n    public setValid(index: number, valid: boolean) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Date_, DateDay, DateMillisecond } from '../type';\n\n/** @ignore */\nexport class DateBuilder<T extends Date_ = Date_, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class DateDayBuilder<TNull = any> extends DateBuilder<DateDay, TNull> {}\n/** @ignore */\nexport class DateMillisecondBuilder<TNull = any> extends DateBuilder<DateMillisecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class DecimalBuilder<TNull = any> extends FixedWidthBuilder<Decimal, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { IntBuilder } from './int';\nimport { Dictionary, DataType } from '../type';\nimport { Builder, BuilderOptions } from '../builder';\n\ntype DictionaryHashFunction = (x: any) => string | number;\n\nexport interface DictionaryBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    dictionaryHashFunction?: DictionaryHashFunction;\n}\n\n/** @ignore */\nexport class DictionaryBuilder<T extends Dictionary, TNull = any> extends Builder<T, TNull> {\n\n    protected _dictionaryOffset: number;\n    protected _dictionary?: Vector<T['dictionary']>;\n    protected _keysToIndices: { [key: string]: number };\n    public readonly indices: IntBuilder<T['indices']>;\n    public readonly dictionary: Builder<T['dictionary']>;\n\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }: DictionaryBuilderOptions<T, TNull>) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) as T });\n        this._nulls = <any> null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls }) as IntBuilder<T['indices']>;\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null }) as Builder<T['dictionary']>;\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n\n    public get values() { return this.indices.values; }\n    public get nullCount() { return this.indices.nullCount; }\n    public get nullBitmap() { return this.indices.nullBitmap; }\n    public get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    public get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    public get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    public isValid(value: T['TValue'] | TNull) { return this.indices.isValid(value); }\n    public setValid(index: number, valid: boolean) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    public setValue(index: number, value: T['TValue']) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    public flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary as Vector<T['dictionary']>;\n        this.clear();\n        return data;\n    }\n    public finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    public clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    public valueToKey(val: any): string | number {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedSizeBinary } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class FixedSizeBinaryBuilder<TNull = any> extends FixedWidthBuilder<FixedSizeBinary, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h: number) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d: number) {\n\n    if (d !== d) { return 0x7E00; } // NaN\n\n    f64[0] = d;\n\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        } else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    } else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    } else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n\n    return sign | expo | sigf & 0xFFFF;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\nimport { Float, Float16, Float32, Float64 } from '../type';\n\n/** @ignore */\nexport class FloatBuilder<T extends Float = Float, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n\n/** @ignore */\nexport class Float16Builder<TNull = any> extends FloatBuilder<Float16, TNull> {\n    public setValue(index: number, value: number) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n\n/** @ignore */\nexport class Float32Builder<TNull = any> extends FloatBuilder<Float32, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Float64Builder<TNull = any> extends FloatBuilder<Float64, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ArrayBufferViewInput, toArrayBufferView } from './buffer';\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n\n/** @ignore */ type BigNumArray = IntArray | UintArray;\n/** @ignore */ type IntArray = Int8Array | Int16Array | Int32Array;\n/** @ignore */ type UintArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray;\n\n/** @ignore */\nfunction BigNum(this: any, x: any, ...xs: any) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\n\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function<T extends BN<BigNumArray>>(this: T) { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function<T extends BN<BigNumArray>>(this: T) { return bignumToNumber(this); };\nBigNum.prototype.toString = function<T extends BN<BigNumArray>>(this: T) { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function<T extends BN<BigNumArray>>(this: T, hint: 'string' | 'number' | 'default' = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    return bignumToString(this);\n};\n\n/** @ignore */\ntype TypedArrayConstructorArgs =\n    [number | void] |\n    [Iterable<number> | Iterable<bigint>] |\n    [ArrayBufferLike, number | void, number | void] ;\n\n/** @ignore */\nfunction SignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n\nObject.setPrototypeOf(SignedBigNum.prototype,   Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype,  Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype,   BigNum.prototype, { 'constructor': SignedBigNum,   'signed': true,  'TypedArray': Int32Array,  'BigIntArray': BigInt64Array  });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype,  BigNum.prototype, { 'constructor': DecimalBigNum,  'signed': true,  'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n\n/** @ignore */\nfunction bignumToNumber<T extends BN<BigNumArray>>(bn: T) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\n\n/** @ignore */\nexport let bignumToString: { <T extends BN<BigNumArray>>(a: T): string; };\n/** @ignore */\nexport let bignumToBigInt: { <T extends BN<BigNumArray>>(a: T): bigint; };\n\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = <any> bignumToString;\n} else {\n    bignumToBigInt = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : <any>decimalToString(a));\n    bignumToString = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n\n/** @ignore */\nfunction decimalToString<T extends BN<BigNumArray>>(a: T) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n\n/** @ignore */\nexport class BN<T extends BigNumArray> {\n    /** @nocollapse */\n    public static new<T extends BigNumArray>(num: T, isSigned?: boolean): (T & BN<T>) {\n        switch (isSigned) {\n            case true: return new (<any> SignedBigNum)(num) as (T & BN<T>);\n            case false: return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new (<any> SignedBigNum)(num) as (T & BN<T>);\n        }\n        if (num.byteLength === 16) {\n            return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n        }\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static signed<T extends IntArray>(num: T): (T & BN<T>) {\n        return new (<any> SignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static unsigned<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static decimal<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n    }\n    constructor(num: T, isSigned?: boolean) {\n        return BN.new(num, isSigned) as any;\n    }\n}\n\n/** @ignore */\nexport interface BN<T extends BigNumArray> extends TypedArrayLike<T> {\n\n    new<T extends ArrayBufferViewInput>(buffer: T, signed?: boolean): T;\n\n    readonly signed: boolean;\n    readonly TypedArray: TypedArrayConstructor<TypedArray>;\n    readonly BigIntArray: BigIntArrayConstructor<BigIntArray>;\n\n    [Symbol.toStringTag]:\n        'Int8Array'         |\n        'Int16Array'        |\n        'Int32Array'        |\n        'Uint8Array'        |\n        'Uint16Array'       |\n        'Uint32Array'       |\n        'Uint8ClampedArray';\n\n    /**\n     * Convert the bytes to their (positive) decimal representation for printing\n     */\n    toString(): string;\n    /**\n     * Down-convert the bytes to a 53-bit precision integer. Invoked by JS for\n     * arithmetic operators, like `+`. Easy (and unsafe) way to convert BN to\n     * number via `+bn_inst`\n     */\n    valueOf(): number;\n    /**\n     * Return the JSON representation of the bytes. Must be wrapped in double-quotes,\n     * so it's compatible with JSON.stringify().\n     */\n    toJSON(): string;\n    [Symbol.toPrimitive](hint?: any): number | string | bigint;\n}\n\n/** @ignore */\ninterface TypedArrayLike<T extends BigNumArray> {\n\n    readonly length: number;\n    readonly buffer: ArrayBuffer;\n    readonly byteLength: number;\n    readonly byteOffset: number;\n    readonly BYTES_PER_ELEMENT: number;\n\n    includes(searchElement: number, fromIndex?: number | undefined): boolean;\n    copyWithin(target: number, start: number, end?: number | undefined): this;\n    every(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    fill(value: number, start?: number | undefined, end?: number | undefined): this;\n    filter(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): T;\n    find(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number | undefined;\n    findIndex(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number;\n    forEach(callbackfn: (value: number, index: number, array: T) => void, thisArg?: any): void;\n    indexOf(searchElement: number, fromIndex?: number | undefined): number;\n    join(separator?: string | undefined): string;\n    lastIndexOf(searchElement: number, fromIndex?: number | undefined): number;\n    map(callbackfn: (value: number, index: number, array: T) => number, thisArg?: any): T;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reverse(): T;\n    set(array: ArrayLike<number>, offset?: number | undefined): void;\n    slice(start?: number | undefined, end?: number | undefined): T;\n    some(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    sort(compareFn?: ((a: number, b: number) => number) | undefined): this;\n    subarray(begin: number, end?: number | undefined): T;\n    toLocaleString(): string;\n    entries(): IterableIterator<[number, number]>;\n    keys(): IterableIterator<number>;\n    values(): IterableIterator<number>;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder, BuilderOptions } from '../builder';\nimport { Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64 } from '../type';\n\n/** @ignore */\nexport class IntBuilder<T extends Int = Int, TNull = any> extends FixedWidthBuilder<T, TNull> {\n    public setValue(index: number, value: T['TValue']) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Int8Builder<TNull = any> extends IntBuilder<Int8, TNull> {}\n/** @ignore */\nexport class Int16Builder<TNull = any> extends IntBuilder<Int16, TNull> {}\n/** @ignore */\nexport class Int32Builder<TNull = any> extends IntBuilder<Int32, TNull> {}\n/** @ignore */\nexport class Int64Builder<TNull = any> extends IntBuilder<Int64, TNull> {\n    protected _values: WideBufferBuilder<Int32Array, BigInt64Array>;\n    constructor(options: BuilderOptions<Int64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Int32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\n/** @ignore */\nexport class Uint8Builder<TNull = any> extends IntBuilder<Uint8, TNull> {}\n/** @ignore */\nexport class Uint16Builder<TNull = any> extends IntBuilder<Uint16, TNull> {}\n/** @ignore */\nexport class Uint32Builder<TNull = any> extends IntBuilder<Uint32, TNull> {}\n/** @ignore */\nexport class Uint64Builder<TNull = any> extends IntBuilder<Uint64, TNull> {\n    protected _values: WideBufferBuilder<Uint32Array, BigUint64Array>;\n    constructor(options: BuilderOptions<Uint64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Uint32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\nconst toBigInt = ((memo: any) => (value: any) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeBuilder<T extends Time = Time, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimeSecondBuilder<TNull = any> extends TimeBuilder<TimeSecond, TNull> {}\n/** @ignore */\nexport class TimeMillisecondBuilder<TNull = any> extends TimeBuilder<TimeMillisecond, TNull> {}\n/** @ignore */\nexport class TimeMicrosecondBuilder<TNull = any> extends TimeBuilder<TimeMicrosecond, TNull> {}\n/** @ignore */\nexport class TimeNanosecondBuilder<TNull = any> extends TimeBuilder<TimeNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampBuilder<T extends Timestamp = Timestamp, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimestampSecondBuilder<TNull = any> extends TimestampBuilder<TimestampSecond, TNull> {}\n/** @ignore */\nexport class TimestampMillisecondBuilder<TNull = any> extends TimestampBuilder<TimestampMillisecond, TNull> {}\n/** @ignore */\nexport class TimestampMicrosecondBuilder<TNull = any> extends TimestampBuilder<TimestampMicrosecond, TNull> {}\n/** @ignore */\nexport class TimestampNanosecondBuilder<TNull = any> extends TimestampBuilder<TimestampNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalBuilder<T extends Interval = Interval, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class IntervalDayTimeBuilder<TNull = any> extends IntervalBuilder<IntervalDayTime, TNull> {}\n/** @ignore */\nexport class IntervalYearMonthBuilder<TNull = any> extends IntervalBuilder<IntervalYearMonth, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Binary } from '../type';\nimport { toUint8Array } from '../util/buffer';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BinaryBuilder<TNull = any> extends VariableWidthBuilder<Binary, TNull> {\n    constructor(opts: BuilderOptions<Binary, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: Uint8Array) {\n        return super.setValue(index, toUint8Array(value));\n    }\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Utf8 } from '../type';\nimport { encodeUtf8 } from '../util/utf8';\nimport { BinaryBuilder } from './binary';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class Utf8Builder<TNull = any> extends VariableWidthBuilder<Utf8, TNull> {\n    constructor(opts: BuilderOptions<Utf8, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: string) {\n        return super.setValue(index, encodeUtf8(value) as any);\n    }\n    // @ts-ignore\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number): void {}\n}\n\n(Utf8Builder.prototype as any)._flushPending = (BinaryBuilder.prototype as any)._flushPending;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\n\n/** @ignore */\nexport class Run<T extends DataType = any, TNull = any> {\n    // @ts-ignore\n    protected _values: ArrayLike<T['TValue'] | TNull>;\n    public get length() { return this._values.length; }\n    public get(index: number) { return this._values[index]; }\n    public clear() { this._values = <any> null; return this; }\n    public bind(values: Vector<T> | ArrayLike<T['TValue'] | TNull>) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this as any;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { StructVector } from './struct';\nimport { valueToString } from '../util/pretty';\nimport { DataType, Struct, RowLike } from '../type';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\n\n    public readonly size: number;\n    public readonly [Symbol.toStringTag]: string;\n\n    protected [kRowIndex]: number;\n    protected [kParent]: Vector<Struct>;\n    protected [kKeyToIdx]: Map<K, number>;\n    protected [kIdxToVal]: V[];\n\n    constructor(parent: Vector<Struct>, numKeys: number) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n\n    public abstract keys(): IterableIterator<K>;\n    public abstract values(): IterableIterator<V>;\n    public abstract getKey(idx: number): K;\n    public abstract getIndex(key: K): number;\n    public abstract getValue(idx: number): V;\n    public abstract setValue(idx: number, val: V): void;\n\n    public entries() { return this[Symbol.iterator](); }\n\n    public has(key: K) { return this.get(key) !== undefined; }\n\n    public get(key: K) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            } else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n\n    public set(key: K, val: V) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = <any> this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n\n    public toArray() { return [...this.values()]; }\n    public toJSON() {\n        const obj = {} as any;\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n\n    public inspect() { return this.toString(); }\n    public [kCustomInspect]() { return this.toString(); }\n    public toString() {\n        const str: string[] = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\n        Object.defineProperties(proto, {\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n        });\n        return (proto as any)[Symbol.toStringTag] = 'Row';\n    })(Row.prototype);\n}\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    public keys() {\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\n    }\n    public values() {\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\n    }\n    public getKey(idx: number): K['TValue'] {\n        return this[kParent].getChildAt(0)!.get(idx);\n    }\n    public getIndex(key: K['TValue']): number {\n        return this[kParent].getChildAt(0)!.indexOf(key);\n    }\n    public getValue(index: number): V['TValue'] | null {\n        return this[kParent].getChildAt(1)!.get(index);\n    }\n    public setValue(index: number, value: V['TValue'] | null): void {\n        this[kParent].getChildAt(1)!.set(index, value);\n    }\n}\n\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\n    constructor(parent: StructVector<T>) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    public *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name as keyof T;\n        }\n    }\n    public *values() {\n        for (const field of this[kParent].type.children) {\n            yield (this as RowLike<T>)[field.name];\n        }\n    }\n    public getKey(idx: number): keyof T {\n        return this[kParent].type.children[idx].name as keyof T;\n    }\n    public getIndex(key: keyof T): number {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    public getValue(index: number): T[keyof T]['TValue'] | null {\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\n    }\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\n    }\n}\n\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\n    return <T extends Row>(row: T) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key: any) => function(this: T) { return this.get(key); };\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler: ProxyHandler<Row> = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row: Row, key: PropertyKey) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row: Row, key: PropertyKey, receiver: any) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\n            switch (key) {\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\n})();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n\n/** @ignore */\ntype RangeLike = { length: number; stride?: number };\n/** @ignore */\ntype ClampThen<T extends RangeLike> = (source: T, index: number) => any;\n/** @ignore */\ntype ClampRangeThen<T extends RangeLike> = (source: T, offset: number, length: number) => any;\n\nexport function clampIndex<T extends RangeLike>(source: T, index: number): number;\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then?: N) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n\n/** @ignore */\nlet tmp: number;\nexport function clampRange<T extends RangeLike>(source: T, begin: number | undefined, end: number | undefined): [number, number];\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then?: N) {\n\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n     // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\n\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value: any) => value !== value;\n\n/** @ignore */\nexport function createElementComparator(search: any) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value: any) => value === search\n            : (value: any) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value: any) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value: any) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) { return creatMapComparator(search); }\n    // Compare Array-likes\n    if (Array.isArray(search)) { return createArrayLikeComparator(search); }\n    // Compare Vectors\n    if (search instanceof Vector) { return createVectorComparator(search); }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n\n/** @ignore */\nfunction createArrayLikeComparator(lhs: ArrayLike<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction creatMapComparator(lhs: Map<any, any>) {\n    let i = -1;\n    const comparators = [] as ((x: any) => boolean)[];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createVectorComparator(lhs: Vector<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createObjectComparator(lhs: any) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) { return () => false; }\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\n\nfunction createSubElementsComparator(comparators: ((x: any) => boolean)[], keys?: Iterable<string>) {\n    return (rhs: any) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\n\nfunction compareArray(comparators: ((x: any) => boolean)[], arr: any[]) {\n    const n = comparators.length;\n    if (arr.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) { return false; }\n    }\n    return true;\n}\n\nfunction compareVector(comparators: ((x: any) => boolean)[], vec: Vector) {\n    const n = comparators.length;\n    if (vec.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) { return false; }\n    }\n    return true;\n}\n\nfunction compareObject(comparators: ((x: any) => boolean)[], obj: Map<any, any>, keys: Iterable<string>) {\n\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done;\n         ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { clampRange } from '../util/vector';\nimport { DataType, Dictionary } from '../type';\nimport { selectChunkArgs } from '../util/args';\nimport { DictionaryVector } from './dictionary';\nimport { AbstractVector, Vector } from '../vector';\nimport { Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\ntype ChunkedDict<T extends DataType> = T extends Dictionary ? Vector<T['dictionary']> : null | never;\n/** @ignore */\ntype ChunkedKeys<T extends DataType> = T extends Dictionary ? Vector<T['indices']> | Chunked<T['indices']> : null | never;\n\n/** @ignore */\nexport type SearchContinuation<T extends Chunked> = (column: T, chunkIndex: number, valueIndex: number) => any;\n\n/** @ignore */\nexport class Chunked<T extends DataType = any>\n    extends AbstractVector<T>\n    implements Clonable<Chunked<T>>,\n               Sliceable<Chunked<T>>,\n               Applicative<T, Chunked<T>> {\n\n    /** @nocollapse */\n    public static flatten<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        return selectChunkArgs<Vector<T>>(Vector, vectors);\n    }\n\n    /** @nocollapse */\n    public static concat<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        const chunks = Chunked.flatten<T>(...vectors);\n        return new Chunked<T>(chunks[0].type, chunks);\n    }\n\n    protected _type: T;\n    protected _length: number;\n    protected _chunks: Vector<T>[];\n    protected _numChildren: number;\n    protected _children?: Chunked[];\n    protected _nullCount: number = -1;\n    protected _chunkOffsets: Uint32Array;\n\n    constructor(type: T, chunks: Vector<T>[] = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n\n    public get type() { return this._type; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get typeId(): T['TType'] { return this._type.typeId; }\n    public get VectorName() { return `Chunked<${this._type}>`; }\n    public get data(): Data<T> {\n        return this._chunks[0] ? this._chunks[0].data : <any> null;\n    }\n\n    public get ArrayType() { return this._type.ArrayType; }\n    public get numChildren() { return this._numChildren; }\n    public get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    public get byteLength(): number {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n\n    protected _indices?: ChunkedKeys<T>;\n    public get indices(): ChunkedKeys<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = (<any> this._chunks) as DictionaryVector<T, any>[];\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices))) as ChunkedKeys<T>;\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    public get dictionary(): ChunkedDict<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary as ChunkedDict<T>;\n        }\n        return null;\n    }\n\n    public *[Symbol.iterator](): IterableIterator<T['TValue'] | null> {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n\n    public clone(chunks = this._chunks): Chunked<T> {\n        return new Chunked(this._type, chunks);\n    }\n\n    public concat(...others: Vector<T>[]): Chunked<T> {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n\n    public slice(begin?: number, end?: number): Chunked<T> {\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Chunked<R> | null {\n\n        if (index < 0 || index >= this._numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let child: Chunked<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (child = columns[index]) { return child; }\n        if (field = ((this._type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked<R>(field.type, chunks));\n            }\n        }\n\n        return null;\n    }\n\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0            ) { return null; }\n        if (idx >= offsets[rhs]) { return null; }\n        if (rhs <= 1           ) { return then ? then(this, 0, idx) : [0, idx]; }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n\n    public isValid(index: number): boolean {\n        return !!this.search(index, this.isValidInternal);\n    }\n\n    public get(index: number): T['TValue'] | null {\n        return this.search(index, this.getInternal);\n    }\n\n    public set(index: number, value: T['TValue'] | null): void {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n\n    public indexOf(element: T['TValue'], offset?: number): number {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element))!;\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n\n    public toArray(): T['TArray'] {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType: any = this._type.ArrayType;\n        if (n <= 0) { return new ArrayType(0); }\n        if (n <= 1) { return chunks[0].toArray(); }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set: any = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n\n    protected getInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].get(j); }\n    protected isValidInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].isValid(j); }\n    protected indexOfInternal({ _chunks }: Chunked<T>, chunkIndex: number, fromIndex: number, element: T['TValue']) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n\n    protected _sliceInternal(self: Chunked<T>, begin: number, end: number) {\n        const slices: Vector<T>[] = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) { break; }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) { continue; }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to) as Vector<T>);\n        }\n        return self.clone(slices);\n    }\n}\n\n/** @ignore */\nfunction calculateOffsets<T extends DataType>(vectors: Vector<T>[]) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n\n/** @ignore */\nconst typedSet = (src: TypedArray, dst: TypedArray, offset: number) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n\n/** @ignore */\nconst arraySet = (src: any[], dst: any[], offset: number) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n/** @ignore */\ninterface TypedArray extends ArrayBufferView {\n    readonly length: number;\n    readonly [n: number]: number;\n    set(array: ArrayLike<number>, offset?: number): void;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Field } from './schema';\nimport { DataType } from './type';\nimport { Vector } from './vector';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { VectorCtorArgs, VectorType as V } from './interfaces';\nimport { Chunked, SearchContinuation } from './vector/chunked';\n\nexport interface Column<T extends DataType = any> {\n    typeId: T['TType'];\n    concat(...others: Vector<T>[]): Column<T>;\n    slice(begin?: number, end?: number): Column<T>;\n    clone(chunks?: Vector<T>[], offsets?: Uint32Array): Column<T>;\n}\n\nexport class Column<T extends DataType = any>\n    extends Chunked<T>\n    implements Clonable<Column<T>>,\n               Sliceable<Column<T>>,\n               Applicative<T, Column<T>> {\n\n    public static new<T extends DataType>(field: string | Field<T>, ...chunks: (Vector<T> | Vector<T>[])[]): Column<T>;\n    public static new<T extends DataType>(field: string | Field<T>, data: Data<T>, ...args: VectorCtorArgs<V<T>>): Column<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(field: string | Field<T>, data: Data<T> | Vector<T> | (Data<T> | Vector<T>)[], ...rest: any[]) {\n\n        const chunks = Chunked.flatten<T>(\n            Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n            [Vector.new(data, ...rest)]\n        );\n\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        } else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n\n    constructor(field: Field<T>, vectors: Vector<T>[] = [], offsets?: Uint32Array) {\n        vectors = Chunked.flatten<T>(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n\n    protected _field: Field<T>;\n    protected _children?: Column[];\n\n    public get field() { return this._field; }\n    public get name() { return this._field.name; }\n    public get nullable() { return this._field.nullable; }\n    public get metadata() { return this._field.metadata; }\n\n    public clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n\n        if (index < 0 || index >= this.numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let column: Column<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (column = columns[index]) { return column; }\n        if (field = ((this.type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n\n        return null;\n    }\n}\n\n/** @ignore */\nclass SingleChunkColumn<T extends DataType = any> extends Column<T> {\n    protected _chunk: Vector<T>;\n    constructor(field: Field<T>, vector: Vector<T>, offsets?: Uint32Array) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    public isValid(index: number): boolean {\n        return this._chunk.isValid(index);\n    }\n    public get(index: number): T['TValue'] | null {\n        return this._chunk.get(index);\n    }\n    public set(index: number, value: T['TValue'] | null): void {\n        this._chunk.set(index, value);\n    }\n    public indexOf(element: T['TValue'], offset?: number): number {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from '../vector/chunked';\n\ntype RecordBatchCtor = typeof import('../recordbatch').RecordBatch;\n\nconst isArray = Array.isArray;\n\n/** @ignore */\nexport const selectArgs = <T>(Ctor: any, vals: any[]) => _selectArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnArgs = <T extends { [key: string]: DataType }>(args: any[]) => {\n    const [fields, values] = _selectFieldArgs<T>(args, [[], []]);\n    return values.map((x, i) =>\n        x instanceof Column ? Column.new(x.field.clone(fields[i]), x) :\n        x instanceof Vector ? Column.new(fields[i], x) as Column<T[keyof T]> :\n                              Column.new(fields[i], [] as Vector<T[keyof T]>[]));\n};\n\n/** @ignore */\nexport const selectFieldArgs = <T extends { [key: string]: DataType }>(args: any[]) => _selectFieldArgs<T>(args, [[], []]);\n/** @ignore */\nexport const selectChunkArgs = <T>(Ctor: any, vals: any[]) => _selectChunkArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectVectorChildrenArgs = <T extends Vector>(Ctor: RecordBatchCtor, vals: any[]) => _selectVectorChildrenArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnChildrenArgs = <T extends Column>(Ctor: RecordBatchCtor, vals: any[]) => _selectColumnChildrenArgs(Ctor, vals, [], 0) as T[];\n\n/** @ignore */\nfunction _selectArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectChunkArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectVectorChildrenArgs<T extends Vector>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Vector, value.schema.fields.map((_, i) => value.getChildAt(i)!), res, j).length;\n        } else if (value instanceof Vector) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectColumnChildrenArgs<T extends Column>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Column, value.schema.fields.map((f, i) => Column.new(f, value.getChildAt(i)!)), res, j).length;\n        } else if (value instanceof Column) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nconst toKeysAndValues = (xs: [any[], any[]], [k, v]: [any, any], i: number) => (xs[0][i] = k, xs[1][i] = v, xs);\n\n/** @ignore */\nfunction _selectFieldArgs<T extends { [key: string]: DataType }>(vals: any[], ret: [Field<T[keyof T]>[], Vector<T[keyof T]>[]]): [Field<T[keyof T]>[], (T[keyof T] | Vector<T[keyof T]>)[]] {\n    let keys: any[], n: number;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) { return ret; }\n            if (isArray(vals[0])) { return _selectFieldArgs(vals[0], ret); }\n            if (!(vals[0] instanceof Data || vals[0] instanceof Vector || vals[0] instanceof DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field: number | string | Field<T[keyof T]>;\n    let val: Vector<T[keyof T]> | Data<T[keyof T]>;\n    let [fields, values] = ret as [Field<T[keyof T]>[], any[]];\n\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        } else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = Field.new(field, val as DataType, true) as Field<T[keyof T]>;\n            } else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof Data && (values[valueIndex] = val = Vector.new(val) as Vector);\n                fields[++fieldIndex] = Field.new(field, val.type, true) as Field<T[keyof T]>;\n            }\n        }\n    }\n    return ret;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { DataType } from './type';\nimport { selectArgs } from './util/args';\nimport { selectFieldArgs } from './util/args';\nimport { instance as comparer } from './visitor/typecomparator';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = T[keyof T][] | Data<T[keyof T]>[] | Vector<T[keyof T]>[];\n\nexport class Schema<T extends { [key: string]: DataType } = any> {\n\n    public static from<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static from<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static from<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static from(...args: any[]) {\n        return Schema.new(args[0], args[1]);\n    }\n\n    public static new<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static new<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static new(...args: any[]) {\n        return new Schema(selectFieldArgs(args)[0]);\n    }\n\n    public readonly fields: Field<T[keyof T]>[];\n    public readonly metadata: Map<string, string>;\n    public readonly dictionaries: Map<number, DataType>;\n\n    constructor(fields: Field[] = [],\n                metadata?: Map<string, string> | null,\n                dictionaries?: Map<number, DataType> | null) {\n        this.fields = (fields || []) as Field<T[keyof T]>[];\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    public get [Symbol.toStringTag]() { return 'Schema'; }\n    public toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n\n    public compareTo(other?: Schema | null): other is Schema<T> {\n        return comparer.compareSchemas(this, other);\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema<{ [P in K]: T[P] }>(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        return new Schema<{ [key: string]: K }>(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n\n    public assign<R extends { [key: string]: DataType } = any>(schema: Schema<R>): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...fields: (Field<R[keyof R]> | Field<R[keyof R]>[])[]): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...args: (Schema<R> | Field<R[keyof R]> | Field<R[keyof R]>[])[]) {\n\n        const other = args[0] instanceof Schema ? args[0] as Schema<R>\n            : new Schema<R>(selectArgs<Field<R[keyof R]>>(Field, args));\n\n        const curFields = [...this.fields] as Field[];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        }) as Field[];\n\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n\n        return new Schema<T & R>(\n            [...curFields, ...newFields], metadata,\n            new Map([...this.dictionaries, ...newDictionaries])\n        );\n    }\n}\n\nexport class Field<T extends DataType = any> {\n\n    public static new<T extends DataType = any>(props: { name: string | number, type: T, nullable?: boolean, metadata?: Map<string, string> | null }): Field<T>;\n    public static new<T extends DataType = any>(name: string | number | Field<T>, type: T, nullable?: boolean, metadata?: Map<string, string> | null): Field<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field<T>(`${name}`, type, nullable, metadata);\n    }\n\n    public readonly type: T;\n    public readonly name: string;\n    public readonly nullable: boolean;\n    public readonly metadata: Map<string, string>;\n\n    constructor(name: string, type: T, nullable = false, metadata?: Map<string, string> | null) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n\n    public get typeId() { return this.type.typeId; }\n    public get [Symbol.toStringTag]() { return 'Field'; }\n    public toString() { return `${this.name}: ${this.type}`; }\n    public compareTo(other?: Field | null): other is Field<T> {\n        return comparer.compareField(this, other);\n    }\n    public clone<R extends DataType = T>(props: { name?: string | number, type?: R, nullable?: boolean, metadata?: Map<string, string> | null }): Field<R>;\n    public clone<R extends DataType = T>(name?: string | number | Field<T>, type?: R, nullable?: boolean, metadata?: Map<string, string> | null): Field<R>;\n    public clone<R extends DataType = T>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata} = args[0]);\n        return Field.new<R>(name, type, nullable, metadata);\n    }\n}\n\n/** @ignore */\nfunction mergeMaps<TKey, TVal>(m1?: Map<TKey, TVal> | null, m2?: Map<TKey, TVal> | null): Map<TKey, TVal> {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n\n/** @ignore */\nfunction generateDictionaryMap(fields: Field[], dictionaries = new Map<number, DataType>()): Map<number, DataType> {\n\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            } else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n\n    return dictionaries;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Schema.prototype as any).fields = null;\n(Schema.prototype as any).metadata = null;\n(Schema.prototype as any).dictionaries = null;\n\n(Field.prototype as any).type = null;\n(Field.prototype as any).name = null;\n(Field.prototype as any).nullable = null;\n(Field.prototype as any).metadata = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { DataType, List } from '../type';\nimport { OffsetsBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions, VariableWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class ListBuilder<T extends DataType = any, TNull = any> extends VariableWidthBuilder<List<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    protected _offsets: OffsetsBufferBuilder;\n    constructor(opts: BuilderOptions<List<T>, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    protected _flushPending(pending: Map<number, T['TValue'] | undefined>) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListBuilder<T extends DataType = any, TNull = any> extends Builder<FixedSizeList<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    public setValue(index: number, value: T['TValue']) {\n        super.setValue(index, this._run.bind(value));\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataType, Map_, Struct } from '../type';\nimport { Builder, VariableWidthBuilder } from '../builder';\n\n/** @ignore */ type MapValue<K extends DataType = any, V extends DataType = any> = Map_<K, V>['TValue'];\n/** @ignore */ type MapValues<K extends DataType = any, V extends DataType = any> = Map<number, MapValue<K, V> | undefined>;\n/** @ignore */ type MapValueExt<K extends DataType = any, V extends DataType = any> = MapValue<K, V> | { [key: string]: V } | { [key: number]: V } ;\n\n/** @ignore */\nexport class MapBuilder<K extends DataType = any, V extends DataType = any, TNull = any> extends VariableWidthBuilder<Map_<K, V>, TNull> {\n\n    protected _pending: MapValues<K, V> | undefined;\n    public set(index: number, value: MapValueExt<K, V> | TNull) {\n        return super.set(index, value as MapValue<K, V> | TNull);\n    }\n\n    public setValue(index: number, value: MapValueExt<K, V>) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map() as MapValues<K, V>);\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n\n    public addChild(child: Builder<Struct<{ key: K, value: V }>>, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_<K, V>(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n\n    protected _flushPending(pending: MapValues<K, V>) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */\nexport class StructBuilder<T extends { [key: string]: DataType } = any, TNull = any> extends Builder<Struct<T>, TNull> {\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\nimport { Union, SparseUnion, DenseUnion } from '../type';\n\nexport interface UnionBuilderOptions<T extends Union = any, TNull = any> extends BuilderOptions<T, TNull> {\n    valueToChildTypeId?: (builder: UnionBuilder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport abstract class UnionBuilder<T extends Union, TNull = any> extends Builder<T, TNull> {\n\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n\n    public get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n\n    public append(value: T['TValue'] | TNull, childTypeId?: number) {\n        return this.set(this.length, value, childTypeId);\n    }\n\n    public set(index: number, value: T['TValue'] | TNull, childTypeId?: number) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        this._typeIds.set(index, childTypeId!);\n        super.setValue(index, value);\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = <T> new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n\n    /** @ignore */\n    // @ts-ignore\n    protected _valueToChildTypeId(builder: UnionBuilder<T, TNull>, value: any, offset: number): number {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n\n/** @ignore */\nexport class SparseUnionBuilder<T extends SparseUnion, TNull = any> extends UnionBuilder<T, TNull> {}\n/** @ignore */\nexport class DenseUnionBuilder<T extends DenseUnion, TNull = any> extends UnionBuilder<T, TNull> {\n\n    protected _offsets: DataBufferBuilder<Int32Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n\n    /** @ignore */\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId!];\n        this._offsets.set(index, this.getChildAt(childIndex)!.length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { encodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { float64ToUint16 } from '../util/math';\nimport { toArrayBufferView } from '../util/buffer';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface SetVisitor extends Visitor {\n    visit<T extends VectorType>(node: T, index: number, value: T['TValue']): void;\n    visitMany<T extends VectorType>(nodes: T[], indices: number[], values: T['TValue'][]): void[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitList                 <T extends List>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n}\n\n/** @ignore */\nexport class SetVisitor extends Visitor {}\n\n/** @ignore */\nconst setEpochMsToDays = (data: Int32Array, index: number, epochMs: number) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n\n/** @ignore */\nconst setVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number, value: Uint8Array) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n\n/** @ignore */\nconst setBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number, val: boolean) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |=  (1 << (idx % 8)))  // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n\n};\n\n/** @ignore */ type Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */ type Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst setDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2       = <T extends Numeric2X>      (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (typeof value) {\n        case 'bigint': vector.values64[index] = value; break;\n        case 'number': vector.values[index * vector.stride] = value; break;\n        default:\n            const val = value as T['TArray'];\n            const { stride, ArrayType } = vector;\n            const long = toArrayBufferView<T['TArray']>(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, stride), stride * index); };\n\n/** @ignore */\nconst setBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = <T extends Int>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value as Numeric1X['TValue'])\n        : setNumericX2(vector as VectorType<Numeric2X>, index, value as Numeric2X['TValue']);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = <T extends Float>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.precision !== Precision.HALF\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value)\n        : setFloat16(vector as VectorType<Float16>, index, value);\n};\n\n/* istanbul ignore next */\nconst setDate = <T extends Date_> (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.unit === DateUnit.DAY\n        ? setDateDay(vector as VectorType<DateDay>, index, value)\n        : setDateMillisecond(vector as VectorType<DateMillisecond>, index, value);\n};\n\n/** @ignore */\nconst setTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimestampSecond(vector as VectorType<TimestampSecond>, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index, value);\n        case TimeUnit.NANOSECOND:  return  setTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index, value);\n    }\n};\n\n/** @ignore */\nconst setTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime            = <T extends Time>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimeSecond(vector as VectorType<TimeSecond>, index, value as TimeSecond['TValue']);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(vector as VectorType<TimeMillisecond>, index, value as TimeMillisecond['TValue']);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index, value as TimeMicrosecond['TValue']);\n        case TimeUnit.NANOSECOND:  return  setTimeNanosecond(vector as VectorType<TimeNanosecond>, index, value as TimeNanosecond['TValue']);\n    }\n};\n\n/** @ignore */\nconst setDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 4), 4 * index); };\n\n/** @ignore */\nconst setList = <T extends List>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n\n/** @ignore */\nconst setMap = <T extends Map_>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n\n/** @ignore */ const _setStructArrayValue = (o: number, v: any[]) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o: number, v: Vector) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o: number, v: Map<string, any>) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o: number, v: { [key: string]: any }) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = <T extends Struct>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n\n    const setValue = value instanceof Map    ? _setStructMapValue(index, value)    :\n                     value instanceof Vector ? _setStructVectorValue(index, value) :\n                     Array.isArray(value)    ? _setStructArrayValue(index, value)  :\n                                               _setStructObjectValue(index, value) ;\n\n    vector.type.children.forEach((f: Field, i: number) => setValue(vector.getChildAt(i), f, i));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number, value: V['TValue']) => {\n    vector.type.mode === UnionMode.Dense ?\n        setDenseUnion(vector as VectorType<DenseUnion>, index, value) :\n        setSparseUnion(vector as VectorType<SparseUnion>, index, value);\n};\n\n/** @ignore */\nconst setDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n\n/** @ignore */\nconst setSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n\n/** @ignore */\nconst setDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = <T extends Interval>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector as VectorType<IntervalDayTime>, index, value)\n        : setIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index, value);\n};\n\n/** @ignore */\nconst setIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values[index] = (value[0] * 12) + (value[1] % 12); };\n\n/** @ignore */\nconst setFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\n\nSetVisitor.prototype.visitBool                 =                 setBool;\nSetVisitor.prototype.visitInt                  =                  setInt;\nSetVisitor.prototype.visitInt8                 =              setNumeric;\nSetVisitor.prototype.visitInt16                =              setNumeric;\nSetVisitor.prototype.visitInt32                =              setNumeric;\nSetVisitor.prototype.visitInt64                =            setNumericX2;\nSetVisitor.prototype.visitUint8                =              setNumeric;\nSetVisitor.prototype.visitUint16               =              setNumeric;\nSetVisitor.prototype.visitUint32               =              setNumeric;\nSetVisitor.prototype.visitUint64               =            setNumericX2;\nSetVisitor.prototype.visitFloat                =                setFloat;\nSetVisitor.prototype.visitFloat16              =              setFloat16;\nSetVisitor.prototype.visitFloat32              =              setNumeric;\nSetVisitor.prototype.visitFloat64              =              setNumeric;\nSetVisitor.prototype.visitUtf8                 =                 setUtf8;\nSetVisitor.prototype.visitBinary               =               setBinary;\nSetVisitor.prototype.visitFixedSizeBinary      =      setFixedSizeBinary;\nSetVisitor.prototype.visitDate                 =                 setDate;\nSetVisitor.prototype.visitDateDay              =              setDateDay;\nSetVisitor.prototype.visitDateMillisecond      =      setDateMillisecond;\nSetVisitor.prototype.visitTimestamp            =            setTimestamp;\nSetVisitor.prototype.visitTimestampSecond      =      setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond  =  setTimestampNanosecond;\nSetVisitor.prototype.visitTime                 =                 setTime;\nSetVisitor.prototype.visitTimeSecond           =           setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond      =      setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond      =      setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond       =       setTimeNanosecond;\nSetVisitor.prototype.visitDecimal              =              setDecimal;\nSetVisitor.prototype.visitList                 =                 setList;\nSetVisitor.prototype.visitStruct               =               setStruct;\nSetVisitor.prototype.visitUnion                =                setUnion;\nSetVisitor.prototype.visitDenseUnion           =           setDenseUnion;\nSetVisitor.prototype.visitSparseUnion          =          setSparseUnion;\nSetVisitor.prototype.visitDictionary           =           setDictionary;\nSetVisitor.prototype.visitInterval             =        setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime      =      setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth    =    setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList        =        setFixedSizeList;\nSetVisitor.prototype.visitMap                  =                  setMap;\n\n/** @ignore */\nexport const instance = new SetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, BuilderCtor } from '../interfaces';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n\n/** @ignore */\nexport interface GetBuilderCtor extends Visitor {\n    visit<T extends Type>(type: T): BuilderCtor<T>;\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => BuilderCtor<T>;\n}\n\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    public visitNull                 () { return NullBuilder;                 }\n    public visitBool                 () { return BoolBuilder;                 }\n    public visitInt                  () { return IntBuilder;                  }\n    public visitInt8                 () { return Int8Builder;                 }\n    public visitInt16                () { return Int16Builder;                }\n    public visitInt32                () { return Int32Builder;                }\n    public visitInt64                () { return Int64Builder;                }\n    public visitUint8                () { return Uint8Builder;                }\n    public visitUint16               () { return Uint16Builder;               }\n    public visitUint32               () { return Uint32Builder;               }\n    public visitUint64               () { return Uint64Builder;               }\n    public visitFloat                () { return FloatBuilder;                }\n    public visitFloat16              () { return Float16Builder;              }\n    public visitFloat32              () { return Float32Builder;              }\n    public visitFloat64              () { return Float64Builder;              }\n    public visitUtf8                 () { return Utf8Builder;                 }\n    public visitBinary               () { return BinaryBuilder;               }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryBuilder;      }\n    public visitDate                 () { return DateBuilder;                 }\n    public visitDateDay              () { return DateDayBuilder;              }\n    public visitDateMillisecond      () { return DateMillisecondBuilder;      }\n    public visitTimestamp            () { return TimestampBuilder;            }\n    public visitTimestampSecond      () { return TimestampSecondBuilder;      }\n    public visitTimestampMillisecond () { return TimestampMillisecondBuilder; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondBuilder; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondBuilder;  }\n    public visitTime                 () { return TimeBuilder;                 }\n    public visitTimeSecond           () { return TimeSecondBuilder;           }\n    public visitTimeMillisecond      () { return TimeMillisecondBuilder;      }\n    public visitTimeMicrosecond      () { return TimeMicrosecondBuilder;      }\n    public visitTimeNanosecond       () { return TimeNanosecondBuilder;       }\n    public visitDecimal              () { return DecimalBuilder;              }\n    public visitList                 () { return ListBuilder;                 }\n    public visitStruct               () { return StructBuilder;               }\n    public visitUnion                () { return UnionBuilder;                }\n    public visitDenseUnion           () { return DenseUnionBuilder;           }\n    public visitSparseUnion          () { return SparseUnionBuilder;          }\n    public visitDictionary           () { return DictionaryBuilder;           }\n    public visitInterval             () { return IntervalBuilder;             }\n    public visitIntervalDayTime      () { return IntervalDayTimeBuilder;      }\n    public visitIntervalYearMonth    () { return IntervalYearMonthBuilder;    }\n    public visitFixedSizeList        () { return FixedSizeListBuilder;        }\n    public visitMap                  () { return MapBuilder;                  }\n}\n\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder, BuilderOptions } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\n\nimport { Type } from '../enum';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Utf8Builder } from './utf8';\nimport { BuilderType as B } from '../interfaces';\nimport { Builder, BuilderOptions } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n\n/** @nocollapse */\nBuilder.new = newBuilder;\n\nfunction newBuilder<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {\n\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn<T>(type)())(options) as Builder<T, TNull>;\n\n    if (type.children && type.children.length > 0) {\n\n        const children = options['children'] || [] as BuilderOptions[];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_: Field, i: number) => children[i] || defaultOptions)\n            : (({ name }: Field) => children[name] || defaultOptions);\n\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n\n    return builder as B<T, TNull>;\n}\n\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n        const BuilderCtor = getBuilderConstructor.visit(typeId);\n        BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n    });\n\n(Utf8Builder.prototype as any)._setValue = setVisitor.visitBinary;\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Block = File_.org.apache.arrow.flatbuf.Block;\nimport _Footer = File_.org.apache.arrow.flatbuf.Footer;\n\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\n\n/** @ignore */\nclass Footer_ {\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema()!);\n        return new OffHeapFooter(schema, footer) as Footer_;\n    }\n\n    /** @nocollapse */\n    public static encode(footer: Footer_) {\n\n        const b: Builder = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n\n        const dictionaryBatchesOffset = b.endVector();\n\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n\n        return b.asUint8Array();\n    }\n\n    // @ts-ignore\n    protected _recordBatches: FileBlock[];\n    // @ts-ignore\n    protected _dictionaryBatches: FileBlock[];\n    public get numRecordBatches() { return this._recordBatches.length; }\n    public get numDictionaries() { return this._dictionaryBatches.length; }\n\n    constructor(public schema: Schema,\n                public version: MetadataVersion = MetadataVersion.V4,\n                recordBatches?: FileBlock[], dictionaryBatches?: FileBlock[]) {\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n\n    public *recordBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) { yield block; }\n        }\n    }\n\n    public *dictionaryBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) { yield block; }\n        }\n    }\n\n    public getRecordBatch(index: number) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\n\nexport { Footer_ as Footer };\n\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n\n    public get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    public get numDictionaries() { return this._footer.dictionariesLength(); }\n\n    constructor(schema: Schema, protected _footer: _Footer) {\n        super(schema, _footer.version());\n    }\n\n    public getRecordBatch(index: number) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nexport class FileBlock {\n\n    /** @nocollapse */\n    public static decode(block: _Block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n\n    /** @nocollapse */\n    public static encode(b: Builder, fileBlock: FileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n\n    public offset: number;\n    public bodyLength: number;\n    public metaDataLength: number;\n\n    constructor(metaDataLength: number, bodyLength: Long | number, offset: Long | number) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, Readable, Writable, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays, ArrayBufferViewInput } from '../util/buffer';\n\nimport {\n    isPromise, isFetchResponse,\n    isIterable, isAsyncIterable,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */\nexport type WritableSink<T> = Writable<T> | WritableStream<T> | NodeJS.WritableStream | null;\n/** @ignore */\nexport type ReadableSource<T> = Readable<T> | PromiseLike<T> | AsyncIterable<T> | ReadableStream<T> | NodeJS.ReadableStream | null;\n\n/** @ignore */\nexport class AsyncByteQueue<T extends ArrayBufferViewInput = Uint8Array> extends AsyncQueue<Uint8Array, T> {\n    public write(value: ArrayBufferViewInput | Uint8Array) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value as T);\n        }\n    }\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values as any[])[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n\n/** @ignore */\nexport class ByteStream implements IterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: ByteStreamSource<Uint8Array>;\n    constructor(source?: Iterable<ArrayBufferViewInput> | ArrayBufferViewInput) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\nexport class AsyncByteStream implements Readable<Uint8Array>, AsyncIterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: AsyncByteStreamSource<Uint8Array>;\n    constructor(source?: PromiseLike<ArrayBufferViewInput> | Response | ReadableStream<ArrayBufferViewInput> | NodeJS.ReadableStream | AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput>) {\n        if (source instanceof AsyncByteStream) {\n            this.source = (source as AsyncByteStream).source;\n        } else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        } else if (isReadableDOMStream<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        } else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body!));\n        } else if (isIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        } else if (isPromise<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isAsyncIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public get closed(): Promise<void> { return this.source.closed; }\n    public cancel(reason?: any) { return this.source.cancel(reason); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\ninterface ByteStreamSourceIterator<T> extends IterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): IteratorResult<T>;\n}\n\n/** @ignore */\ninterface AsyncByteStreamSourceIterator<T> extends AsyncIterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nclass ByteStreamSource<T> {\n    constructor(protected source: ByteStreamSourceIterator<T>) {}\n    public cancel(reason?: any) { this.return(reason); }\n    public peek(size?: number | null): T | null { return this.next(size, 'peek').value; }\n    public read(size?: number | null): T | null { return this.next(size, 'read').value; }\n    public next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return this.source.next({ cmd, size }); }\n    public throw(value?: any) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    public return(value?: any) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n\n/** @ignore */\nclass AsyncByteStreamSource<T> implements Readable<T> {\n\n    private _closedPromise: Promise<void>;\n    private _closedPromiseResolve?: (value?: any) => void;\n    constructor (protected source: ByteStreamSourceIterator<T> | AsyncByteStreamSourceIterator<T>) {\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async read(size?: number | null): Promise<T | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<T | null> { return (await this.next(size, 'peek')).value; }\n    public async next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return (await this.source.next({ cmd, size })); }\n    public async throw(value?: any) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    public async return(value?: any) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FileHandle } from './interfaces';\nimport { ByteStream, AsyncByteStream } from './stream';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\n\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    public size: number;\n    public position: number = 0;\n    protected buffer: Uint8Array | null;\n    constructor(buffer: ArrayBufferViewInput, byteLength?: number) {\n        super();\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    public readInt32(position: number) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public seek(position: number) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public read(nBytes?: number | null) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            this.position = Math.min(size,\n                 position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    public readAt(position: number, nBytes: number) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    public close() { this.buffer && (this.buffer = null); }\n    public throw(value?: any) { this.close(); return { done: true, value }; }\n    public return(value?: any) { this.close(); return { done: true, value }; }\n}\n\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    // @ts-ignore\n    public size: number;\n    public position: number = 0;\n    public _pending?: Promise<void>;\n    protected _handle: FileHandle | null;\n    constructor(file: FileHandle, byteLength?: number) {\n        super();\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        } else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    public async readInt32(position: number) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public async seek(position: number) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public async read(nBytes?: number | null) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    public async readAt(position: number, nBytes: number) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    public async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    public async throw(value?: any) { await this.close(); return { done: true, value }; }\n    public async return(value?: any) { await this.close(); return { done: true, value }; }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nconst carryBit16 = 1 << 16;\n\n/** @ignore */\nfunction intAsHex(value: number): string {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n                      10,\n                      100,\n                      1000,\n                      10000,\n                      100000,\n                      1000000,\n                      10000000,\n                      100000000];\n\n/** @ignore */\nexport class BaseInt64 {\n    constructor (protected buffer: Uint32Array) {}\n\n    public high(): number { return this.buffer[1]; }\n    public low (): number { return this.buffer[0]; }\n\n    protected _times(other: BaseInt64) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n\n        let sum = product >>> 16;\n\n        product = L[2] * R[3];\n        sum += product;\n\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n\n        this.buffer[0] += sum << 16;\n\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n\n        return this;\n      }\n\n    protected _plus(other: BaseInt64) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n          ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n\n    public lessThan(other: BaseInt64): boolean {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n\n    public equals(other: BaseInt64): boolean {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n\n    public greaterThan(other: BaseInt64): boolean {\n        return other.lessThan(this);\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    public times(other: Uint64): Uint64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Uint64): Uint64 {\n        this._plus(other);\n        return this;\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Uint64 {\n        return Uint64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Uint64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Uint64 {\n        const length = str.length;\n\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    public negate(): Int64 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        return this;\n    }\n\n    public times(other: Int64): Int64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Int64): Int64 {\n        this._plus(other);\n        return this;\n    }\n\n    public lessThan(other: Int64): boolean {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Int64 {\n        return Int64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Int64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Int64 {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int128 {\n    constructor (private buffer: Uint32Array) {\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n\n    public high(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n\n    public low(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n\n    public negate(): Int128 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        if (this.buffer[1] == 0) { ++this.buffer[2]; }\n        if (this.buffer[2] == 0) { ++this.buffer[3]; }\n        return this;\n    }\n\n    public times(other: Int128): Int128 {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3],  0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2],  0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1],  0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0],  0]));\n\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n\n        this.buffer[1] = sum.low();\n\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n                        .plus(Uint64.multiply(L1, R2))\n                        .plus(Uint64.multiply(L2, R1))\n                        .plus(Uint64.multiply(L3, R0)).low();\n\n        return this;\n    }\n\n    public plus(other: Int128): Int128 {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n\n        return this;\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(4)): Int128 {\n        return Int128.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(4)): Int128 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(4)): Int128 {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport * as type from '../type';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { packBools } from '../util/bit';\nimport { encodeUtf8 } from '../util/utf8';\nimport { Int64, Int128 } from '../util/int';\nimport { UnionMode, DateUnit } from '../enum';\nimport { toArrayBufferView } from '../util/buffer';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\n\n/** @ignore */\nexport interface VectorLoader extends Visitor {\n    visit<T extends DataType>(node: Field<T> | T): Data<T>;\n    visitMany<T extends DataType>(nodes: (Field<T> | T)[]): Data<T>[];\n}\n\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    private bytes: Uint8Array;\n    private nodes: FieldNode[];\n    private nodesIndex: number = -1;\n    private buffers: BufferRegion[];\n    private buffersIndex: number = -1;\n    private dictionaries: Map<number, Vector<any>>;\n    constructor(bytes: Uint8Array, nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super();\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n\n    public visit<T extends DataType>(node: Field<T> | T): Data<T> {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n\n    public visitNull            <T extends type.Null>            (type: T, { length,           } = this.nextFieldNode()) { return            Data.Null(type, 0, length);                                                                                                                                 }\n    public visitBool            <T extends type.Bool>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitInt             <T extends type.Int>             (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFloat           <T extends type.Float>           (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitUtf8            <T extends type.Utf8>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitBinary          <T extends type.Binary>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitFixedSizeBinary <T extends type.FixedSizeBinary> (type: T, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDate            <T extends type.Date_>           (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTimestamp       <T extends type.Timestamp>       (type: T, { length, nullCount } = this.nextFieldNode()) { return       Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTime            <T extends type.Time>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDecimal         <T extends type.Decimal>         (type: T, { length, nullCount } = this.nextFieldNode()) { return         Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitList            <T extends type.List>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n    public visitStruct          <T extends type.Struct>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children));                                                 }\n    public visitUnion           <T extends type.Union>           (type: T                                              ) { return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type as type.SparseUnion) : this.visitDenseUnion(type as type.DenseUnion);                                      }\n    public visitDenseUnion      <T extends type.DenseUnion>      (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    public visitSparseUnion     <T extends type.SparseUnion>     (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children));                         }\n    public visitDictionary      <T extends type.Dictionary>      (type: T, { length, nullCount } = this.nextFieldNode()) { return      Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type));                        }\n    public visitInterval        <T extends type.Interval>        (type: T, { length, nullCount } = this.nextFieldNode()) { return        Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFixedSizeList   <T extends type.FixedSizeList>   (type: T, { length, nullCount } = this.nextFieldNode()) { return   Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0]));                                                  }\n    public visitMap             <T extends type.Map_>            (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n\n    protected nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    protected nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    protected readNullBitmap<T extends DataType>(type: T, nullCount: number, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    protected readOffsets<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readTypeIds<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readData<T extends DataType>(_type: T, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    protected readDictionary<T extends type.Dictionary>(type: T): Vector<T['dictionary']> {\n        return this.dictionaries.get(type.id)!;\n    }\n}\n\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    private sources: any[][];\n    constructor(sources: any[][], nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    protected readNullBitmap<T extends DataType>(_type: T, nullCount: number, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    protected readOffsets<T extends DataType>(_type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    protected readTypeIds<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    protected readData<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset] as string[]));\n        } else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset] as string[]);\n        } else if (DataType.isBool(type)) {\n            return packBools(sources[offset] as number[]);\n        } else if (DataType.isUtf8(type)) {\n            return encodeUtf8((sources[offset] as string[]).join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n\n/** @ignore */\nfunction binaryDataFromJSON(values: string[]) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport * as Schema_ from '../fb/Schema';\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\n\nimport Null = Schema_.org.apache.arrow.flatbuf.Null;\nimport Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nimport Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nimport Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nimport Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nimport Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nimport Date = Schema_.org.apache.arrow.flatbuf.Date;\nimport Time = Schema_.org.apache.arrow.flatbuf.Time;\nimport Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nimport Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nimport List = Schema_.org.apache.arrow.flatbuf.List;\nimport Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nimport Union = Schema_.org.apache.arrow.flatbuf.Union;\nimport DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nimport FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nimport FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nimport Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n\n/** @ignore */\nexport interface TypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T, builder: Builder): number | undefined;\n}\n\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T, builder: Builder): number | undefined {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    public visitNull<T extends type.Null>(_node: T, b: Builder) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    public visitInt<T extends type.Int>(node: T, b: Builder) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    public visitFloat<T extends type.Float>(node: T, b: Builder) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    public visitBinary<T extends type.Binary>(_node: T, b: Builder) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    public visitBool<T extends type.Bool>(_node: T, b: Builder) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    public visitUtf8<T extends type.Utf8>(_node: T, b: Builder) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    public visitDecimal<T extends type.Decimal>(node: T, b: Builder) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    public visitDate<T extends type.Date_>(node: T, b: Builder) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    public visitTime<T extends type.Time>(node: T, b: Builder) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    public visitTimestamp<T extends type.Timestamp>(node: T, b: Builder) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    public visitInterval<T extends type.Interval>(node: T, b: Builder) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    public visitList<T extends type.List>(_node: T, b: Builder) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    public visitStruct<T extends type.Struct>(_node: T, b: Builder) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    public visitUnion<T extends type.Union>(node: T, b: Builder) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T, b: Builder) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(node: T, b: Builder) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(node: T, b: Builder) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    public visitMap<T extends type.Map_>(node: T, b: Builder) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n\n/** @ignore */\nexport const instance = new TypeAssembler();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Schema, Field } from '../../schema';\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum';\n\n/** @ignore */\nexport function schemaFromJSON(_schema: any, dictionaries: Map<number, DataType> = new Map()) {\n    return new Schema(\n        schemaFieldsFromJSON(_schema, dictionaries),\n        customMetadataFromJSON(_schema['customMetadata']),\n        dictionaries\n    );\n}\n\n/** @ignore */\nexport function recordBatchFromJSON(b: any) {\n    return new RecordBatch(\n        b['count'],\n        fieldNodesFromJSON(b['columns']),\n        buffersFromJSON(b['columns'])\n    );\n}\n\n/** @ignore */\nexport function dictionaryBatchFromJSON(b: any) {\n    return new DictionaryBatch(\n        recordBatchFromJSON(b['data']),\n        b['id'], b['isDelta']\n    );\n}\n\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema: any, dictionaries?: Map<number, DataType>) {\n    return (_schema['fields'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldChildrenFromJSON(_field: any, dictionaries?: Map<number, DataType>): Field[] {\n    return (_field['children'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldNodesFromJSON(xs: any[]): FieldNode[] {\n    return (xs || []).reduce<FieldNode[]>((fieldNodes, column: any) => [\n        ...fieldNodes,\n        new FieldNode(\n            column['count'],\n            nullCountFromJSON(column['VALIDITY'])\n        ),\n        ...fieldNodesFromJSON(column['children'])\n    ], [] as FieldNode[]);\n}\n\n/** @ignore */\nfunction buffersFromJSON(xs: any[], buffers: BufferRegion[] = []): BufferRegion[] {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n\n/** @ignore */\nfunction nullCountFromJSON(validity: number[]) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n\n/** @ignore */\nexport function fieldFromJSON(_field: any, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let keys: TKeys | null;\n    let field: Field | void;\n    let dictMeta: any;\n    let type: DataType<any>;\n    let dictType: Dictionary;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction customMetadataFromJSON(_metadata?: object) {\n    return new Map<string, string>(Object.entries(_metadata || {}));\n}\n\n/** @ignore */\nfunction indexTypeFromJSON(_type: any) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n\n/** @ignore */\nfunction typeFromJSON(f: any, children?: Field[]): DataType<any> {\n\n    const typeId = f['type']['name'];\n\n    switch (typeId) {\n        case 'NONE':   return new Null();\n        case 'null':   return new Null();\n        case 'binary': return new Binary();\n        case 'utf8':   return new Utf8();\n        case 'bool':   return new Bool();\n        case 'list':   return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth'] as IntBitWidth);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']] as any);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']] as any);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']] as any, t['bitWidth'] as TimeBitWidth);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']] as any, t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']] as any);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']] as any, (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../../fb/Schema';\nimport * as Message_ from '../../fb/Message';\n\nimport { Schema, Field } from '../../schema';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\nimport { MessageHeader, MetadataVersion } from '../../enum';\nimport { instance as typeAssembler } from '../../visitor/typeassembler';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport Type = Schema_.org.apache.arrow.flatbuf.Type;\nimport _Field = Schema_.org.apache.arrow.flatbuf.Field;\nimport _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nimport _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nimport _Message = Message_.org.apache.arrow.flatbuf.Message;\nimport _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nimport _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nimport _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nimport _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nimport _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nimport _DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\n\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\n/**\n * @ignore\n * @private\n **/\nexport class Message<T extends MessageHeader = any> {\n\n    /** @nocollapse */\n    public static fromJSON<T extends MessageHeader>(msg: any, headerType: T): Message<T> {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength: Long = _message.bodyLength()!;\n        const version: MetadataVersion = _message.version();\n        const headerType: MessageHeader = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static encode<T extends MessageHeader>(message: Message<T>) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header() as Schema);\n        } else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header() as RecordBatch);\n        } else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header() as DictionaryBatch);\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n\n    /** @nocollapse */\n    public static from(header: Schema | RecordBatch | DictionaryBatch, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n\n    // @ts-ignore\n    public body: Uint8Array;\n    protected _headerType: T;\n    protected _bodyLength: number;\n    protected _version: MetadataVersion;\n    public get type() { return this.headerType; }\n    public get version() { return this._version; }\n    public get headerType() { return this._headerType; }\n    public get bodyLength() { return this._bodyLength; }\n    // @ts-ignore\n    protected _createHeader: MessageHeaderDecoder;\n    public header() { return this._createHeader<T>(); }\n    public isSchema(): this is Message<MessageHeader.Schema> { return this.headerType === MessageHeader.Schema; }\n    public isRecordBatch(): this is Message<MessageHeader.RecordBatch> { return this.headerType === MessageHeader.RecordBatch; }\n    public isDictionaryBatch(): this is Message<MessageHeader.DictionaryBatch> { return this.headerType === MessageHeader.DictionaryBatch; }\n\n    constructor(bodyLength: Long | number, version: MetadataVersion, headerType: T, header?: any) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    protected _length: number;\n    protected _nodes: FieldNode[];\n    protected _buffers: BufferRegion[];\n    public get nodes() { return this._nodes; }\n    public get length() { return this._length; }\n    public get buffers() { return this._buffers; }\n    constructor(length: Long | number, nodes: FieldNode[], buffers: BufferRegion[]) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n\n    protected _id: number;\n    protected _isDelta: boolean;\n    protected _data: RecordBatch;\n    public get id() { return this._id; }\n    public get data() { return this._data; }\n    public get isDelta() { return this._isDelta; }\n    public get length(): number { return this.data.length; }\n    public get nodes(): FieldNode[] { return this.data.nodes; }\n    public get buffers(): BufferRegion[] { return this.data.buffers; }\n\n    constructor(data: RecordBatch, id: Long | number, isDelta: boolean = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    public offset: number;\n    public length: number;\n    constructor(offset: Long | number, length: Long | number) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    public length: number;\n    public nullCount: number;\n    constructor(length: Long | number, nullCount: Long | number) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n\n/** @ignore */\nfunction messageHeaderFromJSON(message: any, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\n/** @ignore */\nfunction decodeMessageHeader(message: _Message, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema())!);\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch())!, message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch())!, message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\n\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\n\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\n\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\n\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\n\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n\ndeclare module '../../schema' {\n    namespace Field {\n        export { encodeField as encode };\n        export { decodeField as decode };\n        export { fieldFromJSON as fromJSON };\n    }\n    namespace Schema {\n        export { encodeSchema as encode };\n        export { decodeSchema as decode };\n        export { schemaFromJSON as fromJSON };\n    }\n}\n\ndeclare module './message' {\n    namespace RecordBatch {\n        export { encodeRecordBatch as encode };\n        export { decodeRecordBatch as decode };\n        export { recordBatchFromJSON as fromJSON };\n    }\n    namespace DictionaryBatch {\n        export { encodeDictionaryBatch as encode };\n        export { decodeDictionaryBatch as decode };\n        export { dictionaryBatchFromJSON as fromJSON };\n    }\n    namespace FieldNode {\n        export { encodeFieldNode as encode };\n        export { decodeFieldNode as decode };\n    }\n    namespace BufferRegion {\n        export { encodeBufferRegion as encode };\n        export { decodeBufferRegion as decode };\n    }\n}\n\n/** @ignore */\nfunction decodeSchema(_schema: _Schema, dictionaries: Map<number, DataType> = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n\n/** @ignore */\nfunction decodeRecordBatch(batch: _RecordBatch, version = MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n\n/** @ignore */\nfunction decodeDictionaryBatch(batch: _DictionaryBatch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data()!, version), batch.id(), batch.isDelta());\n}\n\n/** @ignore */\nfunction decodeBufferRegion(b: _Buffer) {\n    return new BufferRegion(b.offset(), b.length());\n}\n\n/** @ignore */\nfunction decodeFieldNode(f: _FieldNode) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n\n/** @ignore */\nfunction decodeFieldNodes(batch: _RecordBatch) {\n    const nodes = [] as FieldNode[];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n\n/** @ignore */\nfunction decodeBuffers(batch: _RecordBatch, version: MetadataVersion) {\n    const bufferRegions = [] as BufferRegion[];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n        // If this Arrow buffer was written before version 4,\n        // advance the buffer's bb_pos 8 bytes to skip past\n        // the now-removed page_id field\n        if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n\n/** @ignore */\nfunction decodeSchemaFields(schema: _Schema, dictionaries?: Map<number, DataType>) {\n    const fields = [] as Field[];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n\n/** @ignore */\nfunction decodeFieldChildren(field: _Field, dictionaries?: Map<number, DataType>): Field[] {\n    const children = [] as Field[];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n\n/** @ignore */\nfunction decodeField(f: _Field, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let field: Field | void;\n    let type: DataType<any>;\n    let keys: _Int | TKeys | null;\n    let dictType: Dictionary;\n    let dictMeta: _DictionaryEncoding | null;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name()!, type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction decodeCustomMetadata(parent?: _Schema | _Field | null) {\n    const data = new Map<string, string>();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value()!);\n            }\n        }\n    }\n    return data;\n}\n\n/** @ignore */\nfunction decodeIndexType(_type: _Int) {\n    return new Int(_type.isSigned(), _type.bitWidth() as IntBitWidth);\n}\n\n/** @ignore */\nfunction decodeFieldType(f: _Field, children?: Field[]): DataType<any> {\n\n    const typeId = f.typeType();\n\n    switch (typeId) {\n        case Type.NONE:    return new Null();\n        case Type.Null:    return new Null();\n        case Type.Binary:  return new Binary();\n        case Type.Utf8:    return new Utf8();\n        case Type.Bool:    return new Bool();\n        case Type.List:    return new List((children || [])[0]);\n        case Type.Struct_: return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int())!;\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint())!;\n            return new Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal())!;\n            return new Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date())!;\n            return new Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time())!;\n            return new Time(t.unit(), t.bitWidth() as TimeBitWidth);\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp())!;\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval())!;\n            return new Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union())!;\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary())!;\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList())!;\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map())!;\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n\n/** @ignore */\nfunction encodeSchema(b: Builder, schema: Schema) {\n\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n\n    if (metadataOffset !== -1) { _Schema.addCustomMetadata(b, metadataOffset); }\n\n    return _Schema.endSchema(b);\n}\n\n/** @ignore */\nfunction encodeField(b: Builder, field: Field) {\n\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n\n    let type = field.type;\n    let typeId: Type = <any> field.typeId;\n\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b)!;\n    } else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b)!;\n        typeOffset = typeAssembler.visit(type.dictionary, b)!;\n    }\n\n    const childOffsets = (type.children || []).map((f: Field) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n\n    if (nameOffset !== -1) { _Field.addName(b, nameOffset); }\n    if (dictionaryOffset !== -1) { _Field.addDictionary(b, dictionaryOffset); }\n    if (metadataOffset !== -1) { _Field.addCustomMetadata(b, metadataOffset); }\n\n    return _Field.endField(b);\n}\n\n/** @ignore */\nfunction encodeRecordBatch(b: Builder, recordBatch: RecordBatch) {\n\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n\n    const nodesVectorOffset = b.endVector();\n\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n\n    const buffersVectorOffset = b.endVector();\n\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n\n/** @ignore */\nfunction encodeDictionaryBatch(b: Builder, dictionaryBatch: DictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n\n/** @ignore */\nfunction encodeFieldNode(b: Builder, node: FieldNode) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n\n/** @ignore */\nfunction encodeBufferRegion(b: Builder, node: BufferRegion) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n\n/** @ignore */\nconst platformIsLittleEndian = (function() {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n/** @ignore */\ntype MessageHeaderDecoder = <T extends MessageHeader>() => T extends MessageHeader.Schema ? Schema\n                                                         : T extends MessageHeader.RecordBatch ? RecordBatch\n                                                         : T extends MessageHeader.DictionaryBatch ? DictionaryBatch : never;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MessageHeader } from '../enum';\nimport { flatbuffers } from 'flatbuffers';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { Message } from './metadata/message';\nimport { isFileHandle } from '../util/compat';\nimport { AsyncRandomAccessFile } from '../io/file';\nimport { toUint8Array, ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, ReadableSource, AsyncByteStream } from '../io/stream';\nimport { ArrowJSON, ArrowJSONLike, ITERATOR_DONE, FileHandle } from '../io/interfaces';\n\n/** @ignore */ const invalidMessageType       = (type: MessageHeader) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage              = (type: MessageHeader) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata   = (expected: number, actual: number) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected: number, actual: number) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n\n/** @ignore */\nexport class MessageReader implements IterableIterator<Message> {\n    protected source: ByteStream;\n    constructor(source: ByteStream | ArrayBufferViewInput | Iterable<ArrayBufferViewInput>) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    public [Symbol.iterator](): IterableIterator<Message> { return this as IterableIterator<Message>; }\n    public next(): IteratorResult<Message> {\n        let r;\n        if ((r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readMessageBody(bodyLength: number): Uint8Array {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected readMetadataLength(): IteratorResult<number> {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected readMetadata(metadataLength: number): IteratorResult<Message> {\n        const buf = this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class AsyncMessageReader implements AsyncIterableIterator<Message> {\n    protected source: AsyncByteStream;\n    constructor(source: ReadableSource<Uint8Array>);\n    constructor(source: FileHandle, byteLength?: number);\n    constructor(source: any, byteLength?: number) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n            ? new AsyncRandomAccessFile(source, byteLength!)\n            : new AsyncByteStream(source);\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<Message> { return this as AsyncIterableIterator<Message>; }\n    public async next(): Promise<IteratorResult<Message>> {\n        let r;\n        if ((r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = await this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public async throw(value?: any) { return await this.source.throw(value); }\n    public async return(value?: any) { return await this.source.return(value); }\n    public async readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = await this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public async readMessageBody(bodyLength: number): Promise<Uint8Array> {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected async readMetadataLength(): Promise<IteratorResult<number>> {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected async readMetadata(metadataLength: number): Promise<IteratorResult<Message>> {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    private _schema = false;\n    private _json: ArrowJSON;\n    private _body: any[] = [];\n    private _batchIndex = 0;\n    private _dictionaryIndex = 0;\n    constructor(source: ArrowJSON | ArrowJSONLike) {\n        super(new Uint8Array(0));\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    public next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    public readMessageBody(_bodyLength?: number) {\n        return flattenDataSources(this._body) as any;\n        function flattenDataSources(xs: any[]): any[][] {\n            return (xs || []).reduce<any[][]>((buffers, column: any) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], [] as any[][]);\n        }\n    }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\n\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n\n/** @ignore */\nexport function checkForMagicArrowString(buffer: Uint8Array, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { Type, UnionMode } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { rebaseValueOffsets } from '../util/buffer';\nimport { packBools, truncateBitmap } from '../util/bit';\nimport { selectVectorChildrenArgs } from '../util/args';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp, Union,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n} from '../type';\n\n/** @ignore */\nexport interface VectorAssembler extends Visitor {\n    visit<T extends Vector>(node: T): this;\n    visitMany<T extends Vector>(nodes: T[]): this[];\n    getVisitFn<T extends Type>(node: T): (vector: V<T>) => this;\n    getVisitFn<T extends DataType>(node: V<T> | Data<T> | T): (vector: V<T>) => this;\n\n    visitBool                 <T extends Bool>            (vector: V<T>): this;\n    visitInt                  <T extends Int>             (vector: V<T>): this;\n    visitFloat                <T extends Float>           (vector: V<T>): this;\n    visitUtf8                 <T extends Utf8>            (vector: V<T>): this;\n    visitBinary               <T extends Binary>          (vector: V<T>): this;\n    visitFixedSizeBinary      <T extends FixedSizeBinary> (vector: V<T>): this;\n    visitDate                 <T extends Date_>           (vector: V<T>): this;\n    visitTimestamp            <T extends Timestamp>       (vector: V<T>): this;\n    visitTime                 <T extends Time>            (vector: V<T>): this;\n    visitDecimal              <T extends Decimal>         (vector: V<T>): this;\n    visitList                 <T extends List>            (vector: V<T>): this;\n    visitStruct               <T extends Struct>          (vector: V<T>): this;\n    visitUnion                <T extends Union>           (vector: V<T>): this;\n    visitInterval             <T extends Interval>        (vector: V<T>): this;\n    visitFixedSizeList        <T extends FixedSizeList>   (vector: V<T>): this;\n    visitMap                  <T extends Map_>            (vector: V<T>): this;\n}\n\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n\n    /** @nocollapse */\n    public static assemble<T extends Vector | RecordBatch>(...args: (T | T[])[]) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = selectVectorChildrenArgs(RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n\n    private constructor() { super(); }\n\n    public visit<T extends Vector>(vector: T): this {\n        if (!DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap)\n                );\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n\n    public visitNull<T extends Null>(_nullV: V<T>) {\n        return this;\n    }\n    public visitDictionary<T extends Dictionary>(vector: V<T>) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n\n    public get nodes() { return this._nodes; }\n    public get buffers() { return this._buffers; }\n    public get byteLength() { return this._byteLength; }\n    public get bufferRegions() { return this._bufferRegions; }\n\n    protected _byteLength = 0;\n    protected _nodes: FieldNode[] = [];\n    protected _buffers: ArrayBufferView[] = [];\n    protected _bufferRegions: BufferRegion[] = [];\n}\n\n/** @ignore */\nfunction addBuffer(this: VectorAssembler, values: ArrayBufferView) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n\n/** @ignore */\nfunction assembleUnion<T extends Union>(this: VectorAssembler, vector: V<T>) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    } else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        } else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child: Vector | null, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n\n/** @ignore */\nfunction assembleBoolVector<T extends Bool>(this: VectorAssembler, vector: V<T>) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values: Uint8Array;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    } else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(vector));\n}\n\n/** @ignore */\nfunction assembleFlatVector<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval>(this: VectorAssembler, vector: V<T>) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n\n/** @ignore */\nfunction assembleFlatListVector<T extends Utf8 | Binary>(this: VectorAssembler, vector: V<T>) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n\n/** @ignore */\nfunction assembleListVector<T extends Map_ | List | FixedSizeList>(this: VectorAssembler, vector: V<T>) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0)!);\n}\n\n/** @ignore */\nfunction assembleNestedVector<T extends Struct | Union>(this: VectorAssembler, vector: V<T>) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)!).filter(Boolean))[0];\n}\n\nVectorAssembler.prototype.visitBool            =     assembleBoolVector;\nVectorAssembler.prototype.visitInt             =     assembleFlatVector;\nVectorAssembler.prototype.visitFloat           =     assembleFlatVector;\nVectorAssembler.prototype.visitUtf8            = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary          = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary =     assembleFlatVector;\nVectorAssembler.prototype.visitDate            =     assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp       =     assembleFlatVector;\nVectorAssembler.prototype.visitTime            =     assembleFlatVector;\nVectorAssembler.prototype.visitDecimal         =     assembleFlatVector;\nVectorAssembler.prototype.visitList            =     assembleListVector;\nVectorAssembler.prototype.visitStruct          =   assembleNestedVector;\nVectorAssembler.prototype.visitUnion           =          assembleUnion;\nVectorAssembler.prototype.visitInterval        =     assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList   =     assembleListVector;\nVectorAssembler.prototype.visitMap             =     assembleListVector;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\nimport { ArrowType, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from '../enum';\n\n/** @ignore */\nexport interface JSONTypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T): object | undefined;\n}\n\n/** @ignore */\nexport class JSONTypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T): object | undefined {\n        return node == null ? undefined : super.visit(node);\n    }\n    public visitNull<T extends type.Null>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitInt<T extends type.Int>({ typeId, bitWidth, isSigned }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'bitWidth': bitWidth, 'isSigned': isSigned };\n    }\n    public visitFloat<T extends type.Float>({ typeId, precision }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'precision': Precision[precision] };\n    }\n    public visitBinary<T extends type.Binary>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitBool<T extends type.Bool>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitUtf8<T extends type.Utf8>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitDecimal<T extends type.Decimal>({ typeId, scale, precision }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'scale': scale, 'precision': precision };\n    }\n    public visitDate<T extends type.Date_>({ typeId, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': DateUnit[unit] };\n    }\n    public visitTime<T extends type.Time>({ typeId, unit, bitWidth }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': TimeUnit[unit], bitWidth };\n    }\n    public visitTimestamp<T extends type.Timestamp>({ typeId, timezone, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': TimeUnit[unit], timezone };\n    }\n    public visitInterval<T extends type.Interval>({ typeId, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': IntervalUnit[unit] };\n    }\n    public visitList<T extends type.List>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitStruct<T extends type.Struct>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitUnion<T extends type.Union>({ typeId, mode, typeIds }: T) {\n        return {\n            'name': ArrowType[typeId].toLowerCase(),\n            'mode': UnionMode[mode],\n            'typeIds': [...typeIds]\n        };\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T) {\n        return this.visit(node.dictionary);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>({ typeId, byteWidth }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'byteWidth': byteWidth };\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>({ typeId, listSize }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'listSize': listSize };\n    }\n    public visitMap<T extends type.Map_>({ typeId, keysSorted }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'keysSorted': keysSorted };\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BN } from '../util/bn';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { BufferType } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { UnionMode, DateUnit, TimeUnit } from '../enum';\nimport { iterateBits, getBit, getBool } from '../util/bit';\nimport { selectColumnChildrenArgs } from '../util/args';\nimport {\n    DataType,\n    Float, Int, Date_, Interval, Time, Timestamp, Union,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n} from '../type';\n\n/** @ignore */\nexport interface JSONVectorAssembler extends Visitor {\n\n    visit     <T extends Column>  (node: T  ): object;\n    visitMany <T extends Column>  (cols: T[]): object[];\n    getVisitFn<T extends DataType>(node: Column<T>): (column: Column<T>) => { name: string, count: number, VALIDITY: (0 | 1)[], DATA?: any[], OFFSET?: number[], TYPE?: number[], children?: any[] };\n\n    visitNull                 <T extends Null>            (vector: V<T>): { };\n    visitBool                 <T extends Bool>            (vector: V<T>): { DATA: boolean[] };\n    visitInt                  <T extends Int>             (vector: V<T>): { DATA: (number | string)[]  };\n    visitFloat                <T extends Float>           (vector: V<T>): { DATA: number[]  };\n    visitUtf8                 <T extends Utf8>            (vector: V<T>): { DATA: string[], OFFSET: number[] };\n    visitBinary               <T extends Binary>          (vector: V<T>): { DATA: string[], OFFSET: number[] };\n    visitFixedSizeBinary      <T extends FixedSizeBinary> (vector: V<T>): { DATA: string[]  };\n    visitDate                 <T extends Date_>           (vector: V<T>): { DATA: number[]  };\n    visitTimestamp            <T extends Timestamp>       (vector: V<T>): { DATA: string[]  };\n    visitTime                 <T extends Time>            (vector: V<T>): { DATA: number[]  };\n    visitDecimal              <T extends Decimal>         (vector: V<T>): { DATA: string[]  };\n    visitList                 <T extends List>            (vector: V<T>): { children: any[], OFFSET: number[] };\n    visitStruct               <T extends Struct>          (vector: V<T>): { children: any[] };\n    visitUnion                <T extends Union>           (vector: V<T>): { children: any[], TYPE: number[],  };\n    visitInterval             <T extends Interval>        (vector: V<T>): { DATA: number[]  };\n    visitFixedSizeList        <T extends FixedSizeList>   (vector: V<T>): { children: any[] };\n    visitMap                  <T extends Map_>            (vector: V<T>): { children: any[] };\n}\n\n/** @ignore */\nexport class JSONVectorAssembler extends Visitor {\n\n    /** @nocollapse */\n    public static assemble<T extends Column | RecordBatch>(...args: (T | T[])[]) {\n        return new JSONVectorAssembler().visitMany(selectColumnChildrenArgs(RecordBatch, args));\n    }\n\n    public visit<T extends Column>(column: T) {\n        const { data, name, length } = column;\n        const { offset, nullCount, nullBitmap } = data;\n        const type = DataType.isDictionary(column.type) ? column.type.indices : column.type;\n        const buffers = Object.assign([], data.buffers, { [BufferType.VALIDITY]: undefined });\n        return {\n            'name': name,\n            'count': length,\n            'VALIDITY': DataType.isNull(type) ? undefined\n                : nullCount <= 0 ? Array.from({ length }, () => 1)\n                : [...iterateBits(nullBitmap, offset, length, null, getBit)],\n            ...super.visit(Vector.new(data.clone(type, offset, length, 0, buffers)))\n        };\n    }\n    public visitNull() { return {}; }\n    public visitBool<T extends Bool>({ values, offset, length }: V<T>) {\n        return { 'DATA': [...iterateBits(values, offset, length, null, getBool)] };\n    }\n    public visitInt<T extends Int>(vector: V<T>) {\n        return {\n            'DATA': vector.type.bitWidth < 64\n                ? [...vector.values]\n                : [...bigNumsToStrings(vector.values as (Int32Array | Uint32Array), 2)]\n        };\n    }\n    public visitFloat<T extends Float>(vector: V<T>) {\n        return { 'DATA': [...vector.values] };\n    }\n    public visitUtf8<T extends Utf8>(vector: V<T>) {\n        return { 'DATA': [...vector], 'OFFSET': [...vector.valueOffsets] };\n    }\n    public visitBinary<T extends Binary>(vector: V<T>) {\n        return { 'DATA': [...binaryToString(vector)], OFFSET: [...vector.valueOffsets] };\n    }\n    public visitFixedSizeBinary<T extends FixedSizeBinary>(vector: V<T>) {\n        return { 'DATA': [...binaryToString(vector)] };\n    }\n    public visitDate<T extends Date_>(vector: V<T>) {\n        return {\n            'DATA': vector.type.unit === DateUnit.DAY\n                ? [...vector.values]\n                : [...bigNumsToStrings(vector.values, 2)]\n        };\n    }\n    public visitTimestamp<T extends Timestamp>(vector: V<T>) {\n        return { 'DATA': [...bigNumsToStrings(vector.values, 2)] };\n    }\n    public visitTime<T extends Time>(vector: V<T>) {\n        return {\n            'DATA': vector.type.unit < TimeUnit.MICROSECOND\n                ? [...vector.values]\n                : [...bigNumsToStrings(vector.values, 2)]\n        };\n    }\n    public visitDecimal<T extends Decimal>(vector: V<T>) {\n        return { 'DATA': [...bigNumsToStrings(vector.values, 4)] };\n    }\n    public visitList<T extends List>(vector: V<T>) {\n        return {\n            'OFFSET': [...vector.valueOffsets],\n            'children': vector.type.children.map((f, i) =>\n                this.visit(new Column(f, [vector.getChildAt(i)!])))\n        };\n    }\n    public visitStruct<T extends Struct>(vector: V<T>) {\n        return {\n            'children': vector.type.children.map((f, i) =>\n                this.visit(new Column(f, [vector.getChildAt(i)!])))\n        };\n    }\n    public visitUnion<T extends Union>(vector: V<T>) {\n        return {\n            'TYPE': [...vector.typeIds],\n            'OFFSET': vector.type.mode === UnionMode.Dense ? [...vector.valueOffsets] : undefined,\n            'children': vector.type.children.map((f, i) => this.visit(new Column(f, [vector.getChildAt(i)!])))\n        };\n    }\n    public visitInterval<T extends Interval>(vector: V<T>) {\n        return { 'DATA': [...vector.values] };\n    }\n    public visitFixedSizeList<T extends FixedSizeList>(vector: V<T>) {\n        return {\n            'children': vector.type.children.map((f, i) =>\n                this.visit(new Column(f, [vector.getChildAt(i)!])))\n        };\n    }\n    public visitMap<T extends Map_>(vector: V<T>) {\n        return {\n            'OFFSET': [...vector.valueOffsets],\n            'children': vector.type.children.map((f, i) =>\n                this.visit(new Column(f, [vector.getChildAt(i)!])))\n        };\n    }\n}\n\n/** @ignore */\nfunction* binaryToString(vector: Vector<Binary> | Vector<FixedSizeBinary>) {\n    for (const octets of vector as Iterable<Uint8Array>) {\n        yield octets.reduce((str, byte) => {\n            return `${str}${('0' + (byte & 0xFF).toString(16)).slice(-2)}`;\n        }, '').toUpperCase();\n    }\n}\n\n/** @ignore */\nfunction* bigNumsToStrings(values: Uint32Array | Int32Array, stride: number) {\n    for (let i = -1, n = values.length / stride; ++i < n;) {\n        yield `${BN.new(values.subarray((i + 0) * stride, (i + 1) * stride), false)}`;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { MAGIC } from './message';\nimport { Vector } from '../vector';\nimport { Column } from '../column';\nimport { DataType } from '../type';\nimport { Schema, Field } from '../schema';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { FileBlock, Footer } from './metadata/file';\nimport { MessageHeader, MetadataVersion } from '../enum';\nimport { WritableSink, AsyncByteQueue } from '../io/stream';\nimport { VectorAssembler } from '../visitor/vectorassembler';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { Writable, ReadableInterop, ReadableDOMStreamOptions } from '../io/interfaces';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat';\n\nexport interface RecordBatchStreamWriterOptions {\n    /**\n     *\n     */\n    autoDestroy?: boolean;\n    /**\n     * A flag indicating whether the RecordBatchWriter should construct pre-0.15.0\n     * encapsulated IPC Messages, which reserves  4 bytes for the Message metadata\n     * length instead of 8.\n     * @see https://issues.apache.org/jira/browse/ARROW-6313\n     */\n    writeLegacyIpcFormat?: boolean;\n}\n\nexport class RecordBatchWriter<T extends { [key: string]: DataType } = any> extends ReadableInterop<Uint8Array> implements Writable<RecordBatch<T>> {\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n        // @ts-ignore\n        readableStrategy?: { highWaterMark?: number, size?: any }\n    ): { writable: WritableStream<Table<T> | RecordBatch<T>>, readable: ReadableStream<Uint8Array> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    constructor(options?: RecordBatchStreamWriterOptions) {\n        super();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n\n    protected _position = 0;\n    protected _started = false;\n    protected _autoDestroy: boolean;\n    protected _writeLegacyIpcFormat: boolean;\n    // @ts-ignore\n    protected _sink = new AsyncByteQueue();\n    protected _schema: Schema | null = null;\n    protected _dictionaryBlocks: FileBlock[] = [];\n    protected _recordBatchBlocks: FileBlock[] = [];\n    protected _dictionaryDeltaOffsets = new Map<number, number>();\n\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync: any = false) {\n        return this._sink.toString(sync) as Promise<string> | string;\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync: any = false) {\n        return this._sink.toUint8Array(sync) as Promise<Uint8Array> | Uint8Array;\n    }\n\n    public writeAll(input: Table<T> | Iterable<RecordBatch<T>>): this;\n    public writeAll(input: AsyncIterable<RecordBatch<T>>): Promise<this>;\n    public writeAll(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<any> | Table<T> | Iterable<RecordBatch<T>> | AsyncIterable<RecordBatch<T>>) {\n        if (isPromise<any>(input)) {\n            return input.then((x) => this.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, <any> input);\n    }\n\n    public get closed() { return this._sink.closed; }\n    public [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    public toDOMStream(options?: ReadableDOMStreamOptions) { return this._sink.toDOMStream(options); }\n    public toNodeStream(options?: import('stream').ReadableOptions) { return this._sink.toNodeStream(options); }\n\n    public close() {\n        return this.reset()._sink.close();\n    }\n    public abort(reason?: any) {\n        return this.reset()._sink.abort(reason);\n    }\n    public finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    public reset(sink: WritableSink<ArrayBufferViewInput> = this._sink, schema: Schema<T> | null = null) {\n\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink as AsyncByteQueue;\n        } else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            } else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            } else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n\n        return this;\n    }\n\n    public write(payload?: Table<T> | RecordBatch<T> | Iterable<RecordBatch<T>> | null) {\n\n        let schema: Schema<T> | null = null;\n\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        } else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        } else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        } else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        } else if (payload instanceof Table) {\n            this.writeAll(payload.chunks);\n        } else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n\n    protected _writeMessage<T extends MessageHeader>(message: Message<T>, alignment = 8) {\n\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        } else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) { this._write(buffer); }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n\n    protected _write(chunk: ArrayBufferViewInput) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMessage(Message.from(schema));\n    }\n\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n\n    protected _writeMagic() {\n        return this._write(MAGIC);\n    }\n\n    protected _writePadding(nBytes: number) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeBodyBuffers(buffers: ArrayBufferView[]) {\n        let buffer: ArrayBufferView;\n        let size: number, padding: number;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? (dictionary as any).chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n\n/** @ignore */\nexport class RecordBatchStreamWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): RecordBatchStreamWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any, options?: RecordBatchStreamWriterOptions) {\n        const writer = new RecordBatchStreamWriter<T>(options);\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n\n/** @ignore */\nexport class RecordBatchFileWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchFileWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any) {\n        const writer = new RecordBatchFileWriter<T>();\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n\n    // @ts-ignore\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMagic()._writePadding(2);\n    }\n\n    protected _writeFooter(schema: Schema<T>) {\n        const buffer = Footer.encode(new Footer(\n            schema, MetadataVersion.V4,\n            this._recordBatchBlocks, this._dictionaryBlocks\n        ));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n\n/** @ignore */\nexport class RecordBatchJSONWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchJSONWriter<T>;\n    // @ts-ignore\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: any) {\n        return new RecordBatchJSONWriter<T>().writeAll(input as any);\n    }\n\n    private _recordBatches: RecordBatch[];\n    private _dictionaries: RecordBatch[];\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n\n    protected _writeMessage() { return this; }\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) { return this; }\n    protected _writeSchema(schema: Schema<T>) {\n        return this._write(`{\\n  \"schema\": ${\n            JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)\n        }`);\n    }\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    public close() {\n\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n\n        this._dictionaries = [];\n        this._recordBatches = [];\n\n        return super.close();\n    }\n}\n\n/** @ignore */\nfunction writeAll<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, input: Table<T> | Iterable<RecordBatch<T>>) {\n    let chunks = input as Iterable<RecordBatch<T>>;\n    if (input instanceof Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nasync function writeAllAsync<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, batches: AsyncIterable<RecordBatch<T>>) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }: Field): object {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary: Vector, id: number, isDelta = false) {\n    const field = new Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = JSONVectorAssembler.assemble(new Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n\n/** @ignore */\nfunction recordBatchToJSON(records: RecordBatch) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Data, Buffers } from '../data';\nimport { Schema, Field } from '../schema';\nimport { Chunked } from '../vector/chunked';\nimport { RecordBatch } from '../recordbatch';\n\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength: number) => <unknown> [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n] as Buffers<any>;\n\n/** @ignore */\nexport function ensureSameLengthData<T extends { [key: string]: DataType } = any>(\n    schema: Schema<T>,\n    chunks: Data<T[keyof T]>[],\n    batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)\n) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [] as Data<T[keyof T]>[];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        } else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }) as Field<T[keyof T]>);\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return [new Schema<T>(fields), batchLength, batchData] as [Schema<T>, number, Data<T[keyof T]>[]];\n}\n\n/** @ignore */\nexport function distributeColumnsIntoRecordBatches<T extends { [key: string]: DataType } = any>(columns: Column<T[keyof T]>[]): [Schema<T>, RecordBatch<T>[]] {\n    return distributeVectorsIntoRecordBatches<T>(new Schema<T>(columns.map(({ field }) => field)), columns);\n}\n\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, vecs: (Vector<T[keyof T]> | Chunked<T[keyof T]>)[]): [Schema<T>, RecordBatch<T>[]] {\n    return uniformlyDistributeChunksAcrossRecordBatches<T>(schema, vecs.map((v) => v instanceof Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\n\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, columns: Data<T[keyof T]>[][]): [Schema<T>, RecordBatch<T>[]] {\n\n    const fields = [...schema.fields];\n    const batchArgs = [] as [number, Data<T[keyof T]>[]][];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n\n    let numBatches = 0, batchLength = 0;\n    let i: number = -1, numColumns = columns.length;\n    let child: Data<T[keyof T]>, childData: Data<T[keyof T]>[] = [];\n\n    while (memo.numBatches-- > 0) {\n\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift()!;\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new Schema<T>(fields, schema.metadata),\n        batchArgs.map((xs) => new RecordBatch(schema, ...xs))\n    ];\n}\n\n/** @ignore */\nfunction distributeChildData<T extends { [key: string]: DataType } = any>(fields: Field<T[keyof T]>[], batchLength: number, childData: Data<T[keyof T]>[], columns: Data<T[keyof T]>[][], memo: { numBatches: number }) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            } else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        } else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }) as Field<T[keyof T]>);\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return childData;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { VectorType as V } from '../interfaces';\nimport { AbstractVector, Vector, Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\nexport interface BaseVector<T extends DataType = any> extends Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n    slice(begin?: number, end?: number): V<T>;\n    concat(...others: Vector<T>[]): Chunked<T>;\n    clone<R extends DataType = T>(data: Data<R>, children?: Vector<R>[]): V<R>;\n}\n\n/** @ignore */\nexport abstract class BaseVector<T extends DataType = any> extends AbstractVector<T>\n    implements Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n\n    protected _children?: Vector[];\n\n    constructor(data: Data<T>, children?: Vector[]) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n\n    public readonly data: Data<T>;\n    public readonly numChildren: number;\n\n    public get type() { return this.data.type; }\n    public get typeId() { return this.data.typeId; }\n    public get length() { return this.data.length; }\n    public get offset() { return this.data.offset; }\n    public get stride() { return this.data.stride; }\n    public get nullCount() { return this.data.nullCount; }\n    public get byteLength() { return this.data.byteLength; }\n    public get VectorName() { return `${Type[this.typeId]}Vector`; }\n\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n\n    public get values() { return this.data.values; }\n    public get typeIds() { return this.data.typeIds; }\n    public get nullBitmap() { return this.data.nullBitmap; }\n    public get valueOffsets() { return this.data.valueOffsets; }\n\n    public get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n\n    public clone<R extends DataType = T>(data: Data<R>, children = this._children) {\n        return Vector.new<R>(data, children) as any;\n    }\n\n    public concat(...others: Vector<T>[]) {\n        return Chunked.concat<T>(this, ...others);\n    }\n\n    public slice(begin?: number, end?: number) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public isValid(index: number): boolean {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Vector<R> | null {\n        return index < 0 || index >= this.numChildren ? null : (\n            (this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new<R>(this.data.childData[index] as Data<R>))\n        ) as Vector<R>;\n    }\n\n    public toJSON(): any { return [...this]; }\n\n    protected _sliceInternal(self: this, begin: number, end: number) {\n        return self.clone(self.data.slice(begin, end - begin), null!);\n    }\n\n    // @ts-ignore\n    protected _bindDataAccessors(data: Data<T>) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\n\n(BaseVector.prototype as any)[Symbol.isConcatSpreadable] = true;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\n\n/** @ignore */\nexport class BinaryVector extends BaseVector<Binary> {\n    public asUtf8() {\n        return Vector.new(this.data.clone(new Utf8()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class BoolVector extends BaseVector<Bool> {\n    public static from<TNull = any>(input: Iterable<boolean | TNull>): BoolVector;\n    public static from<TNull = any>(input: AsyncIterable<boolean | TNull>): Promise<BoolVector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Bool, TNull>): Chunked<Bool>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Bool, TNull>): Promise<Chunked<Bool>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<boolean | TNull> | AsyncIterable<boolean | TNull> | VectorBuilderOptions<Bool, TNull> | VectorBuilderOptionsAsync<Bool, TNull>) {\n        return vectorFromValuesWithType(() => new Bool(), input);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DateUnit } from '../enum';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Date_, DateDay, DateMillisecond  } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends Date_> = [Iterable<Date>, T['unit']];\n\n/** @ignore */\nexport class DateVector<T extends Date_ = Date_> extends BaseVector<T> {\n    public static from<T extends DateUnit.DAY>(...args: FromArgs<DateDay>): V<DateDay>;\n    public static from<T extends DateUnit.MILLISECOND>(...args: FromArgs<DateMillisecond>): V<DateMillisecond>;\n    public static from<T extends Date_, TNull = any>(input: Iterable<Date | TNull>): V<T>;\n    public static from<T extends Date_, TNull = any>(input: AsyncIterable<Date | TNull>): Promise<V<T>>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Date_, TNull = any>(...args: FromArgs<T> | [Iterable<Date | TNull> | AsyncIterable<Date | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>]) {\n        if (args.length === 2) {\n            return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new DateDay() : new DateMillisecond() as T, args[0]);\n        }\n        return vectorFromValuesWithType(() => new DateMillisecond() as T, args[0]);\n    }\n}\n\n/** @ignore */\nexport class DateDayVector extends DateVector<DateDay> {}\n\n/** @ignore */\nexport class DateMillisecondVector extends DateVector<DateMillisecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class DecimalVector extends BaseVector<Decimal> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { DataType, Dictionary, TKeys } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends DataType = any, TKey extends TKeys = TKeys> = [Vector<T>, TKey, ArrayLike<number> | TKey['TArray']];\n\n/** @ignore */\nexport class DictionaryVector<T extends DataType = any, TKey extends TKeys = TKeys> extends BaseVector<Dictionary<T, TKey>> {\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: FromArgs<T, TKey>): V<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptions<Dictionary<T, TKey>>): Vector<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptionsAsync<Dictionary<T, TKey>>): Promise<Vector<Dictionary<T, TKey>>>;\n    /** @nocollapse */\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: any[]) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args as FromArgs<T, TKey>;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n\n    constructor(data: Data<Dictionary<T, TKey>>) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n\n    public readonly indices: V<TKey>;\n\n    public get dictionary() { return <Vector<T>> this.data.dictionary; }\n    public reverseLookup(value: T) { return this.dictionary.indexOf(value); }\n    public getKey(idx: number): TKey['TValue'] | null { return this.indices.get(idx); }\n    public getValue(key: number): T['TValue'] | null { return this.dictionary.get(key); }\n    public setKey(idx: number, key: TKey['TValue'] | null) { return this.indices.set(idx, key); }\n    public setValue(key: number, value: T['TValue'] | null) { return this.dictionary.set(key, value); }\n}\n\n(DictionaryVector.prototype as any).indices = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { FixedSizeBinary } from '../type';\n\n/** @ignore */\nexport class FixedSizeBinaryVector extends BaseVector<FixedSizeBinary> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListVector<T extends DataType = any> extends BaseVector<FixedSizeList<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Float, Float16, Float32, Float64, FloatArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor } from '../interfaces';\n\n/** @ignore */\ntype FloatVectorConstructors =\n    typeof FloatVector   |\n    typeof Float16Vector |\n    typeof Float32Vector |\n    typeof Float64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Float, TNull = any> =\n    FloatArray                          |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FloatArrayCtor = TypedArrayConstructor<FloatArray>;\n\n/** @ignore */\nexport class FloatVector<T extends Float = Float> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof FloatVector, input: Uint16Array): Float16Vector;\n    public static from(this: typeof FloatVector, input: Float32Array): Float32Vector;\n    public static from(this: typeof FloatVector, input: Float64Array): Float64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Float16Vector,  input: FromInput<Float16, TNull>): Float16Vector;\n    public static from<TNull = any>(this: typeof Float32Vector,  input: FromInput<Float32, TNull>): Float32Vector;\n    public static from<TNull = any>(this: typeof Float64Vector,  input: FromInput<Float64, TNull>): Float64Vector;\n\n    // Not zero-copy\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Float, TNull = any>(this: FloatVectorConstructors, input: FromInput<T, TNull>) {\n\n        let ArrowType = vectorTypeToDataType(this);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as FloatArrayCtor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return Vector.new(Data.Float(type, 0, length, 0, null, input as FloatArray));\n                }\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\n\n/** @ignore */\nexport class Float16Vector extends FloatVector<Float16> {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    public toFloat32Array() { return new Float32Array(this as Iterable<number>); }\n    public toFloat64Array() { return new Float64Array(this as Iterable<number>); }\n}\n\n/** @ignore */\nexport class Float32Vector extends FloatVector<Float32> {}\n/** @ignore */\nexport class Float64Vector extends FloatVector<Float64> {}\n\nconst convertTo16Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Float16) && (dataCtor !== Uint16Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: FloatArrayCtor) => {\n    switch (ctor) {\n        case Uint16Array:    return Float16;\n        case Float32Array:   return Float32;\n        case Float64Array:   return Float64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: FloatVectorConstructors) => {\n    switch (ctor) {\n        case Float16Vector: return Float16;\n        case Float32Vector: return Float32;\n        case Float64Vector: return Float64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalVector<T extends Interval = Interval> extends BaseVector<T> {}\n/** @ignore */\nexport class IntervalDayTimeVector extends IntervalVector<IntervalDayTime> {}\n/** @ignore */\nexport class IntervalYearMonthVector extends IntervalVector<IntervalYearMonth> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { BigInt64Array, BigUint64Array } from '../util/compat';\nimport { toBigInt64Array, toBigUint64Array } from '../util/buffer';\nimport { Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64, IntArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor, BigIntArrayConstructor, BigIntArray } from '../interfaces';\n\n/** @ignore */\ntype IntVectorConstructors =\n    typeof IntVector    |\n    typeof Int8Vector   |\n    typeof Int16Vector  |\n    typeof Int32Vector  |\n    typeof Uint8Vector  |\n    typeof Uint16Vector |\n    typeof Uint32Vector |\n    typeof Int64Vector  |\n    typeof Uint64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Int, TNull = any> =\n    IntArray | BigIntArray              |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FromArgs<T extends Int, TNull = any> = [FromInput<T, TNull>, boolean?];\n\n/** @ignore */\ntype IntArrayCtor = TypedArrayConstructor<IntArray> | BigIntArrayConstructor<BigIntArray>;\n\n/** @ignore */\nexport class IntVector<T extends Int = Int> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof IntVector, input: Int8Array): Int8Vector;\n    public static from(this: typeof IntVector, input: Int16Array): Int16Vector;\n    public static from(this: typeof IntVector, input: Int32Array): Int32Vector;\n    public static from(this: typeof IntVector, input: BigInt64Array): Int64Vector;\n    public static from(this: typeof IntVector, input: Int32Array, is64bit: true): Int64Vector;\n    public static from(this: typeof IntVector, input: Uint8Array): Uint8Vector;\n    public static from(this: typeof IntVector, input: Uint16Array): Uint16Vector;\n    public static from(this: typeof IntVector, input: Uint32Array): Uint32Vector;\n    public static from(this: typeof IntVector, input: BigUint64Array): Uint64Vector;\n    public static from(this: typeof IntVector, input: Uint32Array, is64bit: true): Uint64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Int8Vector,   input: FromInput<Int8, TNull>): Int8Vector;\n    public static from<TNull = any>(this: typeof Int16Vector,  input: FromInput<Int16, TNull>): Int16Vector;\n    public static from<TNull = any>(this: typeof Int32Vector,  input: FromInput<Int32, TNull>): Int32Vector;\n    public static from<TNull = any>(this: typeof Int64Vector,  input: FromInput<Int64, TNull>): Int64Vector;\n    public static from<TNull = any>(this: typeof Uint8Vector,  input: FromInput<Uint8, TNull>): Uint8Vector;\n    public static from<TNull = any>(this: typeof Uint16Vector, input: FromInput<Uint16, TNull>): Uint16Vector;\n    public static from<TNull = any>(this: typeof Uint32Vector, input: FromInput<Uint32, TNull>): Uint32Vector;\n    public static from<TNull = any>(this: typeof Uint64Vector, input: FromInput<Uint64, TNull>): Uint64Vector;\n\n    // Not zero-copy\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Int, TNull = any>(this: IntVectorConstructors, ...args: FromArgs<T, TNull>) {\n\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as IntArrayCtor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return Vector.new(Data.Int(type, 0, length, 0, null, input as IntArray));\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\n\n/** @ignore */\nexport class Int8Vector extends IntVector<Int8> {}\n/** @ignore */\nexport class Int16Vector extends IntVector<Int16> {}\n/** @ignore */\nexport class Int32Vector extends IntVector<Int32> {}\n/** @ignore */\nexport class Int64Vector extends IntVector<Int64> {\n    public toBigInt64Array() {\n        return toBigInt64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigInt64Array;\n    public get values64(): BigInt64Array {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\n\n/** @ignore */\nexport class Uint8Vector extends IntVector<Uint8> {}\n/** @ignore */\nexport class Uint16Vector extends IntVector<Uint16> {}\n/** @ignore */\nexport class Uint32Vector extends IntVector<Uint32> {}\n/** @ignore */\nexport class Uint64Vector extends IntVector<Uint64> {\n    public toBigUint64Array() {\n        return toBigUint64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigUint64Array;\n    public get values64(): BigUint64Array {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\n\nconst convert32To64Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Int64 || typeCtor === Uint64) &&\n           (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: IntArrayCtor, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Array:      return Int8;\n        case Int16Array:     return Int16;\n        case Int32Array:     return is64bit ? Int64 : Int32;\n        case BigInt64Array:  return Int64;\n        case Uint8Array:     return Uint8;\n        case Uint16Array:    return Uint16;\n        case Uint32Array:    return is64bit ? Uint64 : Uint32;\n        case BigUint64Array: return Uint64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: IntVectorConstructors, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Vector:   return Int8;\n        case Int16Vector:  return Int16;\n        case Int32Vector:  return is64bit ? Int64 : Int32;\n        case Int64Vector:  return Int64;\n        case Uint8Vector:  return Uint8;\n        case Uint16Vector: return Uint16;\n        case Uint32Vector: return is64bit ? Uint64 : Uint32;\n        case Uint64Vector: return Uint64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, List } from '../type';\n\n/** @ignore */\nexport class ListVector<T extends DataType = any> extends BaseVector<List<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MapRow } from './row';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { DataType, Map_, Struct, List } from '../type';\n\n/** @ignore */\nexport class MapVector<K extends DataType = any, V extends DataType = any> extends BaseVector<Map_<K, V>> {\n    public asList() {\n        const child = this.type.children[0] as Field<Struct<{ key: K, value: V }>>;\n        return Vector.new(this.data.clone(new List<Struct<{ key: K, value: V }>>(child)));\n    }\n    public bind(index: number): Map_<K, V>['TValue'] {\n        const child = this.getChildAt<Struct<{ key: K, value: V }>>(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child!.slice(begin, end));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class NullVector extends BaseVector<Null> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { StructRow } from './row';\nimport { BaseVector } from './base';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nexport class StructVector<T extends { [key: string]: DataType } = any> extends BaseVector<Struct<T>> {\n    // @ts-ignore\n    private _row: StructRow<T>;\n    public bind(index: number): Struct<T>['TValue'] {\n        const proto = this._row || (this._row = new StructRow<T>(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampVector<T extends Timestamp = Timestamp> extends BaseVector<T> {}\n/** @ignore */\nexport class TimestampSecondVector extends TimestampVector<TimestampSecond> {}\n/** @ignore */\nexport class TimestampMillisecondVector extends TimestampVector<TimestampMillisecond> {}\n/** @ignore */\nexport class TimestampMicrosecondVector extends TimestampVector<TimestampMicrosecond> {}\n/** @ignore */\nexport class TimestampNanosecondVector extends TimestampVector<TimestampNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeVector<T extends Time = Time> extends BaseVector<T> {}\n/** @ignore */\nexport class TimeSecondVector extends TimeVector<TimeSecond> {}\n/** @ignore */\nexport class TimeMillisecondVector extends TimeVector<TimeMillisecond> {}\n/** @ignore */\nexport class TimeMicrosecondVector extends TimeVector<TimeMicrosecond> {}\n/** @ignore */\nexport class TimeNanosecondVector extends TimeVector<TimeNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Union, DenseUnion, SparseUnion} from '../type';\n\n/** @ignore */\nexport class UnionVector<T extends Union = Union> extends BaseVector<T> {\n    public get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n\n/** @ignore */\nexport class DenseUnionVector extends UnionVector<DenseUnion> {\n    public get valueOffsets() { return this.data.valueOffsets!; }\n}\n\n/** @ignore */\nexport class SparseUnionVector extends UnionVector<SparseUnion> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class Utf8Vector extends BaseVector<Utf8> {\n    public static from<TNull = any>(input: Iterable<string | TNull>): Utf8Vector;\n    public static from<TNull = any>(input: AsyncIterable<string | TNull>): Promise<Utf8Vector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Utf8, TNull>): Chunked<Utf8>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Utf8, TNull>): Promise<Chunked<Utf8>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<string | TNull> | AsyncIterable<string | TNull> | VectorBuilderOptions<Utf8, TNull> | VectorBuilderOptionsAsync<Utf8, TNull>) {\n        return vectorFromValuesWithType(() => new Utf8(), input);\n    }\n    public asBinary() {\n        return Vector.new(this.data.clone(new Binary()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function partial0<T>(visit: (node: T) => any) {\n    return function(this: T) { return visit(this); };\n}\n\n/** @ignore */\nexport function partial1<T>(visit: (node: T, a: any) => any) {\n    return function(this: T, a: any) { return visit(this, a); };\n}\n\n/** @ignore */\nexport function partial2<T>(visit: (node: T, a: any, b: any) => any) {\n    return function(this: T, a: any, b: any) { return visit(this, a, b); };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { BN } from '../util/bn';\nimport { Visitor } from '../visitor';\nimport { decodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { uint16ToFloat64 } from '../util/math';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface GetVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, index: number): T['TValue'];\n    visitMany<T extends VectorType>  (nodes: T[], indices: number[]): T['TValue'][];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    visitNull                 <T extends Null>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt                  <T extends Int>                  (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt16                <T extends Int16>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt32                <T extends Int32>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt64                <T extends Int64>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat                <T extends Float>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBinary               <T extends Binary>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitDate                 <T extends Date_>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>, index: number): T['TValue'];\n    visitTime                 <T extends Time>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>, index: number): T['TValue'];\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitList                 <T extends List>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitStruct               <T extends Struct>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUnion                <T extends Union>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>, index: number): T['TValue'];\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitInterval             <T extends Interval>             (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>, index: number): T['TValue'];\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>, index: number): T['TValue'];\n}\n\n/** @ignore */\nexport class GetVisitor extends Visitor {}\n\n/** @ignore */const epochDaysToMs = (data: Int32Array, index: number) => 86400000 * data[index];\n/** @ignore */const epochMillisecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */const epochMicrosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */const epochNanosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n\n/** @ignore */const epochMillisecondsToDate = (epochMs: number) => new Date(epochMs);\n/** @ignore */const epochDaysToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */const epochMillisecondsLongToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n\n/** @ignore */\nconst getNull = <T extends Null>(_vector: VectorType<T>, _index: number): T['TValue'] => null;\n/** @ignore */\nconst getVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null as any;\n};\n\n/** @ignore */\nconst getBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number): T['TValue'] => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n\n/** @ignore */\ntype Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */\ntype Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst getDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number): T['TValue'] => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number): T['TValue'] => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts         = <T extends Numeric2X>({ stride, values, type }: VectorType<T>, index: number): T['TValue'] => <any> BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number): T['TValue'] => values.subarray(stride * index, stride * (index + 1));\n\n/** @ignore */\nconst getBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null as any;\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = <T extends Int>(vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.bitWidth < 64\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getBigInts(vector as VectorType<Numeric2X>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = <T extends Float> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.precision !== Precision.HALF\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getFloat16(vector as VectorType<Float16>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = <T extends Date_> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.unit === DateUnit.DAY\n        ? getDateDay(vector as VectorType<DateDay>, index)\n        : getDateMillisecond(vector as VectorType<DateMillisecond>, index)\n);\n\n/** @ignore */\nconst getTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number): T['TValue'] => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number): T['TValue'] => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimestampSecond(vector as VectorType<TimestampSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime            = <T extends Time>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimeSecond(vector as VectorType<TimeSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(vector as VectorType<TimeMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimeNanosecond(vector as VectorType<TimeNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number): T['TValue'] => BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n\n/** @ignore */\nconst getList = <T extends List>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]) as T['TValue'];\n};\n\n/** @ignore */\nconst getMap = <T extends Map_>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/** @ignore */\nconst getStruct = <T extends Struct>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number): V['TValue'] => {\n    return vector.type.mode === UnionMode.Dense ?\n        getDenseUnion(vector as VectorType<DenseUnion>, index) :\n        getSparseUnion(vector as VectorType<SparseUnion>, index);\n};\n\n/** @ignore */\nconst getDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n\n/** @ignore */\nconst getSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n\n/** @ignore */\nconst getDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.getValue(vector.getKey(index)!);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = <T extends Interval>(vector: VectorType<T>, index: number): T['TValue'] =>\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? getIntervalDayTime(vector as VectorType<IntervalDayTime>, index)\n        : getIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index);\n\n/** @ignore */\nconst getIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number): T['TValue'] => values.subarray(2 * index, 2 * (index + 1));\n\n/** @ignore */\nconst getIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number): T['TValue'] => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n\n/** @ignore */\nconst getFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride) as T['TValue'];\n};\n\nGetVisitor.prototype.visitNull                 =                 getNull;\nGetVisitor.prototype.visitBool                 =                 getBool;\nGetVisitor.prototype.visitInt                  =                  getInt;\nGetVisitor.prototype.visitInt8                 =              getNumeric;\nGetVisitor.prototype.visitInt16                =              getNumeric;\nGetVisitor.prototype.visitInt32                =              getNumeric;\nGetVisitor.prototype.visitInt64                =              getBigInts;\nGetVisitor.prototype.visitUint8                =              getNumeric;\nGetVisitor.prototype.visitUint16               =              getNumeric;\nGetVisitor.prototype.visitUint32               =              getNumeric;\nGetVisitor.prototype.visitUint64               =              getBigInts;\nGetVisitor.prototype.visitFloat                =                getFloat;\nGetVisitor.prototype.visitFloat16              =              getFloat16;\nGetVisitor.prototype.visitFloat32              =              getNumeric;\nGetVisitor.prototype.visitFloat64              =              getNumeric;\nGetVisitor.prototype.visitUtf8                 =                 getUtf8;\nGetVisitor.prototype.visitBinary               =               getBinary;\nGetVisitor.prototype.visitFixedSizeBinary      =      getFixedSizeBinary;\nGetVisitor.prototype.visitDate                 =                 getDate;\nGetVisitor.prototype.visitDateDay              =              getDateDay;\nGetVisitor.prototype.visitDateMillisecond      =      getDateMillisecond;\nGetVisitor.prototype.visitTimestamp            =            getTimestamp;\nGetVisitor.prototype.visitTimestampSecond      =      getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond  =  getTimestampNanosecond;\nGetVisitor.prototype.visitTime                 =                 getTime;\nGetVisitor.prototype.visitTimeSecond           =           getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond      =      getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond      =      getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond       =       getTimeNanosecond;\nGetVisitor.prototype.visitDecimal              =              getDecimal;\nGetVisitor.prototype.visitList                 =                 getList;\nGetVisitor.prototype.visitStruct               =               getStruct;\nGetVisitor.prototype.visitUnion                =                getUnion;\nGetVisitor.prototype.visitDenseUnion           =           getDenseUnion;\nGetVisitor.prototype.visitSparseUnion          =          getSparseUnion;\nGetVisitor.prototype.visitDictionary           =           getDictionary;\nGetVisitor.prototype.visitInterval             =             getInterval;\nGetVisitor.prototype.visitIntervalDayTime      =      getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth    =    getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList        =        getFixedSizeList;\nGetVisitor.prototype.visitMap                  =                  getMap;\n\n/** @ignore */\nexport const instance = new GetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { getBool, iterateBits } from '../util/bit';\nimport { createElementComparator } from '../util/vector';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IndexOfVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, value: T['TValue'] | null, index?: number): number;\n    visitMany <T extends VectorType>  (nodes: T[], values: (T['TValue'] | null)[], indices: (number | undefined)[]): number[];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, value: VectorType<T>['TValue'] | null, index?: number) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, value:         T['TValue'] | null, index?: number) => number;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitList                 <T extends List>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n}\n\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullIndexOf(vector: VectorType<Null>, searchElement?: null) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n\n/** @ignore */\nfunction indexOfNull<T extends DataType>(vector: VectorType<T>, fromIndex?: number): number {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n        if (!isValid) { return i; }\n        ++i;\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfValue<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    if (searchElement === undefined) { return -1; }\n    if (searchElement === null) { return indexOfNull(vector, fromIndex); }\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfUnion<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nIndexOfVisitor.prototype.visitNull                 =  nullIndexOf;\nIndexOfVisitor.prototype.visitBool                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt                  = indexOfValue;\nIndexOfVisitor.prototype.visitInt8                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16                = indexOfValue;\nIndexOfVisitor.prototype.visitInt32                = indexOfValue;\nIndexOfVisitor.prototype.visitInt64                = indexOfValue;\nIndexOfVisitor.prototype.visitUint8                = indexOfValue;\nIndexOfVisitor.prototype.visitUint16               = indexOfValue;\nIndexOfVisitor.prototype.visitUint32               = indexOfValue;\nIndexOfVisitor.prototype.visitUint64               = indexOfValue;\nIndexOfVisitor.prototype.visitFloat                = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64              = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8                 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary               = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary      = indexOfValue;\nIndexOfVisitor.prototype.visitDate                 = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay              = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp            = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond  = indexOfValue;\nIndexOfVisitor.prototype.visitTime                 = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond           = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond       = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal              = indexOfValue;\nIndexOfVisitor.prototype.visitList                 = indexOfValue;\nIndexOfVisitor.prototype.visitStruct               = indexOfValue;\nIndexOfVisitor.prototype.visitUnion                = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion           = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion          = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary           = indexOfValue;\nIndexOfVisitor.prototype.visitInterval             = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime      = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth    = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList        = indexOfValue;\nIndexOfVisitor.prototype.visitMap                  = indexOfValue;\n\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { iterateBits } from '../util/bit';\nimport { instance as getVisitor } from './get';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IteratorVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): IterableIterator<T['TValue'] | null>;\n    visitMany <T extends VectorType>(nodes: T[]): IterableIterator<T['TValue'] | null>[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    visitNull                 <T extends Null>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt                  <T extends Int>                  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt16                <T extends Int16>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt32                <T extends Int32>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt64                <T extends Int64>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat                <T extends Float>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBinary               <T extends Binary>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDate                 <T extends Date_>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTime                 <T extends Time>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitList                 <T extends List>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitStruct               <T extends Struct>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUnion                <T extends Union>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInterval             <T extends Interval>             (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n}\n\n/** @ignore */\nexport class IteratorVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullableIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n    const getFn = getVisitor.getVisitFn(vector);\n    return iterateBits<T['TValue'] | null>(\n        vector.nullBitmap, vector.offset, vector.length, vector,\n        (vec: VectorType<T>, idx: number, nullByte: number, nullBit: number) =>\n            ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null\n    );\n}\n\n/** @ignore */\nfunction vectorIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator<T>(vector);\n    }\n\n    const { type, typeId, length } = vector;\n\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && (\n        (typeId === Type.Timestamp) ||\n        (typeId === Type.Int && (type as Int).bitWidth !== 64) ||\n        (typeId === Type.Time && (type as Time).bitWidth !== 64) ||\n        (typeId === Type.Float && (type as Float).precision > 0 /* Precision.HALF */)\n    )) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(getVisitor.getVisitFn(vector));\n}\n\nIteratorVisitor.prototype.visitNull                 = vectorIterator;\nIteratorVisitor.prototype.visitBool                 = vectorIterator;\nIteratorVisitor.prototype.visitInt                  = vectorIterator;\nIteratorVisitor.prototype.visitInt8                 = vectorIterator;\nIteratorVisitor.prototype.visitInt16                = vectorIterator;\nIteratorVisitor.prototype.visitInt32                = vectorIterator;\nIteratorVisitor.prototype.visitInt64                = vectorIterator;\nIteratorVisitor.prototype.visitUint8                = vectorIterator;\nIteratorVisitor.prototype.visitUint16               = vectorIterator;\nIteratorVisitor.prototype.visitUint32               = vectorIterator;\nIteratorVisitor.prototype.visitUint64               = vectorIterator;\nIteratorVisitor.prototype.visitFloat                = vectorIterator;\nIteratorVisitor.prototype.visitFloat16              = vectorIterator;\nIteratorVisitor.prototype.visitFloat32              = vectorIterator;\nIteratorVisitor.prototype.visitFloat64              = vectorIterator;\nIteratorVisitor.prototype.visitUtf8                 = vectorIterator;\nIteratorVisitor.prototype.visitBinary               = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary      = vectorIterator;\nIteratorVisitor.prototype.visitDate                 = vectorIterator;\nIteratorVisitor.prototype.visitDateDay              = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp            = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond  = vectorIterator;\nIteratorVisitor.prototype.visitTime                 = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond           = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond       = vectorIterator;\nIteratorVisitor.prototype.visitDecimal              = vectorIterator;\nIteratorVisitor.prototype.visitList                 = vectorIterator;\nIteratorVisitor.prototype.visitStruct               = vectorIterator;\nIteratorVisitor.prototype.visitUnion                = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion           = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion          = vectorIterator;\nIteratorVisitor.prototype.visitDictionary           = vectorIterator;\nIteratorVisitor.prototype.visitInterval             = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime      = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth    = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList        = vectorIterator;\nIteratorVisitor.prototype.visitMap                  = vectorIterator;\n\n/** @ignore */\nexport const instance = new IteratorVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { instance as iteratorVisitor } from './iterator';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface ToArrayVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): T['TArray'];\n    visitMany<T extends VectorType>(nodes: T[]): T['TArray'][];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    visitNull                                    <T extends Null>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBool                                    <T extends Bool>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt                                     <T extends Int>                 (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt8                                    <T extends Int8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt16                                   <T extends Int16>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt32                                   <T extends Int32>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt64                                   <T extends Int64>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint8                                   <T extends Uint8>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint16                                  <T extends Uint16>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint32                                  <T extends Uint32>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint64                                  <T extends Uint64>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat                                   <T extends Float>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat16                                 <T extends Float16>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat32                                 <T extends Float32>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat64                                 <T extends Float64>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUtf8                                    <T extends Utf8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBinary                                  <T extends Binary>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeBinary                         <T extends FixedSizeBinary>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDate                                    <T extends Date_>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateDay                                 <T extends DateDay>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateMillisecond                         <T extends DateMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestamp                               <T extends Timestamp>           (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampSecond                         <T extends TimestampSecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMillisecond                    <T extends TimestampMillisecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMicrosecond                    <T extends TimestampMicrosecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampNanosecond                     <T extends TimestampNanosecond> (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTime                                    <T extends Time>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeSecond                              <T extends TimeSecond>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMillisecond                         <T extends TimeMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMicrosecond                         <T extends TimeMicrosecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeNanosecond                          <T extends TimeNanosecond>      (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDecimal                                 <T extends Decimal>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitList                <R extends DataType, T extends List<R>>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitStruct                                  <T extends Struct>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUnion                                   <T extends Union>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDenseUnion                              <T extends DenseUnion>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitSparseUnion                             <T extends SparseUnion>         (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDictionary          <R extends DataType, T extends Dictionary<R>>       (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInterval                                <T extends Interval>            (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalDayTime                         <T extends IntervalDayTime>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalYearMonth                       <T extends IntervalYearMonth>   (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeList       <R extends DataType, T extends FixedSizeList<R>>    (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitMap                                     <T extends Map_>                (vector: VectorType<T>): VectorType<T>['TArray'];\n}\n\n/** @ignore */\nexport class ToArrayVisitor extends Visitor {}\n\n/** @ignore */\nfunction arrayOfVector<T extends DataType>(vector: VectorType<T>): T['TArray'] {\n\n    const { type, length, stride } = vector;\n\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case Type.Int:\n        case Type.Float: case Type.Decimal:\n        case Type.Time: case Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n\n    // Otherwise if not primitive, slow copy\n    return [...iteratorVisitor.visit(vector)] as T['TArray'];\n}\n\nToArrayVisitor.prototype.visitNull                 = arrayOfVector;\nToArrayVisitor.prototype.visitBool                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt                  = arrayOfVector;\nToArrayVisitor.prototype.visitInt8                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16                = arrayOfVector;\nToArrayVisitor.prototype.visitInt32                = arrayOfVector;\nToArrayVisitor.prototype.visitInt64                = arrayOfVector;\nToArrayVisitor.prototype.visitUint8                = arrayOfVector;\nToArrayVisitor.prototype.visitUint16               = arrayOfVector;\nToArrayVisitor.prototype.visitUint32               = arrayOfVector;\nToArrayVisitor.prototype.visitUint64               = arrayOfVector;\nToArrayVisitor.prototype.visitFloat                = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64              = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8                 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary               = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary      = arrayOfVector;\nToArrayVisitor.prototype.visitDate                 = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay              = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp            = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond  = arrayOfVector;\nToArrayVisitor.prototype.visitTime                 = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond           = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond       = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal              = arrayOfVector;\nToArrayVisitor.prototype.visitList                 = arrayOfVector;\nToArrayVisitor.prototype.visitStruct               = arrayOfVector;\nToArrayVisitor.prototype.visitUnion                = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion           = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion          = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary           = arrayOfVector;\nToArrayVisitor.prototype.visitInterval             = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime      = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth    = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList        = arrayOfVector;\nToArrayVisitor.prototype.visitMap                  = arrayOfVector;\n\n/** @ignore */\nexport const instance = new ToArrayVisitor();\n","/* istanbul ignore file */\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Type, TimeUnit } from '../enum';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n} from '../type';\n\n/** @ignore */ const sum = (x: number, y: number) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type: DataType) => `Cannot compute the byte width of variable-width column ${type}`;\n\n/** @ignore */\nexport interface ByteWidthVisitor extends Visitor {\n    visit<T extends DataType>(node: T): number;\n    visitMany<T extends DataType>(nodes: T[]): number[];\n    getVisitFn<T extends Type>    (node: T): (type: DataType<T>) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (type: T) => number;\n}\n\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    public visitNull            (____: Null            ) { return 0; }\n    public visitInt             (type: Int             ) { return type.bitWidth / 8; }\n    public visitFloat           (type: Float           ) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    public visitBinary          (type: Binary          ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitUtf8            (type: Utf8            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitBool            (____: Bool            ) { return 1 / 8; }\n    public visitDecimal         (____: Decimal         ) { return 16; }\n    public visitDate            (type: Date_           ) { return (type.unit + 1) * 4; }\n    public visitTime            (type: Time            ) { return type.bitWidth / 8; }\n    public visitTimestamp       (type: Timestamp       ) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    public visitInterval        (type: Interval        ) { return (type.unit + 1) * 4; }\n    public visitList            (type: List            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitStruct          (type: Struct          ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitUnion           (type: Union           ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitFixedSizeBinary (type: FixedSizeBinary ) { return type.byteWidth; }\n    public visitFixedSizeList   (type: FixedSizeList   ) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    public visitMap             (type: Map_            ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitDictionary      (type: Dictionary      ) { return this.visit(type.indices); }\n    public visitFields          (fields: Field[]       ) { return (fields || []).map((field) => this.visit(field.type)); }\n    public visitSchema          (schema: Schema        ) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, VectorCtor } from '../interfaces';\n\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n\n/** @ignore */\nexport interface GetVectorConstructor extends Visitor {\n    visit<T extends Type>(node: T): VectorCtor<T>;\n    visitMany <T extends Type>(nodes: T[]): VectorCtor<T>[];\n    getVisitFn<T extends Type>(node: T): () => VectorCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => VectorCtor<T>;\n}\n\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    public visitNull                 () { return NullVector; }\n    public visitBool                 () { return BoolVector; }\n    public visitInt                  () { return IntVector; }\n    public visitInt8                 () { return Int8Vector; }\n    public visitInt16                () { return Int16Vector; }\n    public visitInt32                () { return Int32Vector; }\n    public visitInt64                () { return Int64Vector; }\n    public visitUint8                () { return Uint8Vector; }\n    public visitUint16               () { return Uint16Vector; }\n    public visitUint32               () { return Uint32Vector; }\n    public visitUint64               () { return Uint64Vector; }\n    public visitFloat                () { return FloatVector; }\n    public visitFloat16              () { return Float16Vector; }\n    public visitFloat32              () { return Float32Vector; }\n    public visitFloat64              () { return Float64Vector; }\n    public visitUtf8                 () { return Utf8Vector; }\n    public visitBinary               () { return BinaryVector; }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryVector; }\n    public visitDate                 () { return DateVector; }\n    public visitDateDay              () { return DateDayVector; }\n    public visitDateMillisecond      () { return DateMillisecondVector; }\n    public visitTimestamp            () { return TimestampVector; }\n    public visitTimestampSecond      () { return TimestampSecondVector; }\n    public visitTimestampMillisecond () { return TimestampMillisecondVector; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondVector; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondVector; }\n    public visitTime                 () { return TimeVector; }\n    public visitTimeSecond           () { return TimeSecondVector; }\n    public visitTimeMillisecond      () { return TimeMillisecondVector; }\n    public visitTimeMicrosecond      () { return TimeMicrosecondVector; }\n    public visitTimeNanosecond       () { return TimeNanosecondVector; }\n    public visitDecimal              () { return DecimalVector; }\n    public visitList                 () { return ListVector; }\n    public visitStruct               () { return StructVector; }\n    public visitUnion                () { return UnionVector; }\n    public visitDenseUnion           () { return DenseUnionVector; }\n    public visitSparseUnion          () { return SparseUnionVector; }\n    public visitDictionary           () { return DictionaryVector; }\n    public visitInterval             () { return IntervalVector; }\n    public visitIntervalDayTime      () { return IntervalDayTimeVector; }\n    public visitIntervalYearMonth    () { return IntervalYearMonthVector; }\n    public visitFixedSizeList        () { return FixedSizeListVector; }\n    public visitMap                  () { return MapVector; }\n}\n\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\n\nimport * as fn from '../util/fn';\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder, IterableBuilderOptions } from '../builder';\nimport { VectorType as V, VectorCtorArgs } from '../interfaces';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n\ndeclare module '../vector' {\n    namespace Vector {\n        export { newVector as new };\n        export { vectorFrom as from };\n    }\n}\n\ndeclare module './base' {\n    namespace BaseVector {\n        export { vectorFrom as from };\n    }\n    interface BaseVector<T extends DataType> {\n        get(index: number): T['TValue'] | null;\n        set(index: number, value: T['TValue'] | null): void;\n        indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n        toArray(): T['TArray'];\n        getByteWidth(): number;\n        [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n    }\n}\n\n/** @nocollapse */\nVector.new = newVector;\n\n/** @nocollapse */\nVector.from = vectorFrom;\n\n/** @ignore */\nfunction newVector<T extends DataType>(data: Data<T>, ...args: VectorCtorArgs<V<T>>): V<T> {\n    return new (getVectorConstructor.getVisitFn<T>(data)())(data, ...args) as V<T>;\n}\n\n/** @ignore */\nexport interface VectorBuilderOptions<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: Iterable<T['TValue'] | TNull>; }\n/** @ignore */\nexport interface VectorBuilderOptionsAsync<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: AsyncIterable<T['TValue'] | TNull>; }\n\n/** @ignore */\nexport function vectorFromValuesWithType<T extends DataType, TNull = any>(newDataType: () => T, input: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as V<T>;\n    } else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as Promise<V<T>>;\n    }\n    const {\n        'values': values = [],\n        'type': type = newDataType(),\n        'nullValues': nullValues = [null, undefined],\n    } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type } as VectorBuilderOptions<T, TNull>)\n        : Vector.from({ nullValues, ...input, type } as VectorBuilderOptionsAsync<T, TNull>);\n}\n\n/** @ignore */\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull>): Vector<T>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Vector<T>>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input } as VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>;\n    if (isIterable<T['TValue'] | TNull>(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    }\n    return (async (chunks: V<T>[]) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    })([]);\n}\n\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\n\nBaseVector.prototype.get = function baseVectorGet<T extends DataType>(this: BaseVector<T>, index: number): T['TValue'] | null {\n    return getVisitor.visit(this, index);\n};\n\nBaseVector.prototype.set = function baseVectorSet<T extends DataType>(this: BaseVector<T>, index: number, value: T['TValue'] | null): void {\n    return setVisitor.visit(this, index, value);\n};\n\nBaseVector.prototype.indexOf = function baseVectorIndexOf<T extends DataType>(this: BaseVector<T>, value: T['TValue'] | null, fromIndex?: number): number {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\n\nBaseVector.prototype.toArray = function baseVectorToArray<T extends DataType>(this: BaseVector<T>): T['TArray'] {\n    return toArrayVisitor.visit(this);\n};\n\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth<T extends DataType>(this: BaseVector<T>): number {\n    return byteWidthVisitor.visit(this.type);\n};\n\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator<T extends DataType>(this: BaseVector<T>): IterableIterator<T['TValue'] | null> {\n    return iteratorVisitor.visit(this);\n};\n\n(BaseVector.prototype as any)._bindDataAccessors = bindBaseVectorDataAccessors;\n\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n        const VectorCtor = getVectorConstructor.visit(typeId);\n        VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n        VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n    });\n\n/** @ignore */\nfunction partialType0<T extends Vector>(visit: (node: T['type']) => any) {\n    return function(this: T) { return visit(this.type); };\n}\n\n/** @ignore */\nfunction wrapNullableGet<T extends DataType, V extends Vector<T>, F extends (i: number) => any>(fn: F): (...args: Parameters<F>) => ReturnType<F> {\n    return function(this: V, i: number) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n\n/** @ignore */\nfunction wrapNullableSet<T extends DataType, V extends BaseVector<T>, F extends (i: number, a: any) => void>(fn: F): (...args: Parameters<F>) => void {\n    return function(this: V, i: number, a: any) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n\n/** @ignore */\nfunction bindBaseVectorDataAccessors<T extends DataType>(this: BaseVector<T>) {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Column } from './column';\nimport { Schema, Field } from './schema';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch';\nimport { DataFrame } from './compute/dataframe';\nimport { RecordBatchReader } from './ipc/reader';\nimport { DataType, RowLike, Struct } from './type';\nimport { selectColumnArgs, selectArgs } from './util/args';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { isPromise, isIterable, isAsyncIterable } from './util/compat';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './ipc/writer';\nimport { distributeColumnsIntoRecordBatches, distributeVectorsIntoRecordBatches } from './util/recordbatch';\nimport { Vector, Chunked, StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = Data<T[keyof T]>[] | Vector<T[keyof T]>[];\ntype Columns<T extends { [key: string]: DataType }> = Column<T[keyof T]>[] | Column<T[keyof T]>[][];\n\nexport interface Table<T extends { [key: string]: DataType } = any> {\n\n    get(index: number): Struct<T>['TValue'];\n    [Symbol.iterator](): IterableIterator<RowLike<T>>;\n\n    slice(begin?: number, end?: number): Table<T>;\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    clone(chunks?: RecordBatch<T>[], offsets?: Uint32Array): Table<T>;\n\n    scan(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    scanReverse(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    countBy(name: import('./compute/predicate').Col | string): import('./compute/dataframe').CountByResult;\n    filter(predicate: import('./compute/predicate').Predicate): import('./compute/dataframe').FilteredDataFrame<T>;\n}\n\nexport class Table<T extends { [key: string]: DataType } = any>\n    extends Chunked<Struct<T>>\n    implements DataFrame<T>,\n               Clonable<Table<T>>,\n               Sliceable<Table<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    /** @nocollapse */\n    public static empty<T extends { [key: string]: DataType } = {}>(schema = new Schema<T>([])) { return new Table<T>(schema, []); }\n\n    public static from(): Table<{}>;\n    public static from<T extends { [key: string]: DataType } = any>(source: RecordBatchReader<T>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg0): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg2): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg1): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg3): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg4): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg5): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: PromiseLike<RecordBatchReader<T>>): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(input?: any) {\n\n        if (!input) { return Table.empty(); }\n\n        if (typeof input === 'object') {\n            let table = isIterable(input['values']) ? tableFromIterable<T, TNull>(input)\n                 : isAsyncIterable(input['values']) ? tableFromAsyncIterable<T, TNull>(input)\n                                                    : null;\n            if (table !== null) { return table; }\n        }\n\n        let reader = RecordBatchReader.from<T>(input) as RecordBatchReader<T> | Promise<RecordBatchReader<T>>;\n\n        if (isPromise<RecordBatchReader<T>>(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table<T>(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches: RecordBatch[] = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table<T>(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n\n    /** @nocollapse */\n    public static async fromAsync<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArgs): Promise<Table<T>> {\n        return await Table.from<T>(source as any);\n    }\n\n    /** @nocollapse */\n    public static fromStruct<T extends { [key: string]: DataType } = any>(vector: Vector<Struct<T>>) {\n        return Table.new<T>(vector.data.childData as Data<T[keyof T]>[], vector.type.children);\n    }\n\n    /**\n     * @summary Create a new Table from a collection of Columns or Vectors,\n     * with an optional list of names or Fields.\n     *\n     *\n     * `Table.new` accepts an Object of\n     * Columns or Vectors, where the keys will be used as the field names\n     * for the Schema:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new({ i32: i32s, f32: f32s });\n     * assert(table.schema.fields[0].name === 'i32');\n     * ```\n     *\n     * It also accepts a a list of Vectors with an optional list of names or\n     * Fields for the resulting Schema. If the list is omitted or a name is\n     * missing, the numeric index of each Vector will be used as the name:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new([i32s, f32s], ['i32']);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === '1');\n     * ```\n     *\n     * If the supplied arguments are Columns, `Table.new` will infer the Schema\n     * from the Columns:\n     * ```ts\n     * const i32s = Column.new('i32', Int32Vector.from([1, 2, 3]));\n     * const f32s = Column.new('f32', Float32Vector.from([.1, .2, .3]));\n     * const table = Table.new(i32s, f32s);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === 'f32');\n     * ```\n     *\n     * If the supplied Vector or Column lengths are unequal, `Table.new` will\n     * extend the lengths of the shorter Columns, allocating additional bytes\n     * to represent the additional null slots. The memory required to allocate\n     * these additional bitmaps can be computed as:\n     * ```ts\n     * let additionalBytes = 0;\n     * for (let vec in shorter_vectors) {\n     *     additionalBytes += (((longestLength - vec.length) + 63) & ~63) >> 3;\n     * }\n     * ```\n     *\n     * For example, an additional null bitmap for one million null values would require\n     * 125,000 bytes (`((1e6 + 63) & ~63) >> 3`), or approx. `0.11MiB`\n     */\n    public static new<T extends { [key: string]: DataType } = any>(...columns: Columns<T>): Table<T>;\n    public static new<T extends VectorMap = any>(children: T): Table<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Table<T>;\n    /** @nocollapse */\n    public static new(...cols: any[]) {\n        return new Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n    }\n\n    constructor(batches: RecordBatch<T>[]);\n    constructor(...batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, ...batches: RecordBatch<T>[]);\n    constructor(...args: any[]) {\n\n        let schema: Schema<T> = null!;\n\n        if (args[0] instanceof Schema) { schema = args.shift(); }\n\n        let chunks = selectArgs<RecordBatch<T>>(RecordBatch, args);\n\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n\n        chunks[0] || (chunks[0] = new _InternalEmptyPlaceholderRecordBatch(schema));\n\n        super(new Struct(schema.fields), chunks);\n\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n\n    protected _schema: Schema<T>;\n    // List of inner RecordBatches\n    protected _chunks: RecordBatch<T>[];\n    protected _children?: Column<T[keyof T]>[];\n\n    public get schema() { return this._schema; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get numCols() { return this._numChildren; }\n\n    public clone(chunks = this._chunks) {\n        return new Table<T>(this._schema, chunks);\n    }\n\n    public getColumn<R extends keyof T>(name: R): Column<T[R]> {\n        return this.getColumnAt(this.getColumnIndex(name)) as Column<T[R]>;\n    }\n    public getColumnAt<R extends DataType = any>(index: number): Column<R> | null {\n        return this.getChildAt(index);\n    }\n    public getColumnIndex<R extends keyof T>(name: R) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n        if (index < 0 || index >= this.numChildren) { return null; }\n        let field: Field<R>, child: Column<R>;\n        const fields = (this._schema as Schema<any>).fields;\n        const columns = this._children || (this._children = []) as Column[];\n        if (child = columns[index]) { return child as Column<R>; }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n        return null;\n    }\n\n    // @ts-ignore\n    public serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? RecordBatchFileWriter\n            : RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    public count(): number {\n        return this._length;\n    }\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt<K>(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    public assign<R extends { [key: string]: DataType } = any>(other: Table<R>) {\n\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []] as number[][]);\n\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) =>\n                (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))!),\n            ...indices.map((i) => other.getColumnAt(i)!)\n        ].filter(Boolean) as Column<(T & R)[keyof T | keyof R]>[];\n\n        return new Table<T & R>(...distributeVectorsIntoRecordBatches<any>(schema, columns));\n    }\n}\n\nfunction tableFromIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptions<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return Table.fromStruct(StructVector.from(input as VectorBuilderOptions<Struct<T>, TNull>));\n    }\n    return null;\n}\n\nfunction tableFromAsyncIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return StructVector.from(input as VectorBuilderOptionsAsync<Struct<T>, TNull>).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema, Field } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct, Dictionary } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = (Data<T[keyof T]> | Vector<T[keyof T]>)[];\n\nexport interface RecordBatch<T extends { [key: string]: DataType } = any> {\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    slice(begin?: number, end?: number): RecordBatch<T>;\n    clone(data: Data<Struct<T>>, children?: Vector[]): RecordBatch<T>;\n}\n\nexport class RecordBatch<T extends { [key: string]: DataType } = any>\n    extends StructVector<T>\n    implements Clonable<RecordBatch<T>>,\n               Sliceable<RecordBatch<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull> | VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n        if (isIterable<(Struct<T>)['TValue'] | TNull>(options['values'])) {\n            return Table.from(options as VectorBuilderOptions<Struct<T>, TNull>);\n        }\n        return Table.from(options as VectorBuilderOptionsAsync<Struct<T>, TNull>);\n    }\n\n    public static new<T extends VectorMap = any>(children: T): RecordBatch<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): RecordBatch<T>;\n    /** @nocollapse */\n    public static new<T extends { [key: string]: DataType } = any>(...args: any[]) {\n        const [fs, xs] = selectFieldArgs<T>(args);\n        const vs = xs.filter((x): x is Vector<T[keyof T]> => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema<T>(fs), vs.map((x) => x.data)));\n    }\n\n    protected _schema: Schema;\n    protected _dictionaries?: Map<number, Vector>;\n\n    constructor(schema: Schema<T>, length: number, children: (Data | Vector)[]);\n    constructor(schema: Schema<T>, data: Data<Struct<T>>, children?: Vector[]);\n    constructor(...args: any[]) {\n        let data: Data<Struct<T>>;\n        let schema = args[0] as Schema<T>;\n        let children: Vector[] | undefined;\n        if (args[1] instanceof Data) {\n            [, data, children] = (args as [any, Data<Struct<T>>, Vector<T[keyof T]>[]?]);\n        } else {\n            const fields = schema.fields as Field<T[keyof T]>[];\n            const [, length, childData] = args as [any, number, Data<T[keyof T]>[]];\n            data = Data.Struct(new Struct<T>(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n\n    public clone(data: Data<Struct<T>>, children = this._children) {\n        return new RecordBatch<T>(this._schema, data, children);\n    }\n\n    public concat(...others: Vector<Struct<T>>[]): Table<T> {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n\n    public get schema() { return this._schema; }\n    public get numCols() { return this._schema.fields.length; }\n    public get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch<{ [key: string]: K }>(schema, this.length, childData);\n    }\n}\n\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch<T extends { [key: string]: DataType } = any> extends RecordBatch<T> {\n    constructor(schema: Schema<T>) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    public dictionaries = new Map<number, Vector>();\n    public static collect<T extends RecordBatch>(batch: T) {\n        return new DictionaryCollector().visit(\n            batch.data, new Struct(batch.schema.fields)\n        ).dictionaries;\n    }\n    public visit(data: Data, type: DataType) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        } else {\n            data.childData.forEach((child, i) =>\n                this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    public visitDictionary(data: Data, type: Dictionary) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { MessageHeader } from '../enum';\nimport { Footer } from './metadata/file';\nimport { Schema, Field } from '../schema';\nimport streamAdapters from '../io/adapters';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport {\n    FileHandle,\n    ArrowJSONLike,\n    ITERATOR_DONE,\n    ReadableInterop,\n} from '../io/interfaces';\nimport {\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding\n} from './message';\nimport {\n    isPromise,\n    isIterable, isAsyncIterable,\n    isIteratorResult, isArrowJSON,\n    isFileHandle, isFetchResponse,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */ export type FromArg0 = ArrowJSONLike;\n/** @ignore */ export type FromArg1 = PromiseLike<ArrowJSONLike>;\n/** @ignore */ export type FromArg2 = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n/** @ignore */ export type FromArg3 = PromiseLike<Iterable<ArrayBufferViewInput> | ArrayBufferViewInput>;\n/** @ignore */ export type FromArg4 = Response | NodeJS.ReadableStream | ReadableStream<ArrayBufferViewInput> | AsyncIterable<ArrayBufferViewInput>;\n/** @ignore */ export type FromArg5 = FileHandle | PromiseLike<FileHandle> | PromiseLike<FromArg4>;\n/** @ignore */ export type FromArgs = FromArg0 | FromArg1 | FromArg2 | FromArg3 | FromArg4 | FromArg5;\n\n/** @ignore */ type OpenOptions = { autoDestroy?: boolean; };\n/** @ignore */ type RecordBatchReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n/** @ignore */ type AsyncRecordBatchReaders<T extends { [key: string]: DataType } = any> = AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>;\n/** @ignore */ type RecordBatchFileReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | AsyncRecordBatchFileReader<T>;\n/** @ignore */ type RecordBatchStreamReaders<T extends { [key: string]: DataType } = any> = RecordBatchStreamReader<T> | AsyncRecordBatchStreamReader<T>;\n\nexport class RecordBatchReader<T extends { [key: string]: DataType } = any> extends ReadableInterop<RecordBatch<T>> {\n\n    protected _impl: RecordBatchReaderImpls<T>;\n    protected constructor(impl: RecordBatchReaderImpls<T>) {\n        super();\n        this._impl = impl;\n    }\n\n    public get closed() { return this._impl.closed; }\n    public get schema() { return this._impl.schema; }\n    public get autoDestroy() { return this._impl.autoDestroy; }\n    public get dictionaries() { return this._impl.dictionaries; }\n    public get numDictionaries() { return this._impl.numDictionaries; }\n    public get numRecordBatches() { return this._impl.numRecordBatches; }\n    public get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n\n    public isSync(): this is RecordBatchReaders<T> { return this._impl.isSync(); }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return this._impl.isAsync(); }\n    public isFile(): this is RecordBatchFileReaders<T> { return this._impl.isFile(); }\n    public isStream(): this is RecordBatchStreamReaders<T> { return this._impl.isStream(); }\n\n    public next() {\n        return this._impl.next();\n    }\n    public throw(value?: any) {\n        return this._impl.throw(value);\n    }\n    public return(value?: any) {\n        return this._impl.return(value);\n    }\n    public cancel() {\n        return this._impl.cancel();\n    }\n    public reset(schema?: Schema<T> | null): this {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    public open(options?: OpenOptions) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    public readRecordBatch(index: number): RecordBatch<T> | null | Promise<RecordBatch<T> | null> {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return (<IterableIterator<RecordBatch<T>>> this._impl)[Symbol.iterator]();\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return (<AsyncIterableIterator<RecordBatch<T>>> this._impl)[Symbol.asyncIterator]();\n    }\n    public toDOMStream() {\n        return streamAdapters.toDOMStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>));\n    }\n    public toNodeStream() {\n        return streamAdapters.toNodeStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>),\n            { objectMode: true });\n    }\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: ByteLengthQueuingStrategy,\n        // @ts-ignore\n        readableStrategy?: { autoDestroy: boolean }\n    ): { writable: WritableStream<Uint8Array>, readable: ReadableStream<RecordBatch<T>> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    public static from<T extends RecordBatchReader>(source: T): T;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg0): RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg1): Promise<RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg2): RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg3): Promise<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg4): Promise<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg5): Promise<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        } else if (isArrowJSON(source)) {\n            return fromArrowJSON<T>(source);\n        } else if (isFileHandle(source)) {\n            return fromFileHandle<T>(source);\n        } else if (isPromise<any>(source)) {\n            return (async () => await RecordBatchReader.from<any>(await source))();\n        } else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream<T>(new AsyncByteStream(source));\n        }\n        return fromByteStream<T>(new ByteStream(source));\n    }\n\n    public static readAll<T extends RecordBatchReader>(source: T): T extends RecordBatchReaders ? IterableIterator<T> : AsyncIterableIterator<T>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg0): IterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg1): AsyncIterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg2): IterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg3): AsyncIterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg4): AsyncIterableIterator<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg5): AsyncIterableIterator<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static readAll<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source as AsyncRecordBatchReaders<T>);\n        } else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable<ArrayBufferViewInput>(source) || isIteratorResult(source)) {\n            return readAllSync<T>(source) as IterableIterator<RecordBatchReaders<T>>;\n        }\n        return readAllAsync<T>(source) as AsyncIterableIterator<RecordBatchReaders<T> | AsyncRecordBatchReaders<T>>;\n    }\n}\n\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n\n/** @ignore */\nexport class RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: RecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator]() { return (this._impl as IterableIterator<RecordBatch<T>>)[Symbol.iterator](); }\n    public async *[Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: AsyncRecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    public [Symbol.asyncIterator]() { return (this._impl as AsyncIterableIterator<RecordBatch<T>>)[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    constructor(protected _impl: RecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    constructor(protected _impl: AsyncRecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n\n//\n// Now override the return types for each sync/async RecordBatchReader variant\n//\n\n/** @ignore */\nexport interface RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): this;\n    cancel(): void;\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): Promise<this>;\n    cancel(): Promise<void>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n}\n\n/** @ignore */\nexport interface RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\ntype RecordBatchReaderImpls<T extends { [key: string]: DataType } = any> =\n     RecordBatchJSONReaderImpl<T> |\n     RecordBatchFileReaderImpl<T> |\n     RecordBatchStreamReaderImpl<T> |\n     AsyncRecordBatchFileReaderImpl<T> |\n     AsyncRecordBatchStreamReaderImpl<T>;\n\n/** @ignore */\ninterface RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> {\n\n    closed: boolean;\n    schema: Schema<T>;\n    autoDestroy: boolean;\n    dictionaries: Map<number, Vector>;\n\n    isFile(): this is RecordBatchFileReaders<T>;\n    isStream(): this is RecordBatchStreamReaders<T>;\n    isSync(): this is RecordBatchReaders<T>;\n    isAsync(): this is AsyncRecordBatchReaders<T>;\n\n    reset(schema?: Schema<T> | null): this;\n}\n\n/** @ignore */\ninterface RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): this;\n    cancel(): void;\n\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n\n    [Symbol.iterator](): IterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): Promise<this>;\n    cancel(): Promise<void>;\n\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n\n    [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\nabstract class RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> implements RecordBatchReaderImpl<T> {\n\n    // @ts-ignore\n    public schema: Schema;\n    public closed = false;\n    public autoDestroy = true;\n    public dictionaries: Map<number, Vector>;\n\n    protected _dictionaryIndex = 0;\n    protected _recordBatchIndex = 0;\n    public get numDictionaries() { return this._dictionaryIndex; }\n    public get numRecordBatches() { return this._recordBatchIndex; }\n\n    constructor(dictionaries = new Map<number, Vector>()) {\n        this.dictionaries = dictionaries;\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return false; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return false; }\n    public isFile(): this is RecordBatchFileReaders<T> { return false; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return false; }\n\n    public reset(schema?: Schema<T> | null) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = <any> schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n\n    protected _loadRecordBatch(header: metadata.RecordBatch, body: any) {\n        return new RecordBatch<T>(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    protected _loadDictionaryBatch(header: metadata.DictionaryBatch, body: any) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id)!;\n            return (dictionary && isDelta ? dictionary.concat(\n                Vector.new(this._loadVectors(data, body, [type])[0])) :\n                Vector.new(this._loadVectors(data, body, [type])[0])) as Vector;\n        }\n        return dictionary;\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n/** @ignore */\nclass RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements IterableIterator<RecordBatch<T>> {\n\n    protected _reader: MessageReader;\n    protected _handle: ByteStream | ArrowJSONLike;\n\n    constructor(source: ByteStream | ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return this as IterableIterator<RecordBatch<T>>;\n    }\n    public cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()!))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    public throw(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public return(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public next(): IteratorResult<RecordBatch<T>> {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return this.return();\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements AsyncIterableIterator<RecordBatch<T>> {\n\n    protected _handle: AsyncByteStream;\n    protected _reader: AsyncMessageReader;\n\n    constructor(source: AsyncByteStream, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return this as AsyncIterableIterator<RecordBatch<T>>;\n    }\n    public async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public async open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())!))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    public async throw(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async return(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async next() {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return await this.return();\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return await this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n\n    // @ts-ignore\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: RandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: RandomAccessFile | ArrayBufferViewInput, dictionaries?: Map<number, Vector>) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    public readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Message<T> | null {\n        if (!this._footer) { this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T>\n    implements AsyncRecordBatchFileReaderImpl<T> {\n\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: AsyncRandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: FileHandle, byteLength?: number, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, ...rest: any[]) {\n        const byteLength = typeof rest[0] !== 'number' ? <number> rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? <Map<number, Vector>> rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public async open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    public async readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { await this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected async _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Promise<Message<T> | null> {\n        if (!this._footer) { await this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass RecordBatchJSONReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    constructor(source: ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(source, dictionaries);\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n\n/** @ignore */\nfunction shouldAutoDestroy(self: { autoDestroy: boolean }, options?: OpenOptions) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n\n/** @ignore */\nfunction* readAllSync<T extends { [key: string]: DataType } = any>(source: RecordBatchReaders<T> | FromArg0 | FromArg2) {\n    const reader = RecordBatchReader.from<T>(<any> source) as RecordBatchReaders<T>;\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do { yield reader; } while (!(reader.reset().open()).closed);\n        }\n    } finally { reader.cancel(); }\n}\n\n/** @ignore */\nasync function* readAllAsync<T extends { [key: string]: DataType } = any>(source: AsyncRecordBatchReaders<T> | FromArg1 | FromArg3 | FromArg4 | FromArg5) {\n    const reader = await RecordBatchReader.from<T>(<any> source) as RecordBatchReader<T>;\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do { yield reader; } while (!(await reader.reset().open()).closed);\n        }\n    } finally { await reader.cancel(); }\n}\n\n/** @ignore */\nfunction fromArrowJSON<T extends { [key: string]: DataType }>(source: ArrowJSONLike) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl<T>(source));\n}\n\n/** @ignore */\nfunction fromByteStream<T extends { [key: string]: DataType }>(source: ByteStream) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromAsyncByteStream<T extends { [key: string]: DataType }>(source: AsyncByteStream) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(async function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromFileHandle<T extends { [key: string]: DataType }>(source: FileHandle) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding) {\n        if (checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl<T>(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(file));\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from '../../util/buffer';\nimport { ReadableDOMStreamOptions } from '../../io/interfaces';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n\n/** @ignore */\nexport function toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n    if (isAsyncIterable<T>(source)) { return asyncIterableAsReadableDOMStream(source, options); }\n    if (isIterable<T>(source)) { return iterableAsReadableDOMStream(source, options); }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n\n/** @ignore */\nfunction iterableAsReadableDOMStream<T>(source: Iterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: Iterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    function next(controller: ReadableStreamDefaultController<T>, it: Iterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream<T>(source: AsyncIterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: AsyncIterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    async function next(controller: ReadableStreamDefaultController<T>, it: AsyncIterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { Vector } from '../../vector';\nimport { VectorType as V } from '../../interfaces';\nimport { Builder, BuilderOptions } from '../../builder/index';\n\n/** @ignore */\nexport interface BuilderTransformOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    readableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    writableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport function builderThroughDOMStream<T extends DataType = any, TNull = any>(options: BuilderTransformOptions<T, TNull>) {\n    return new BuilderTransform(options);\n}\n\n/** @ignore */\nexport class BuilderTransform<T extends DataType = any, TNull = any> {\n\n    public readable: ReadableStream<V<T>>;\n    public writable: WritableStream<T['TValue'] | TNull>;\n    public _controller: ReadableStreamDefaultController<V<T>> | null;\n\n    private _numChunks = 0;\n    private _finished = false;\n    private _bufferedSize = 0;\n    private _builder: Builder<T, TNull>;\n    private _getSize: (builder: Builder<T, TNull>) => number;\n\n    constructor(options: BuilderTransformOptions<T, TNull>) {\n\n        // Access properties by string indexers to defeat closure compiler\n\n        const {\n            ['readableStrategy']: readableStrategy,\n            ['writableStrategy']: writableStrategy,\n            ['queueingStrategy']: queueingStrategy = 'count',\n            ...builderOptions\n        } = options;\n\n        this._controller = null;\n        this._builder = Builder.new<T, TNull>(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n\n        this['readable'] = new ReadableStream<V<T>>({\n            ['cancel']: ()  => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value: T['TValue'] | TNull) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n\n    private _writeValueAndReturnChunkSize(value: T['TValue'] | TNull) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n\n    private _maybeFlush(builder: Builder<T, TNull>, controller: ReadableStreamDefaultController<V<T>> | null) {\n        if (controller === null) { return; }\n        if (this._bufferedSize >= controller.desiredSize!) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n\n    private _enqueue(controller: ReadableStreamDefaultController<V<T>>, chunk: V<T> | null) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n\n/** @ignore */ const chunkLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.length;\n/** @ignore */ const chunkByteLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.byteLength;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream<T extends { [key: string]: DataType } = any>(writableStrategy?: ByteLengthQueuingStrategy, readableStrategy?: { autoDestroy: boolean }) {\n\n    const queue = new AsyncByteQueue();\n    let reader: RecordBatchReader<T> | null = null;\n\n    const readable = new ReadableStream<RecordBatch<T>>({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n\n    async function open() {\n        return await (await RecordBatchReader.from<T>(queue)).open(readableStrategy);\n    }\n\n    async function next(controller: ReadableStreamDefaultController<RecordBatch<T>>, reader: RecordBatchReader<T>) {\n        let size = controller.desiredSize;\n        let r: IteratorResult<RecordBatch<T>> | null = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteStream } from '../../io/stream';\nimport { RecordBatchWriter } from '../../ipc/writer';\n\n/** @ignore */\nexport function recordBatchWriterThroughDOMStream<T extends { [key: string]: DataType } = any>(\n    this: typeof RecordBatchWriter,\n    writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n    readableStrategy?: { highWaterMark?: number, size?: any }\n) {\n\n    const writer = new this<T>(writableStrategy);\n    const reader = new AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n\n    async function next(controller: ReadableStreamDefaultController<Uint8Array>) {\n        let buf: Uint8Array | null = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { RecordBatch } from '../recordbatch';\nimport { DictionaryVector } from '../vector/dictionary';\n\n/** @ignore */\nexport type ValueFunc<T> = (idx: number, cols: RecordBatch) => T | null;\n/** @ignore */\nexport type PredicateFunc = (idx: number, cols: RecordBatch) => boolean;\n\n/** @ignore */\nexport abstract class Value<T> {\n    eq(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new Equals(this, other);\n    }\n    le(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new LTeq(this, other);\n    }\n    ge(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new GTeq(this, other);\n    }\n    lt(other: Value<T> | T): Predicate {\n        return new Not(this.ge(other));\n    }\n    gt(other: Value<T> | T): Predicate {\n        return new Not(this.le(other));\n    }\n    ne(other: Value<T> | T): Predicate {\n        return new Not(this.eq(other));\n    }\n}\n\n/** @ignore */\nexport class Literal<T= any> extends Value<T> {\n    constructor(public v: T) { super(); }\n}\n\n/** @ignore */\nexport class Col<T= any> extends Value<T> {\n    // @ts-ignore\n    public vector: Vector;\n    // @ts-ignore\n    public colidx: number;\n\n    constructor(public name: string) { super(); }\n    bind(batch: RecordBatch): (idx: number, batch?: RecordBatch) => any {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) { throw new Error(`Failed to bind Col \"${this.name}\"`); }\n        }\n\n        const vec = this.vector = batch.getChildAt(this.colidx)!;\n        return (idx: number) => vec.get(idx);\n    }\n}\n\n/** @ignore */\nexport abstract class Predicate {\n    abstract bind(batch: RecordBatch): PredicateFunc;\n    and(...expr: Predicate[]): And { return new And(this, ...expr); }\n    or(...expr: Predicate[]): Or { return new Or(this, ...expr); }\n    not(): Predicate { return new Not(this); }\n}\n\n/** @ignore */\nexport abstract class ComparisonPredicate<T= any> extends Predicate {\n    constructor(public readonly left: Value<T>, public readonly right: Value<T>) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            } else { // right is a Col\n\n                return this._bindLitCol(batch, this.left, this.right as Col);\n            }\n        } else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left as Col, this.right);\n            } else { // right is a Col\n                return this._bindColCol(batch, this.left as Col, this.right as Col);\n            }\n        }\n    }\n\n    protected abstract _bindLitLit(batch: RecordBatch, left: Literal, right: Literal): PredicateFunc;\n    protected abstract _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc;\n    protected abstract _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc;\n    protected abstract _bindLitCol(batch: RecordBatch, lit: Literal, col: Col): PredicateFunc;\n}\n\n/** @ignore */\nexport abstract class CombinationPredicate extends Predicate {\n    readonly children: Predicate[];\n    constructor(...children: Predicate[]) {\n        super();\n        this.children = children;\n    }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\n(<any> CombinationPredicate.prototype).children = Object.freeze([]); // freeze for safety\n\n/** @ignore */\nexport class And extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ands\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.every((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Or extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ors\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.some((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Equals extends ComparisonPredicate {\n    // Helpers used to cache dictionary reverse lookups between calls to bind\n    private lastDictionary: Vector|undefined;\n    private lastKey: number|undefined;\n\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v == right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, batch: RecordBatch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof DictionaryVector) {\n            let key: any;\n            const vector = col.vector as DictionaryVector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            } else {\n                key = this.lastKey;\n            }\n\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            } else {\n                return (idx: number) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        } else {\n            return (idx: number, cols: RecordBatch) => col_func(idx, cols) == lit.v;\n        }\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        // Equals is commutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\n\n/** @ignore */\nexport class LTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v <= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) <= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v <= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class GTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v >= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) >= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v >= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class Not extends Predicate {\n    constructor(public readonly child: Predicate) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        const func = this.child.bind(batch);\n        return (idx: number, batch: RecordBatch) => !func(idx, batch);\n    }\n}\n\n/** @ignore */\nexport class CustomPredicate extends Predicate {\n    constructor(private next: PredicateFunc, private bind_: (batch: RecordBatch) => void) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\n\nexport function lit(v: any): Value<any> { return new Literal(v); }\nexport function col(n: string): Col<any> { return new Col(n); }\nexport function and(...p: Predicate[]): And { return new And(...p); }\nexport function or(...p: Predicate[]): Or { return new Or(...p); }\nexport function custom(next: PredicateFunc, bind: (batch: RecordBatch) => void) {\n    return new CustomPredicate(next, bind);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { Vector } from '../vector';\nimport { IntVector } from '../vector/int';\nimport { Field, Schema } from '../schema';\nimport { Predicate, Col } from './predicate';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { DataType, Int, Struct, Dictionary } from '../type';\n\n/** @ignore */\nexport type BindFunc = (batch: RecordBatch) => void;\n/** @ignore */\nexport type NextFunc = (idx: number, batch: RecordBatch) => void;\n\nTable.prototype.countBy = function(this: Table, name: Col | string) { return new DataFrame(this.chunks).countBy(name); };\nTable.prototype.scan = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scan(next, bind); };\nTable.prototype.scanReverse = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scanReverse(next, bind); };\nTable.prototype.filter = function(this: Table, predicate: Predicate): FilteredDataFrame { return new DataFrame(this.chunks).filter(predicate); };\n\nexport class DataFrame<T extends { [key: string]: DataType } = any> extends Table<T> {\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(this.chunks, predicate);\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    public countBy(name: Col | string) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n\n/** @ignore */\nexport class CountByResult<T extends DataType = any, TCount extends Int = Int> extends Table<{ values: T,  counts: TCount }> {\n    constructor(values: Vector<T>, counts: V<TCount>) {\n        type R = { values: T, counts: TCount };\n        const schema = new Schema<R>([\n            new Field('values', values.type),\n            new Field('counts', counts.type)\n        ]);\n        super(new RecordBatch<R>(schema, counts.length, [values, counts]));\n    }\n    public toJSON(): Object {\n        const values = this.getColumnAt(0)!;\n        const counts = this.getColumnAt(1)!;\n        const result = {} as { [k: string]: number | null };\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\n\n/** @ignore */\nexport class FilteredDataFrame<T extends { [key: string]: DataType } = any> extends DataFrame<T> {\n    private _predicate: Predicate;\n    constructor (batches: RecordBatch<T>[], predicate: Predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public count(): number {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { ++sum; }\n            }\n        }\n        return sum;\n    }\n    public *[Symbol.iterator](): IterableIterator<Struct<T>['TValue']> {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { yield batch.get(index) as any; }\n            }\n        }\n    }\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(\n            this._chunks,\n            this._predicate.and(predicate)\n        );\n    }\n    public countBy(name: Col | string) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType } from './enum';\nexport { Data } from './data';\nexport {\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n} from './type';\n\nexport { Table } from './table';\nexport { Column } from './column';\nexport { Visitor } from './visitor';\nexport { Schema, Field } from './schema';\nexport {\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n} from './vector/index';\n\nexport {\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './builder/index';\n\nexport { ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink } from './io/stream';\nexport { RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader } from './ipc/reader';\nexport { RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter } from './ipc/writer';\nexport { MessageReader, AsyncMessageReader, JSONMessageReader } from './ipc/message';\nexport { Message } from './ipc/metadata/message';\nexport { RecordBatch } from './recordbatch';\nexport { ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions } from './io/interfaces';\nexport { DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc } from './compute/dataframe';\n\nimport * as util_bn_ from './util/bn';\nimport * as util_int_ from './util/int';\nimport * as util_bit_ from './util/bit';\nimport * as util_math_ from './util/math';\nimport * as util_buffer_ from './util/buffer';\nimport * as util_vector_ from './util/vector';\nimport * as predicate from './compute/predicate';\n\nexport { predicate };\n/** @ignore */\nexport const util = {\n    ...util_bn_,\n    ...util_int_,\n    ...util_bit_,\n    ...util_math_,\n    ...util_buffer_,\n    ...util_vector_\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './io/adapters';\nimport { Builder } from './builder/index';\nimport { RecordBatchReader } from './ipc/reader';\nimport { RecordBatchWriter } from './ipc/writer';\nimport { toDOMStream } from './io/whatwg/iterable';\nimport { builderThroughDOMStream } from './io/whatwg/builder';\nimport { recordBatchReaderThroughDOMStream } from './io/whatwg/reader';\nimport { recordBatchWriterThroughDOMStream } from './io/whatwg/writer';\n\nstreamAdapters.toDOMStream = toDOMStream;\nBuilder['throughDOM'] = builderThroughDOMStream;\nRecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nRecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\n\nexport {\n    ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType,\n    Data,\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n    Table,\n    Column,\n    Schema, Field,\n    Visitor,\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n    ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink,\n    RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader,\n    RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter,\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    Message,\n    RecordBatch,\n    ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions,\n    DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc,\n    predicate,\n    util,\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './Arrow';\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Table } from \"apache-arrow\";\nfunction renderHeader(ds, thead, columns) {\n    var tr = document.createElement('tr');\n    thead.appendChild(tr);\n    // Row number\n    var th = document.createElement('th');\n    tr.appendChild(th);\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n        var col = columns_1[_i];\n        var th_1 = document.createElement('th');\n        th_1.innerText = col;\n        tr.appendChild(th_1);\n    }\n}\nfunction renderBody(ds, tbody, columns) {\n    for (var i = 0; i < ds.length; i++) {\n        var tr = document.createElement('tr');\n        tbody.appendChild(tr);\n        // Row number\n        var td = document.createElement('td');\n        td.innerText = i.toString();\n        tr.appendChild(td);\n        var row = ds.get(i);\n        for (var j = 0; j < columns.length; j++) {\n            renderCell(row.getValue(j), tr);\n        }\n    }\n}\nfunction renderCell(data, tr) {\n    var td = document.createElement('td');\n    td.innerText = JSON.stringify(data);\n    tr.appendChild(td);\n}\nfunction renderTable(ds) {\n    var thead = document.querySelector('thead');\n    var tbody = document.querySelector('tbody');\n    thead.innerHTML = '';\n    tbody.innerHTML = '';\n    var columnNames = ds.schema.fields.map(function (f) { return f.name; });\n    renderHeader(ds, thead, columnNames);\n    renderBody(ds, tbody, columnNames);\n}\nfunction renderControls(ds) {\n    function stringifyMetadata(ds) {\n        return Array.from(ds.schema.metadata.entries()).map(function (_a) {\n            var k = _a[0], v = _a[1];\n            return k + \" => \\n \" + JSON.stringify(JSON.parse(v), null, 4);\n        }).join(\"\");\n    }\n    var metadataDiv = document.querySelector('.controls');\n    var checkbox = document.querySelector('.controls input');\n    var messageBox = document.querySelector('.controls pre');\n    var downloadLink = document.querySelector('.controls a');\n    downloadLink.href = document.querySelector('input').value;\n    metadataDiv.style.display = 'inline';\n    metadataDiv.onchange = function () {\n        if (checkbox.checked) {\n            messageBox.innerText = stringifyMetadata(ds);\n        }\n        else {\n            messageBox.innerText = '';\n        }\n    };\n}\nfunction cleanTable() {\n    console.log('cleanTable');\n    var thead = document.querySelector('thead');\n    var tbody = document.querySelector('tbody');\n    thead.innerHTML = '';\n    tbody.innerHTML = '';\n    var metadataDiv = document.querySelector('.controls');\n    metadataDiv.style.display = 'none';\n}\nfunction showArrow(url) {\n    return __awaiter(this, void 0, void 0, function () {\n        var table;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (url == null) {\n                        return [2 /*return*/];\n                    }\n                    return [4 /*yield*/, Table.from(fetch(url))];\n                case 1:\n                    table = _a.sent();\n                    console.log(table);\n                    window['table'] = table;\n                    console.log(table.schema);\n                    renderControls(table);\n                    renderTable(table);\n                    console.log('length: ', table.length);\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction main() {\n    var _this = this;\n    var button = document.querySelector('button');\n    var input = document.querySelector('input');\n    var params = new URLSearchParams(document.location.search);\n    if (params.has('file')) {\n        var url = params.get('file');\n        input.value = url;\n    }\n    var downloadAndShow = function () { return __awaiter(_this, void 0, void 0, function () {\n        var url, error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    button.innerText = \"loading ...\";\n                    cleanTable();\n                    url = input.value;\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, showArrow(url)];\n                case 2:\n                    _a.sent();\n                    return [3 /*break*/, 4];\n                case 3:\n                    error_1 = _a.sent();\n                    alert(error_1.message);\n                    return [3 /*break*/, 4];\n                case 4:\n                    button.innerText = \"SHOW\";\n                    return [2 /*return*/];\n            }\n        });\n    }); };\n    button.onclick = downloadAndShow;\n    input.onkeydown = function (ev) {\n        if (ev.key == 'Enter') {\n            downloadAndShow();\n        }\n    };\n}\nmain();\n"]}